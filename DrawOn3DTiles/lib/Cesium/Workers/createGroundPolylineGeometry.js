/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
/**
 * @license
 *
 * Grauw URI utilities
 *
 * See: http://hg.grauw.nl/grauw-lib/file/tip/src/uri.js
 *
 * @author Laurens Holst (http://www.grauw.nl/)
 *
 *   Copyright 2012 Laurens Holst
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 */

/**
  @license
  when.js - https://github.com/cujojs/when

  MIT License (c) copyright B Cavalier & J Hann

 * A lightweight CommonJS Promises/A and when() implementation
 * when is part of the cujo.js family of libraries (http://cujojs.com/)
 *
 * Licensed under the MIT License at:
 * http://www.opensource.org/licenses/mit-license.php
 *
 * @version 1.7.1
 */

/**
@license
mersenne-twister.js - https://gist.github.com/banksean/300494

   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,
   All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

     1. Redistributions of source code must retain the above copyright
        notice, this list of conditions and the following disclaimer.

     2. Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the distribution.

     3. The names of its contributors may not be used to endorse or promote
        products derived from this software without specific prior written
        permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/**
@license
sprintf.js from the php.js project - https://github.com/kvz/phpjs
Directly from https://github.com/kvz/phpjs/blob/master/functions/strings/sprintf.js

php.js is copyright 2012 Kevin van Zonneveld.

Portions copyright Brett Zamir (http://brett-zamir.me), Kevin van Zonneveld
(http://kevin.vanzonneveld.net), Onno Marsman, Theriault, Michael White
(http://getsprink.com), Waldo Malqui Silva, Paulo Freitas, Jack, Jonas
Raoni Soares Silva (http://www.jsfromhell.com), Philip Peterson, Legaev
Andrey, Ates Goral (http://magnetiq.com), Alex, Ratheous, Martijn Wieringa,
Rafa? Kukawski (http://blog.kukawski.pl), lmeyrick
(https://sourceforge.net/projects/bcmath-js/), Nate, Philippe Baumann,
Enrique Gonzalez, Webtoolkit.info (http://www.webtoolkit.info/), Carlos R.
L. Rodrigues (http://www.jsfromhell.com), Ash Searle
(http://hexmen.com/blog/), Jani Hartikainen, travc, Ole Vrijenhoek,
Erkekjetter, Michael Grier, Rafa? Kukawski (http://kukawski.pl), Johnny
Mast (http://www.phpvrouwen.nl), T.Wild, d3x,
http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript,
Rafa? Kukawski (http://blog.kukawski.pl/), stag019, pilus, WebDevHobo
(http://webdevhobo.blogspot.com/), marrtins, GeekFG
(http://geekfg.blogspot.com), Andrea Giammarchi
(http://webreflection.blogspot.com), Arpad Ray (mailto:arpad@php.net),
gorthaur, Paul Smith, Tim de Koning (http://www.kingsquare.nl), Joris, Oleg
Eremeev, Steve Hilder, majak, gettimeofday, KELAN, Josh Fraser
(http://onlineaspect.com/2007/06/08/auto-detect-a-time-zone-with-javascript/),
Marc Palau, Martin
(http://www.erlenwiese.de/), Breaking Par Consulting Inc
(http://www.breakingpar.com/bkp/home.nsf/0/87256B280015193F87256CFB006C45F7),
Chris, Mirek Slugen, saulius, Alfonso Jimenez
(http://www.alfonsojimenez.com), Diplom@t (http://difane.com/), felix,
Mailfaker (http://www.weedem.fr/), Tyler Akins (http://rumkin.com), Caio
Ariede (http://caioariede.com), Robin, Kankrelune
(http://www.webfaktory.info/), Karol Kowalski, Imgen Tata
(http://www.myipdf.com/), mdsjack (http://www.mdsjack.bo.it), Dreamer,
Felix Geisendoerfer (http://www.debuggable.com/felix), Lars Fischer, AJ,
David, Aman Gupta, Michael White, Public Domain
(http://www.json.org/json2.js), Steven Levithan
(http://blog.stevenlevithan.com), Sakimori, Pellentesque Malesuada,
Thunder.m, Dj (http://phpjs.org/functions/htmlentities:425#comment_134018),
Steve Clay, David James, Francois, class_exists, nobbler, T. Wild, Itsacon
(http://www.itsacon.net/), date, Ole Vrijenhoek (http://www.nervous.nl/),
Fox, Raphael (Ao RUDLER), Marco, noname, Mateusz "loonquawl" Zalega, Frank
Forte, Arno, ger, mktime, john (http://www.jd-tech.net), Nick Kolosov
(http://sammy.ru), marc andreu, Scott Cariss, Douglas Crockford
(http://javascript.crockford.com), madipta, Slawomir Kaniecki,
ReverseSyntax, Nathan, Alex Wilson, kenneth, Bayron Guevara, Adam Wallner
(http://web2.bitbaro.hu/), paulo kuong, jmweb, Lincoln Ramsay, djmix,
Pyerre, Jon Hohle, Thiago Mata (http://thiagomata.blog.com), lmeyrick
(https://sourceforge.net/projects/bcmath-js/this.), Linuxworld, duncan,
Gilbert, Sanjoy Roy, Shingo, sankai, Oskar Larsson H?gfeldt
(http://oskar-lh.name/), Denny Wardhana, 0m3r, Everlasto, Subhasis Deb,
josh, jd, Pier Paolo Ramon (http://www.mastersoup.com/), P, merabi, Soren
Hansen, Eugene Bulkin (http://doubleaw.com/), Der Simon
(http://innerdom.sourceforge.net/), echo is bad, Ozh, XoraX
(http://www.xorax.info), EdorFaus, JB, J A R, Marc Jansen, Francesco, LH,
Stoyan Kyosev (http://www.svest.org/), nord_ua, omid
(http://phpjs.org/functions/380:380#comment_137122), Brad Touesnard, MeEtc
(http://yass.meetcweb.com), Peter-Paul Koch
(http://www.quirksmode.org/js/beat.html), Olivier Louvignes
(http://mg-crea.com/), T0bsn, Tim Wiel, Bryan Elliott, Jalal Berrami,
Martin, JT, David Randall, Thomas Beaucourt (http://www.webapp.fr), taith,
vlado houba, Pierre-Luc Paour, Kristof Coomans (SCK-CEN Belgian Nucleair
Research Centre), Martin Pool, Kirk Strobeck, Rick Waldron, Brant Messenger
(http://www.brantmessenger.com/), Devan Penner-Woelk, Saulo Vallory, Wagner
B. Soares, Artur Tchernychev, Valentina De Rosa, Jason Wong
(http://carrot.org/), Christoph, Daniel Esteban, strftime, Mick@el, rezna,
Simon Willison (http://simonwillison.net), Anton Ongson, Gabriel Paderni,
Marco van Oort, penutbutterjelly, Philipp Lenssen, Bjorn Roesbeke
(http://www.bjornroesbeke.be/), Bug?, Eric Nagel, Tomasz Wesolowski,
Evertjan Garretsen, Bobby Drake, Blues (http://tech.bluesmoon.info/), Luke
Godfrey, Pul, uestla, Alan C, Ulrich, Rafal Kukawski, Yves Sucaet,
sowberry, Norman "zEh" Fuchs, hitwork, Zahlii, johnrembo, Nick Callen,
Steven Levithan (stevenlevithan.com), ejsanders, Scott Baker, Brian Tafoya
(http://www.premasolutions.com/), Philippe Jausions
(http://pear.php.net/user/jausions), Aidan Lister
(http://aidanlister.com/), Rob, e-mike, HKM, ChaosNo1, metjay, strcasecmp,
strcmp, Taras Bogach, jpfle, Alexander Ermolaev
(http://snippets.dzone.com/user/AlexanderErmolaev), DxGx, kilops, Orlando,
dptr1988, Le Torbi, James (http://www.james-bell.co.uk/), Pedro Tainha
(http://www.pedrotainha.com), James, Arnout Kazemier
(http://www.3rd-Eden.com), Chris McMacken, gabriel paderni, Yannoo,
FGFEmperor, baris ozdil, Tod Gentille, Greg Frazier, jakes, 3D-GRAF, Allan
Jensen (http://www.winternet.no), Howard Yeend, Benjamin Lupton, davook,
daniel airton wermann (http://wermann.com.br), Atli T¨®r, Maximusya, Ryan
W Tenney (http://ryan.10e.us), Alexander M Beedie, fearphage
(http://http/my.opera.com/fearphage/), Nathan Sepulveda, Victor, Matteo,
Billy, stensi, Cord, Manish, T.J. Leahy, Riddler
(http://www.frontierwebdev.com/), Rafa? Kukawski, FremyCompany, Matt
Bradley, Tim de Koning, Luis Salazar (http://www.freaky-media.com/), Diogo
Resende, Rival, Andrej Pavlovic, Garagoth, Le Torbi
(http://www.letorbi.de/), Dino, Josep Sanz (http://www.ws3.es/), rem,
Russell Walker (http://www.nbill.co.uk/), Jamie Beck
(http://www.terabit.ca/), setcookie, Michael, YUI Library:
http://developer.yahoo.com/yui/docs/YAHOO.util.DateLocale.html, Blues at
http://hacks.bluesmoon.info/strftime/strftime.js, Ben
(http://benblume.co.uk/), DtTvB
(http://dt.in.th/2008-09-16.string-length-in-bytes.html), Andreas, William,
meo, incidence, Cagri Ekin, Amirouche, Amir Habibi
(http://www.residence-mixte.com/), Luke Smith (http://lucassmith.name),
Kheang Hok Chin (http://www.distantia.ca/), Jay Klehr, Lorenzo Pisani,
Tony, Yen-Wei Liu, Greenseed, mk.keck, Leslie Hoare, dude, booeyOH, Ben
Bryan

Licensed under the MIT (MIT-LICENSE.txt) license.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL KEVIN VAN ZONNEVELD BE LIABLE FOR ANY CLAIM, DAMAGES
OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
*/

!function(){define("Core/defined",[],function(){"use strict";function e(e){return void 0!==e&&null!==e}return e}),define("Core/DeveloperError",["./defined"],function(e){"use strict";function t(e){this.name="DeveloperError",this.message=e;var t;try{throw new Error}catch(e){t=e.stack}this.stack=t}return e(Object.create)&&(t.prototype=Object.create(Error.prototype),t.prototype.constructor=t),t.prototype.toString=function(){var t=this.name+": "+this.message;return e(this.stack)&&(t+="\n"+this.stack.toString()),t},t.throwInstantiationError=function(){throw new t("This function defines an interface and should not be called directly.")},t}),define("ThirdParty/Uri",[],function(){function e(t){if(t instanceof e)this.scheme=t.scheme,this.authority=t.authority,this.path=t.path,this.query=t.query,this.fragment=t.fragment;else if(t){var n=r.exec(t);this.scheme=n[1],this.authority=n[2],this.path=n[3],this.query=n[4],this.fragment=n[5]}}function t(e){var t=unescape(e);return i.test(t)?t:e.toUpperCase()}function n(e,t,n,r){return(t||"")+n.toLowerCase()+(r||"")}e.prototype.scheme=null,e.prototype.authority=null,e.prototype.path="",e.prototype.query=null,e.prototype.fragment=null;var r=new RegExp("^(?:([^:/?#]+):)?(?://([^/?#]*))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?$");e.prototype.getScheme=function(){return this.scheme},e.prototype.getAuthority=function(){return this.authority},e.prototype.getPath=function(){return this.path},e.prototype.getQuery=function(){return this.query},e.prototype.getFragment=function(){return this.fragment},e.prototype.isAbsolute=function(){return!!this.scheme&&!this.fragment},e.prototype.isSameDocumentAs=function(e){return e.scheme==this.scheme&&e.authority==this.authority&&e.path==this.path&&e.query==this.query},e.prototype.equals=function(e){return this.isSameDocumentAs(e)&&e.fragment==this.fragment},e.prototype.normalize=function(){this.removeDotSegments(),this.scheme&&(this.scheme=this.scheme.toLowerCase()),this.authority&&(this.authority=this.authority.replace(o,n).replace(a,t)),this.path&&(this.path=this.path.replace(a,t)),this.query&&(this.query=this.query.replace(a,t)),this.fragment&&(this.fragment=this.fragment.replace(a,t))};var a=/%[0-9a-z]{2}/gi,i=/[a-zA-Z0-9\-\._~]/,o=/(.*@)?([^@:]*)(:.*)?/;return e.prototype.resolve=function(t){var n=new e;return this.scheme?(n.scheme=this.scheme,n.authority=this.authority,n.path=this.path,n.query=this.query):(n.scheme=t.scheme,this.authority?(n.authority=this.authority,n.path=this.path,n.query=this.query):(n.authority=t.authority,""==this.path?(n.path=t.path,n.query=this.query||t.query):("/"==this.path.charAt(0)?(n.path=this.path,n.removeDotSegments()):(t.authority&&""==t.path?n.path="/"+this.path:n.path=t.path.substring(0,t.path.lastIndexOf("/")+1)+this.path,n.removeDotSegments()),n.query=this.query))),n.fragment=this.fragment,n},e.prototype.removeDotSegments=function(){var e,t=this.path.split("/"),n=[],r=""==t[0];r&&t.shift();for(""==t[0]&&t.shift();t.length;)e=t.shift(),".."==e?n.pop():"."!=e&&n.push(e);"."!=e&&".."!=e||n.push(""),r&&n.unshift(""),this.path=n.join("/")},e.prototype.toString=function(){var e="";return this.scheme&&(e+=this.scheme+":"),this.authority&&(e+="//"+this.authority),e+=this.path,this.query&&(e+="?"+this.query),this.fragment&&(e+="#"+this.fragment),e},e}),define("Core/freezeObject",["./defined"],function(e){"use strict";var t=Object.freeze;return e(t)||(t=function(e){return e}),t}),define("Core/defaultValue",["./freezeObject"],function(e){"use strict";function t(e,t){return void 0!==e&&null!==e?e:t}return t.EMPTY_OBJECT=e({}),t}),define("Core/getAbsoluteUri",["../ThirdParty/Uri","./defaultValue","./defined","./DeveloperError"],function(e,t,n,r){"use strict";function a(e,t){var n;return"undefined"!=typeof document&&(n=document),a._implementation(e,t,n)}return a._implementation=function(r,a,i){if(!n(a)){if(void 0===i)return r;a=t(i.baseURI,i.location.href)}var o=new e(a);return new e(r).resolve(o).toString()},a}),function(e){"use strict";e("ThirdParty/when",[],function(){function e(e,n,r,a){return t(e).then(n,r,a)}function t(e){var t,n;return e instanceof r?t=e:s(e)?(n=o(),e.then(function(e){n.resolve(e)},function(e){n.reject(e)},function(e){n.progress(e)}),t=n.promise):t=a(e),t}function n(t){return e(t,i)}function r(e){this.then=e}function a(e){return new r(function(n){try{return t(n?n(e):e)}catch(e){return i(e)}})}function i(e){return new r(function(n,r){try{return r?t(r(e)):i(e)}catch(e){return i(e)}})}function o(){function e(e,t,n){return f(e,t,n)}function n(e){return p(e)}function a(e){return p(i(e))}function s(e){return m(e)}var c,u,l,d,f,m,p;return u=new r(e),c={then:e,resolve:n,reject:a,progress:s,promise:u,resolver:{resolve:n,reject:a,progress:s}},l=[],d=[],f=function(e,t,n){var r,a;return r=o(),a="function"==typeof n?function(e){try{r.progress(n(e))}catch(e){r.progress(e)}}:function(e){r.progress(e)},l.push(function(n){n.then(e,t).then(r.resolve,r.reject,a)}),d.push(a),r.promise},m=function(e){return h(d,e),e},p=function(e){return e=t(e),f=e.then,p=t,m=v,h(l,e),d=l=T,e},c}function s(e){return e&&"function"==typeof e.then}function c(t,n,r,a,i){return _(2,arguments),e(t,function(t){function s(e){h(e)}function c(e){p(e)}var u,l,d,f,m,p,h,_,g,y;if(g=t.length>>>0,u=Math.max(0,Math.min(n,g)),d=[],l=g-u+1,f=[],m=o(),u)for(_=m.progress,h=function(e){f.push(e),--l||(p=h=v,m.reject(f))},p=function(e){d.push(e),--u||(p=h=v,m.resolve(d))},y=0;y<g;++y)y in t&&e(t[y],c,s,_);else m.resolve(d);return m.then(r,a,i)})}function u(e,t,n,r){function a(e){return t?t(e[0]):e[0]}return c(e,1,a,n,r)}function l(e,t,n,r){return _(1,arguments),f(e,g).then(t,n,r)}function d(){return f(arguments,g)}function f(t,n){return e(t,function(t){var r,a,i,s,c,u;if(i=a=t.length>>>0,r=[],u=o(),i)for(s=function(t,a){e(t,n).then(function(e){r[a]=e,--i||u.resolve(r)},u.reject)},c=0;c<a;c++)c in t?s(t[c],c):--i;else u.resolve(r);return u.promise})}function m(t,n){var r=E.call(arguments,1);return e(t,function(t){var a;return a=t.length,r[0]=function(t,r,i){return e(t,function(t){return e(r,function(e){return n(t,e,i,a)})})},y.apply(t,r)})}function p(t,n,r){var a=arguments.length>2;return e(t,function(e){return e=a?r:e,n.resolve(e),e},function(e){return n.reject(e),i(e)},n.progress)}function h(e,t){for(var n,r=0;n=e[r++];)n(t)}function _(e,t){for(var n,r=t.length;r>e;)if(null!=(n=t[--r])&&"function"!=typeof n)throw new Error("arg "+r+" must be a function")}function v(){}function g(e){return e}var y,E,T;return e.defer=o,e.resolve=t,e.reject=n,e.join=d,e.all=l,e.map=f,e.reduce=m,e.any=u,e.some=c,e.chain=p,e.isPromise=s,r.prototype={always:function(e,t){return this.then(e,e,t)},otherwise:function(e){return this.then(T,e)},yield:function(e){return this.then(function(){return e})},spread:function(e){return this.then(function(t){return l(t,function(t){return e.apply(T,t)})})}},E=[].slice,y=[].reduce||function(e){var t,n,r,a,i;if(i=0,t=Object(this),a=t.length>>>0,n=arguments,n.length<=1)for(;;){if(i in t){r=t[i++];break}if(++i>=a)throw new TypeError}else r=n[1];for(;i<a;++i)i in t&&(r=e(r,t[i],i,t));return r},e})}("function"==typeof define&&define.amd?define:function(e){"object"==typeof exports?module.exports=e():this.when=e()}),define("Core/appendForwardSlash",[],function(){"use strict";function e(e){return 0!==e.length&&"/"===e[e.length-1]||(e+="/"),e}return e}),define("Core/Check",["./defined","./DeveloperError"],function(e,t){"use strict";function n(e){return e+" is required, actual value was undefined"}function r(e,t,n){return"Expected "+n+" to be typeof "+t+", actual typeof was "+e}var a={};return a.typeOf={},a.defined=function(r,a){if(!e(a))throw new t(n(r))},a.typeOf.func=function(e,n){if("function"!=typeof n)throw new t(r(typeof n,"function",e))},a.typeOf.string=function(e,n){if("string"!=typeof n)throw new t(r(typeof n,"string",e))},a.typeOf.number=function(e,n){if("number"!=typeof n)throw new t(r(typeof n,"number",e))},a.typeOf.number.lessThan=function(e,n,r){if(a.typeOf.number(e,n),n>=r)throw new t("Expected "+e+" to be less than "+r+", actual value was "+n)},a.typeOf.number.lessThanOrEquals=function(e,n,r){if(a.typeOf.number(e,n),n>r)throw new t("Expected "+e+" to be less than or equal to "+r+", actual value was "+n)},a.typeOf.number.greaterThan=function(e,n,r){if(a.typeOf.number(e,n),n<=r)throw new t("Expected "+e+" to be greater than "+r+", actual value was "+n)},a.typeOf.number.greaterThanOrEquals=function(e,n,r){if(a.typeOf.number(e,n),n<r)throw new t("Expected "+e+" to be greater than or equal to"+r+", actual value was "+n)},a.typeOf.object=function(e,n){if("object"!=typeof n)throw new t(r(typeof n,"object",e))},a.typeOf.bool=function(e,n){if("boolean"!=typeof n)throw new t(r(typeof n,"boolean",e))},a.typeOf.number.equals=function(e,n,r,i){if(a.typeOf.number(e,r),a.typeOf.number(n,i),r!==i)throw new t(e+" must be equal to "+n+", the actual values are "+r+" and "+i)},a}),define("Core/clone",["./defaultValue"],function(e){"use strict";function t(n,r){if(null===n||"object"!=typeof n)return n;r=e(r,!1);var a=new n.constructor;for(var i in n)if(n.hasOwnProperty(i)){var o=n[i];r&&(o=t(o,r)),a[i]=o}return a}return t}),define("Core/combine",["./defaultValue","./defined"],function(e,t){"use strict";function n(r,a,i){i=e(i,!1);var o,s,c,u={},l=t(r),d=t(a);if(l)for(o in r)r.hasOwnProperty(o)&&(s=r[o],d&&i&&"object"==typeof s&&a.hasOwnProperty(o)?(c=a[o],u[o]="object"==typeof c?n(s,c,i):s):u[o]=s);if(d)for(o in a)a.hasOwnProperty(o)&&!u.hasOwnProperty(o)&&(c=a[o],u[o]=c);return u}return n}),define("Core/defineProperties",["./defined"],function(e){"use strict";var t=function(){try{return"x"in Object.defineProperty({},"x",{})}catch(e){return!1}}(),n=Object.defineProperties;return t&&e(n)||(n=function(e){return e}),n}),define("Core/oneTimeWarning",["./defaultValue","./defined","./DeveloperError"],function(e,t,n){"use strict";function r(n,r){t(a[n])||(a[n]=!0,console.warn(e(r,n)))}var a={};return r.geometryOutlines="Entity geometry outlines are unsupported on terrain. Outlines will be disabled. To enable outlines, disable geometry terrain clamping by explicitly setting height to 0.",r.geometryZIndex="Entity geometry with zIndex are unsupported when height or extrudedHeight are defined.  zIndex will be ignored",r}),define("Core/deprecationWarning",["./defined","./DeveloperError","./oneTimeWarning"],function(e,t,n){"use strict";function r(e,t){n(e,t)}return r}),define("Core/Fullscreen",["./defined","./defineProperties"],function(e,t){"use strict";var n,r={requestFullscreen:void 0,exitFullscreen:void 0,fullscreenEnabled:void 0,fullscreenElement:void 0,fullscreenchange:void 0,fullscreenerror:void 0},a={};return t(a,{element:{get:function(){if(a.supportsFullscreen())return document[r.fullscreenElement]}},changeEventName:{get:function(){if(a.supportsFullscreen())return r.fullscreenchange}},errorEventName:{get:function(){if(a.supportsFullscreen())return r.fullscreenerror}},enabled:{get:function(){if(a.supportsFullscreen())return document[r.fullscreenEnabled]}},fullscreen:{get:function(){if(a.supportsFullscreen())return null!==a.element}}}),a.supportsFullscreen=function(){if(e(n))return n;n=!1;var t=document.body;if("function"==typeof t.requestFullscreen)return r.requestFullscreen="requestFullscreen",r.exitFullscreen="exitFullscreen",r.fullscreenEnabled="fullscreenEnabled",r.fullscreenElement="fullscreenElement",r.fullscreenchange="fullscreenchange",r.fullscreenerror="fullscreenerror",n=!0;for(var a,i=["webkit","moz","o","ms","khtml"],o=0,s=i.length;o<s;++o){var c=i[o];a=c+"RequestFullscreen","function"==typeof t[a]?(r.requestFullscreen=a,n=!0):(a=c+"RequestFullScreen","function"==typeof t[a]&&(r.requestFullscreen=a,n=!0)),a=c+"ExitFullscreen","function"==typeof document[a]?r.exitFullscreen=a:(a=c+"CancelFullScreen","function"==typeof document[a]&&(r.exitFullscreen=a)),a=c+"FullscreenEnabled",void 0!==document[a]?r.fullscreenEnabled=a:(a=c+"FullScreenEnabled",void 0!==document[a]&&(r.fullscreenEnabled=a)),a=c+"FullscreenElement",void 0!==document[a]?r.fullscreenElement=a:(a=c+"FullScreenElement",void 0!==document[a]&&(r.fullscreenElement=a)),a=c+"fullscreenchange",void 0!==document["on"+a]&&("ms"===c&&(a="MSFullscreenChange"),r.fullscreenchange=a),a=c+"fullscreenerror",void 0!==document["on"+a]&&("ms"===c&&(a="MSFullscreenError"),r.fullscreenerror=a)}return n},a.requestFullscreen=function(e,t){a.supportsFullscreen()&&e[r.requestFullscreen]({vrDisplay:t})},a.exitFullscreen=function(){a.supportsFullscreen()&&document[r.exitFullscreen]()},a}),define("Core/FeatureDetection",["./defaultValue","./defined","./Fullscreen"],function(e,t,n){"use strict";function r(e){for(var t=e.split("."),n=0,r=t.length;n<r;++n)t[n]=parseInt(t[n],10);return t}function a(){if(!t(T)&&(T=!1,!f())){var e=/ Chrome\/([\.0-9]+)/.exec(E.userAgent);null!==e&&(T=!0,C=r(e[1]))}return T}function i(){return a()&&C}function o(){if(!t(S)&&(S=!1,!a()&&!f()&&/ Safari\/[\.0-9]+/.test(E.userAgent))){var e=/ Version\/([\.0-9]+)/.exec(E.userAgent);null!==e&&(S=!0,A=r(e[1]))}return S}function s(){return o()&&A}function c(){if(!t(x)){x=!1;var e=/ AppleWebKit\/([\.0-9]+)(\+?)/.exec(E.userAgent);null!==e&&(x=!0,w=r(e[1]),w.isNightly=!!e[2])}return x}function u(){return c()&&w}function l(){if(!t(b)){b=!1;var e;"Microsoft Internet Explorer"===E.appName?null!==(e=/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(E.userAgent))&&(b=!0,R=r(e[1])):"Netscape"===E.appName&&null!==(e=/Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(E.userAgent))&&(b=!0,R=r(e[1]))}return b}function d(){return l()&&R}function f(){if(!t(I)){I=!1;var e=/ Edge\/([\.0-9]+)/.exec(E.userAgent);null!==e&&(I=!0,z=r(e[1]))}return I}function m(){return f()&&z}function p(){if(!t(D)){D=!1;var e=/Firefox\/([\.0-9]+)/.exec(E.userAgent);null!==e&&(D=!0,O=r(e[1]))}return D}function h(){return t(P)||(P=/Windows/i.test(E.appVersion)),P}function _(){return p()&&O}function v(){return t(M)||(M="undefined"!=typeof PointerEvent&&(!t(E.pointerEnabled)||E.pointerEnabled)),M}function g(){if(!t(F)){var e=document.createElement("canvas");e.setAttribute("style","image-rendering: -moz-crisp-edges;image-rendering: pixelated;");var n=e.style.imageRendering;F=t(n)&&""!==n,F&&(N=n)}return F}function y(){return g()?N:void 0}var E;E="undefined"!=typeof navigator?navigator:{};var T,C,S,A,x,w,b,R,I,z,D,O,P,M,N,F,L=[];"undefined"!=typeof ArrayBuffer&&(L.push(Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array),"undefined"!=typeof Uint8ClampedArray&&L.push(Uint8ClampedArray),"undefined"!=typeof CanvasPixelArray&&L.push(CanvasPixelArray));var B={isChrome:a,chromeVersion:i,isSafari:o,safariVersion:s,isWebkit:c,webkitVersion:u,isInternetExplorer:l,internetExplorerVersion:d,isEdge:f,edgeVersion:m,isFirefox:p,firefoxVersion:_,isWindows:h,hardwareConcurrency:e(E.hardwareConcurrency,3),supportsPointerEvents:v,supportsImageRenderingPixelated:g,imageRenderingValue:y,typedArrayTypes:L};return B.supportsFullscreen=function(){return n.supportsFullscreen()},B.supportsTypedArrays=function(){return"undefined"!=typeof ArrayBuffer},B.supportsWebWorkers=function(){return"undefined"!=typeof Worker},B.supportsWebAssembly=function(){return"undefined"!=typeof WebAssembly&&!B.isEdge()},B}),define("Core/getBaseUri",["../ThirdParty/Uri","./defined","./DeveloperError"],function(e,t,n){"use strict";function r(n,r){var a="",i=n.lastIndexOf("/");return-1!==i&&(a=n.substring(0,i+1)),r?(n=new e(n),t(n.query)&&(a+="?"+n.query),t(n.fragment)&&(a+="#"+n.fragment),a):a}return r}),define("Core/getExtensionFromUri",["../ThirdParty/Uri","./defined","./DeveloperError"],function(e,t,n){"use strict";function r(t){var n=new e(t);n.normalize();var r=n.path,a=r.lastIndexOf("/");return-1!==a&&(r=r.substr(a+1)),a=r.lastIndexOf("."),r=-1===a?"":r.substr(a+1)}return r}),define("Core/isBlobUri",["./Check"],function(e){"use strict";function t(e){return n.test(e)}var n=/^blob:/i;return t}),define("Core/isCrossOriginUrl",["./defined"],function(e){"use strict";function t(t){e(n)||(n=document.createElement("a")),n.href=window.location.href;var r=n.host,a=n.protocol;return n.href=t,n.href=n.href,a!==n.protocol||r!==n.host}var n;return t}),define("Core/isDataUri",["./Check"],function(e){"use strict";function t(e){return n.test(e)}var n=/^data:/i;return t}),define("Core/isArray",["./defined"],function(e){"use strict";var t=Array.isArray;return e(t)||(t=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),t}),define("Core/objectToQuery",["./defined","./DeveloperError","./isArray"],function(e,t,n){"use strict";function r(e){var t="";for(var r in e)if(e.hasOwnProperty(r)){var a=e[r],i=encodeURIComponent(r)+"=";if(n(a))for(var o=0,s=a.length;o<s;++o)t+=i+encodeURIComponent(a[o])+"&";else t+=i+encodeURIComponent(a)+"&"}return t=t.slice(0,-1)}return r}),define("Core/queryToObject",["./defined","./DeveloperError","./isArray"],function(e,t,n){"use strict";function r(t){var r={};if(""===t)return r;for(var a=t.replace(/\+/g,"%20").split(/[&;]/),i=0,o=a.length;i<o;++i){var s=a[i].split("="),c=decodeURIComponent(s[0]),u=s[1];u=e(u)?decodeURIComponent(u):"";var l=r[c];"string"==typeof l?r[c]=[l,u]:n(l)?l.push(u):r[c]=u}return r}return r}),define("Core/RequestState",["../Core/freezeObject"],function(e){"use strict";return e({UNISSUED:0,ISSUED:1,ACTIVE:2,RECEIVED:3,CANCELLED:4,FAILED:5})}),define("Core/RequestType",["../Core/freezeObject"],function(e){"use strict";return e({TERRAIN:0,IMAGERY:1,TILES3D:2,OTHER:3})}),define("Core/Request",["./defaultValue","./defined","./RequestState","./RequestType"],function(e,t,n,r){"use strict";function a(t){t=e(t,e.EMPTY_OBJECT);var a=e(t.throttleByServer,!1),i=a||e(t.throttle,!1);this.url=t.url,this.requestFunction=t.requestFunction,this.cancelFunction=t.cancelFunction,this.priorityFunction=t.priorityFunction,this.priority=e(t.priority,0),this.throttle=i,this.throttleByServer=a,this.type=e(t.type,r.OTHER),this.serverKey=void 0,this.state=n.UNISSUED,this.deferred=void 0,this.cancelled=!1}return a.prototype.cancel=function(){this.cancelled=!0},a.prototype.clone=function(e){return t(e)?(e.url=this.url,e.requestFunction=this.requestFunction,e.cancelFunction=this.cancelFunction,e.priorityFunction=this.priorityFunction,e.priority=this.priority,e.throttle=this.throttle,e.throttleByServer=this.throttleByServer,e.type=this.type,e.serverKey=this.serverKey,e.state=this.RequestState.UNISSUED,e.deferred=void 0,e.cancelled=!1,e):new a(this)},a}),define("Core/parseResponseHeaders",[],function(){"use strict";function e(e){var t={};if(!e)return t;for(var n=e.split("\r\n"),r=0;r<n.length;++r){var a=n[r],i=a.indexOf(": ");if(i>0){var o=a.substring(0,i),s=a.substring(i+2);t[o]=s}}return t}return e}),define("Core/RequestErrorEvent",["./defined","./parseResponseHeaders"],function(e,t){"use strict";function n(e,n,r){this.statusCode=e,this.response=n,this.responseHeaders=r,"string"==typeof this.responseHeaders&&(this.responseHeaders=t(this.responseHeaders))}return n.prototype.toString=function(){var t="Request has failed.";return e(this.statusCode)&&(t+=" Status Code: "+this.statusCode),t},n}),define("Core/Event",["./Check","./defined","./defineProperties"],function(e,t,n){"use strict";function r(){this._listeners=[],this._scopes=[],this._toRemove=[],this._insideRaiseEvent=!1}function a(e,t){return t-e}return n(r.prototype,{numberOfListeners:{get:function(){return this._listeners.length-this._toRemove.length}}}),r.prototype.addEventListener=function(e,t){this._listeners.push(e),this._scopes.push(t);var n=this;return function(){n.removeEventListener(e,t)}},r.prototype.removeEventListener=function(e,t){for(var n=this._listeners,r=this._scopes,a=-1,i=0;i<n.length;i++)if(n[i]===e&&r[i]===t){a=i;break}return-1!==a&&(this._insideRaiseEvent?(this._toRemove.push(a),n[a]=void 0,r[a]=void 0):(n.splice(a,1),r.splice(a,1)),!0)},r.prototype.raiseEvent=function(){this._insideRaiseEvent=!0;var e,n=this._listeners,r=this._scopes,i=n.length;for(e=0;e<i;e++){var o=n[e];t(o)&&n[e].apply(r[e],arguments)}var s=this._toRemove;if((i=s.length)>0){for(s.sort(a),e=0;e<i;e++){var c=s[e];n.splice(c,1),r.splice(c,1)}s.length=0}this._insideRaiseEvent=!1},r}),define("Core/Heap",["./Check","./defaultValue","./defined","./defineProperties"],function(e,t,n,r){"use strict";function a(e){this._comparator=e.comparator,this._array=[],this._length=0,this._maximumLength=void 0}function i(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}return r(a.prototype,{length:{get:function(){return this._length}},internalArray:{get:function(){return this._array}},maximumLength:{get:function(){return this._maximumLength},set:function(e){this._maximumLength=e,this._length>e&&e>0&&(this._length=e,this._array.length=e)}},comparator:{get:function(){return this._comparator}}}),a.prototype.reserve=function(e){e=t(e,this._length),this._array.length=e},a.prototype.heapify=function(e){e=t(e,0);for(var n=this._length,r=this._comparator,a=this._array,o=-1,s=!0;s;){var c=2*(e+1),u=c-1;o=u<n&&r(a[u],a[e])<0?u:e,c<n&&r(a[c],a[o])<0&&(o=c),o!==e?(i(a,o,e),e=o):s=!1}},a.prototype.resort=function(){for(var e=this._length,t=Math.ceil(e/2);t>=0;--t)this.heapify(t)},a.prototype.insert=function(e){var t=this._array,r=this._comparator,a=this._maximumLength,o=this._length++;for(o<t.length?t[o]=e:t.push(e);0!==o;){var s=Math.floor((o-1)/2);if(!(r(t[o],t[s])<0))break;i(t,o,s),o=s}var c;return n(a)&&this._length>a&&(c=t[a],this._length=a),c},a.prototype.pop=function(e){if(e=t(e,0),0!==this._length){var n=this._array,r=n[e];return i(n,e,--this._length),this.heapify(e),r}},a}),define("Core/RequestScheduler",["../ThirdParty/Uri","../ThirdParty/when","./Check","./defaultValue","./defined","./defineProperties","./Event","./Heap","./isBlobUri","./isDataUri","./RequestState"],function(e,t,n,r,a,i,o,s,c,u,l){"use strict";function d(e,t){return e.priority-t.priority}function f(){}function m(e){a(e.priorityFunction)&&(e.priority=e.priorityFunction())}function p(e){var t=r(f.requestsByServer[e],f.maximumRequestsPerServer);return w[e]<t}function h(e){return e.state===l.UNISSUED&&(e.state=l.ISSUED,e.deferred=t.defer()),e.deferred.promise}function _(e){return function(t){e.state!==l.CANCELLED&&(--C.numberOfActiveRequests,--w[e.serverKey],R.raiseEvent(),e.state=l.RECEIVED,e.deferred.resolve(t))}}function v(e){return function(t){e.state!==l.CANCELLED&&(++C.numberOfFailedRequests,--C.numberOfActiveRequests,--w[e.serverKey],R.raiseEvent(t),e.state=l.FAILED,e.deferred.reject(t))}}function g(e){var t=h(e);return e.state=l.ACTIVE,x.push(e),++C.numberOfActiveRequests,++C.numberOfActiveRequestsEver,++w[e.serverKey],e.requestFunction().then(_(e)).otherwise(v(e)),t}function y(e){var t=e.state===l.ACTIVE;e.state=l.CANCELLED,++C.numberOfCancelledRequests,e.deferred.reject(),t&&(--C.numberOfActiveRequests,--w[e.serverKey],++C.numberOfCancelledActiveRequests),a(e.cancelFunction)&&e.cancelFunction()}function E(){C.numberOfAttemptedRequests=0,C.numberOfCancelledRequests=0,C.numberOfCancelledActiveRequests=0}function T(){f.debugShowStatistics&&(C.numberOfAttemptedRequests>0&&console.log("Number of attempted requests: "+C.numberOfAttemptedRequests),C.numberOfActiveRequests>0&&console.log("Number of active requests: "+C.numberOfActiveRequests),C.numberOfCancelledRequests>0&&console.log("Number of cancelled requests: "+C.numberOfCancelledRequests),C.numberOfCancelledActiveRequests>0&&console.log("Number of cancelled active requests: "+C.numberOfCancelledActiveRequests),C.numberOfFailedRequests>0&&console.log("Number of failed requests: "+C.numberOfFailedRequests),E())}var C={numberOfAttemptedRequests:0,numberOfActiveRequests:0,numberOfCancelledRequests:0,numberOfCancelledActiveRequests:0,numberOfFailedRequests:0,numberOfActiveRequestsEver:0},S=20,A=new s({comparator:d});A.maximumLength=S,A.reserve(S);var x=[],w={},b="undefined"!=typeof document?new e(document.location.href):new e,R=new o;return f.maximumRequests=50,f.maximumRequestsPerServer=6,f.requestsByServer={"api.cesium.com:443":18,"assets.cesium.com:443":18},f.throttleRequests=!0,f.debugShowStatistics=!1,f.requestCompletedEvent=R,i(f,{statistics:{get:function(){return C}},priorityHeapLength:{get:function(){return S},set:function(e){if(e<S)for(;A.length>e;){var t=A.pop();y(t)}S=e,A.maximumLength=e,A.reserve(e)}}}),f.update=function(){var e,t,n=0,r=x.length;for(e=0;e<r;++e)t=x[e],t.cancelled&&y(t),t.state===l.ACTIVE?n>0&&(x[e-n]=t):++n;x.length-=n;var a=A.internalArray,i=A.length;for(e=0;e<i;++e)m(a[e]);A.resort();for(var o=Math.max(f.maximumRequests-x.length,0),s=0;s<o&&A.length>0;)t=A.pop(),t.cancelled?y(t):!t.throttleByServer||p(t.serverKey)?(g(t),++s):y(t);T()},f.getServerKey=function(t){var n=new e(t).resolve(b);n.normalize();var r=n.authority;/:/.test(r)||(r=r+":"+("https"===n.scheme?"443":"80"));var i=w[r];return a(i)||(w[r]=0),r},f.request=function(e){if(u(e.url)||c(e.url))return R.raiseEvent(),e.state=l.RECEIVED,e.requestFunction();if(++C.numberOfAttemptedRequests,a(e.serverKey)||(e.serverKey=f.getServerKey(e.url)),!f.throttleRequests||!e.throttle)return g(e);if(!(x.length>=f.maximumRequests)&&(!e.throttleByServer||p(e.serverKey))){m(e);var t=A.insert(e);if(a(t)){if(t===e)return;y(t)}return h(e)}},f.clearForSpecs=function(){for(;A.length>0;){y(A.pop())}for(var e=x.length,t=0;t<e;++t)y(x[t]);x.length=0,w={},C.numberOfAttemptedRequests=0,C.numberOfActiveRequests=0,C.numberOfCancelledRequests=0,C.numberOfCancelledActiveRequests=0,C.numberOfFailedRequests=0,C.numberOfActiveRequestsEver=0},f.numberOfActiveRequestsByServer=function(e){return w[e]},f.requestHeap=A,f}),define("Core/RuntimeError",["./defined"],function(e){"use strict";function t(e){this.name="RuntimeError",this.message=e;var t;try{throw new Error}catch(e){t=e.stack}this.stack=t}return e(Object.create)&&(t.prototype=Object.create(Error.prototype),t.prototype.constructor=t),t.prototype.toString=function(){var t=this.name+": "+this.message;return e(this.stack)&&(t+="\n"+this.stack.toString()),t},t}),define("Core/TrustedServers",["../ThirdParty/Uri","./defined","./DeveloperError"],function(e,t,n){"use strict";function r(n){var r=new e(n);r.normalize();var a=r.getAuthority();if(t(a)){if(-1!==a.indexOf("@")){a=a.split("@")[1]}if(-1===a.indexOf(":")){var i=r.getScheme();if(t(i)||(i=window.location.protocol,i=i.substring(0,i.length-1)),"http"===i)a+=":80";else{if("https"!==i)return;a+=":443"}}return a}}var a={},i={};return a.add=function(e,n){var r=e.toLowerCase()+":"+n;t(i[r])||(i[r]=!0)},a.remove=function(e,n){var r=e.toLowerCase()+":"+n;t(i[r])&&delete i[r]},a.contains=function(e){var n=r(e);return!(!t(n)||!t(i[n]))},a.clear=function(){i={}},a}),define("Core/Resource",["../ThirdParty/Uri","../ThirdParty/when","./appendForwardSlash","./Check","./clone","./combine","./defaultValue","./defined","./defineProperties","./deprecationWarning","./DeveloperError","./FeatureDetection","./freezeObject","./getAbsoluteUri","./getBaseUri","./getExtensionFromUri","./isBlobUri","./isCrossOriginUrl","./isDataUri","./objectToQuery","./queryToObject","./Request","./RequestErrorEvent","./RequestScheduler","./RequestState","./RuntimeError","./TrustedServers"],function(e,t,n,r,a,i,o,s,c,u,l,d,f,m,p,h,_,v,g,y,E,T,C,S,A,x,w){"use strict";function b(e,t,n,r){var a=e.query;if(!s(a)||0===a.length)return{};var i;if(-1===a.indexOf("=")){var o={};o[a]=void 0,i=o}else i=E(a);t._queryParameters=n?D(i,t._queryParameters,r):i,e.query=void 0}function R(e,t){var n=t._queryParameters,r=Object.keys(n);1!==r.length||s(n[r[0]])?e.query=y(n):e.query=r[0]}function I(e,t){return s(e)?s(e.clone)?e.clone():a(e):t}function z(e){if(e.state===A.ISSUED||e.state===A.ACTIVE)throw new x("The Resource is already being fetched.");e.state=A.UNISSUED,e.deferred=void 0}function D(e,t,n){if(!n)return i(e,t);var r=a(e,!0);for(var o in t)if(t.hasOwnProperty(o)){var c=r[o],u=t[o];s(c)?(Array.isArray(c)||(c=r[o]=[c]),r[o]=c.concat(u)):r[o]=Array.isArray(u)?u.slice():u}return r}function O(t){t=o(t,o.EMPTY_OBJECT),"string"==typeof t&&(t={url:t}),this._url=void 0,this._templateValues=I(t.templateValues,{}),this._queryParameters=I(t.queryParameters,{}),this.headers=I(t.headers,{}),this.request=o(t.request,new T),this.proxy=t.proxy,this.retryCallback=t.retryCallback,this.retryAttempts=o(t.retryAttempts,0),this._retryCount=0;var n=new e(t.url);b(n,this,!0,!0),n.fragment=void 0,this._url=n.toString()}function P(e){var n=e.request;n.url=e.url,n.requestFunction=function(){var n=e.url,r=!1;e.isDataUri||e.isBlobUri||(r=e.isCrossOriginUrl);var a=t.defer();return O._Implementations.createImage(n,r,a),a.promise};var r=S.request(n);if(s(r))return r.otherwise(function(r){return n.state!==A.FAILED?t.reject(r):e.retryOnError(r).then(function(a){return a?(n.state=A.UNISSUED,n.deferred=void 0,P(e)):t.reject(r)})})}function M(e,n,r){var a={};a[n]=r,e.setQueryParameters(a);var i=e.request;i.url=e.url,i.requestFunction=function(){var n=t.defer();return window[r]=function(e){n.resolve(e);try{delete window[r]}catch(e){window[r]=void 0}},O._Implementations.loadAndExecuteScript(e.url,r,n),n.promise};var o=S.request(i);if(s(o))return o.otherwise(function(a){return i.state!==A.FAILED?t.reject(a):e.retryOnError(a).then(function(o){return o?(i.state=A.UNISSUED,i.deferred=void 0,M(e,n,r)):t.reject(a)})})}function N(e,t){var n=decodeURIComponent(t);return e?atob(n):n}function F(e,t){for(var n=N(e,t),r=new ArrayBuffer(n.length),a=new Uint8Array(r),i=0;i<n.length;i++)a[i]=n.charCodeAt(i);return r}function L(e,t){t=o(t,"");var n=e[1],r=!!e[2],a=e[3];switch(t){case"":case"text":return N(r,a);case"arraybuffer":return F(r,a);case"blob":var i=F(r,a);return new Blob([i],{type:n});case"document":return(new DOMParser).parseFromString(N(r,a),n);case"json":return JSON.parse(N(r,a))}}function B(e,t){switch(t){case"text":return e.toString("utf8");case"json":return JSON.parse(e.toString("utf8"));default:return new Uint8Array(e).buffer}}function U(e,t,n,r,a,i,o){var s=require("url").parse(e),c="https:"===s.protocol?require("https"):require("http"),u=require("zlib"),l={protocol:s.protocol,hostname:s.hostname,port:s.port,path:s.path,query:s.query,method:n,headers:a};c.request(l).on("response",function(e){if(e.statusCode<200||e.statusCode>=300)return void i.reject(new C(e.statusCode,e,e.headers));var n=[];e.on("data",function(e){n.push(e)}),e.on("end",function(){var r=Buffer.concat(n);"gzip"===e.headers["content-encoding"]?u.gunzip(r,function(e,n){e?i.reject(new x("Error decompressing response.")):i.resolve(B(n,t))}):i.resolve(B(r,t))})}).on("error",function(e){i.reject(new C)}).end()}var G=function(){try{var e=new XMLHttpRequest;return e.open("GET","#",!0),e.responseType="blob","blob"===e.responseType}catch(e){return!1}}();O.createIfNeeded=function(e){return e instanceof O?e.getDerivedResource({request:e.request}):"string"!=typeof e?e:new O({url:e})},c(O,{isBlobSupported:{get:function(){return G}}}),c(O.prototype,{queryParameters:{get:function(){return this._queryParameters}},templateValues:{get:function(){return this._templateValues}},url:{get:function(){return this.getUrlComponent(!0,!0)},set:function(t){var n=new e(t);b(n,this,!1),n.fragment=void 0,this._url=n.toString()}},extension:{get:function(){return h(this._url)}},isDataUri:{get:function(){return g(this._url)}},isBlobUri:{get:function(){return _(this._url)}},isCrossOriginUrl:{get:function(){return v(this._url)}},hasHeaders:{get:function(){return Object.keys(this.headers).length>0}}}),O.prototype.getUrlComponent=function(t,n){if(this.isDataUri)return this._url;var r=new e(this._url);t&&R(r,this);var a=r.toString().replace(/%7B/g,"{").replace(/%7D/g,"}"),i=this._templateValues,o=Object.keys(i);if(o.length>0)for(var c=0;c<o.length;c++){var u=o[c],l=i[u];a=a.replace(new RegExp("{"+u+"}","g"),encodeURIComponent(l))}return n&&s(this.proxy)&&(a=this.proxy.getURL(a)),a},O.prototype.setQueryParameters=function(e,t){this._queryParameters=t?D(this._queryParameters,e,!1):D(e,this._queryParameters,!1)},O.prototype.addQueryParameters=function(e,t){
return u("Resource.addQueryParameters","addQueryParameters has been deprecated and will be removed 1.45. Use setQueryParameters or appendQueryParameters instead."),this.setQueryParameters(e,t)},O.prototype.appendQueryParameters=function(e){this._queryParameters=D(e,this._queryParameters,!0)},O.prototype.setTemplateValues=function(e,t){this._templateValues=t?i(this._templateValues,e):i(e,this._templateValues)},O.prototype.addTemplateValues=function(e,t){return u("Resource.addTemplateValues","addTemplateValues has been deprecated and will be removed 1.45. Use setTemplateValues."),this.setTemplateValues(e,t)},O.prototype.getDerivedResource=function(t){var n=this.clone();if(n._retryCount=0,s(t.url)){var r=new e(t.url);b(r,n,!0,o(t.preserveQueryParameters,!1)),r.fragment=void 0,n._url=r.resolve(new e(m(this._url))).toString()}return s(t.queryParameters)&&(n._queryParameters=i(t.queryParameters,n._queryParameters)),s(t.templateValues)&&(n._templateValues=i(t.templateValues,n.templateValues)),s(t.headers)&&(n.headers=i(t.headers,n.headers)),s(t.proxy)&&(n.proxy=t.proxy),s(t.request)&&(n.request=t.request),s(t.retryCallback)&&(n.retryCallback=t.retryCallback),s(t.retryAttempts)&&(n.retryAttempts=t.retryAttempts),n},O.prototype.retryOnError=function(e){var n=this.retryCallback;if("function"!=typeof n||this._retryCount>=this.retryAttempts)return t(!1);var r=this;return t(n(this,e)).then(function(e){return++r._retryCount,e})},O.prototype.clone=function(e){return s(e)||(e=new O({url:this._url})),e._url=this._url,e._queryParameters=a(this._queryParameters),e._templateValues=a(this._templateValues),e.headers=a(this.headers),e.proxy=this.proxy,e.retryCallback=this.retryCallback,e.retryAttempts=this.retryAttempts,e._retryCount=0,e.request=this.request.clone(),e},O.prototype.getBaseUri=function(e){return p(this.getUrlComponent(e),e)},O.prototype.appendForwardSlash=function(){this._url=n(this._url)},O.prototype.fetchArrayBuffer=function(){return this.fetch({responseType:"arraybuffer"})},O.fetchArrayBuffer=function(e){return new O(e).fetchArrayBuffer()},O.prototype.fetchBlob=function(){return this.fetch({responseType:"blob"})},O.fetchBlob=function(e){return new O(e).fetchBlob()},O.prototype.fetchImage=function(e){if(e=o(e,!1),z(this.request),!G||this.isDataUri||this.isBlobUri||!this.hasHeaders&&!e)return P(this,!0);var n=this.fetchBlob();if(s(n)){var r,a;return n.then(function(e){if(s(e)){a=e;var t=window.URL.createObjectURL(e);return r=new O({url:t}),P(r)}}).then(function(e){if(s(e))return window.URL.revokeObjectURL(r.url),e.blob=a,e}).otherwise(function(e){return s(r)&&window.URL.revokeObjectURL(r.url),t.reject(e)})}},O.fetchImage=function(e){return new O(e).fetchImage(e.preferBlob)},O.prototype.fetchText=function(){return this.fetch({responseType:"text"})},O.fetchText=function(e){return new O(e).fetchText()},O.prototype.fetchJson=function(){var e=this.fetch({responseType:"text",headers:{Accept:"application/json,*/*;q=0.01"}});if(s(e))return e.then(function(e){if(s(e))return JSON.parse(e)})},O.fetchJson=function(e){return new O(e).fetchJson()},O.prototype.fetchXML=function(){return this.fetch({responseType:"document",overrideMimeType:"text/xml"})},O.fetchXML=function(e){return new O(e).fetchXML()},O.prototype.fetchJsonp=function(e){e=o(e,"callback"),z(this.request);var t;do{t="loadJsonp"+Math.random().toString().substring(2,8)}while(s(window[t]));return M(this,e,t)},O.fetchJsonp=function(e){return new O(e).fetchJsonp(e.callbackParameterName)},O.prototype._makeRequest=function(e){var n=this;z(n.request);var r=n.request;r.url=n.url,r.requestFunction=function(){var a=e.responseType,o=i(e.headers,n.headers),c=e.overrideMimeType,u=e.method,l=e.data,d=t.defer(),f=O._Implementations.loadWithXhr(n.url,a,u,l,o,d,c);return s(f)&&s(f.abort)&&(r.cancelFunction=function(){f.abort()}),d.promise};var a=S.request(r);if(s(a))return a.then(function(e){return e}).otherwise(function(a){return r.state!==A.FAILED?t.reject(a):n.retryOnError(a).then(function(i){return i?(r.state=A.UNISSUED,r.deferred=void 0,n.fetch(e)):t.reject(a)})})};var V=/^data:(.*?)(;base64)?,(.*)$/;O.prototype.fetch=function(e){return e=I(e,{}),e.method="GET",this._makeRequest(e)},O.fetch=function(e){return new O(e).fetch({responseType:e.responseType,overrideMimeType:e.overrideMimeType})},O.prototype.delete=function(e){return e=I(e,{}),e.method="DELETE",this._makeRequest(e)},O.delete=function(e){return new O(e).delete({responseType:e.responseType,overrideMimeType:e.overrideMimeType,data:e.data})},O.prototype.head=function(e){return e=I(e,{}),e.method="HEAD",this._makeRequest(e)},O.head=function(e){return new O(e).head({responseType:e.responseType,overrideMimeType:e.overrideMimeType})},O.prototype.options=function(e){return e=I(e,{}),e.method="OPTIONS",this._makeRequest(e)},O.options=function(e){return new O(e).options({responseType:e.responseType,overrideMimeType:e.overrideMimeType})},O.prototype.post=function(e,t){return r.defined("data",e),t=I(t,{}),t.method="POST",t.data=e,this._makeRequest(t)},O.post=function(e){return new O(e).post(e.data,{responseType:e.responseType,overrideMimeType:e.overrideMimeType})},O.prototype.put=function(e,t){return r.defined("data",e),t=I(t,{}),t.method="PUT",t.data=e,this._makeRequest(t)},O.put=function(e){return new O(e).put(e.data,{responseType:e.responseType,overrideMimeType:e.overrideMimeType})},O.prototype.patch=function(e,t){return r.defined("data",e),t=I(t,{}),t.method="PATCH",t.data=e,this._makeRequest(t)},O.patch=function(e){return new O(e).patch(e.data,{responseType:e.responseType,overrideMimeType:e.overrideMimeType})},O._Implementations={},O._Implementations.createImage=function(e,t,n){var r=new Image;r.onload=function(){n.resolve(r)},r.onerror=function(e){n.reject(e)},t&&(w.contains(e)?r.crossOrigin="use-credentials":r.crossOrigin=""),r.src=e};var k="undefined"==typeof XMLHttpRequest;return O._Implementations.loadWithXhr=function(e,t,n,r,a,i,o){var c=V.exec(e);if(null!==c)return void i.resolve(L(c,t));if(k)return void U(e,t,n,r,a,i,o);var u=new XMLHttpRequest;if(w.contains(e)&&(u.withCredentials=!0),s(o)&&s(u.overrideMimeType)&&u.overrideMimeType(o),u.open(n,e,!0),s(a))for(var l in a)a.hasOwnProperty(l)&&u.setRequestHeader(l,a[l]);s(t)&&(u.responseType=t);var d=!1;return"string"==typeof e&&(d=0===e.indexOf("file://")||"undefined"!=typeof window&&"file://"===window.location.origin),u.onload=function(){if((u.status<200||u.status>=300)&&(!d||0!==u.status))return void i.reject(new C(u.status,u.response,u.getAllResponseHeaders()));var e=u.response,r=u.responseType;if("HEAD"===n||"OPTIONS"===n){var a=u.getAllResponseHeaders(),o=a.trim().split(/[\r\n]+/),c={};return o.forEach(function(e){var t=e.split(": "),n=t.shift();c[n]=t.join(": ")}),void i.resolve(c)}if(204===u.status)i.resolve();else if(!s(e)||s(t)&&r!==t)if("json"===t&&"string"==typeof e)try{i.resolve(JSON.parse(e))}catch(e){i.reject(e)}else(""===r||"document"===r)&&s(u.responseXML)&&u.responseXML.hasChildNodes()?i.resolve(u.responseXML):""!==r&&"text"!==r||!s(u.responseText)?i.reject(new x("Invalid XMLHttpRequest response type.")):i.resolve(u.responseText);else i.resolve(e)},u.onerror=function(e){i.reject(new C)},u.send(r),u},O._Implementations.loadAndExecuteScript=function(e,t,n){var r=document.createElement("script");r.async=!0,r.src=e;var a=document.getElementsByTagName("head")[0];r.onload=function(){r.onload=void 0,a.removeChild(r)},r.onerror=function(e){n.reject(e)},a.appendChild(r)},O._DefaultImplementations={},O._DefaultImplementations.createImage=O._Implementations.createImage,O._DefaultImplementations.loadWithXhr=O._Implementations.loadWithXhr,O._DefaultImplementations.loadAndExecuteScript=O._Implementations.loadAndExecuteScript,O.DEFAULT=f(new O({url:"undefined"==typeof document?"":document.location.href.split("?")[0]})),O}),define("Core/buildModuleUrl",["./defined","./DeveloperError","./getAbsoluteUri","./Resource","require"],function(e,t,n,r,a){"use strict";function i(){for(var e=document.getElementsByTagName("script"),t=0,n=e.length;t<n;++t){var r=e[t].getAttribute("src"),a=p.exec(r);if(null!==a)return a[1]}}function o(t){return"undefined"==typeof document?t:(e(d)||(d=document.createElement("a")),d.href=t,d.href=d.href,d.href)}function s(){if(e(f))return f;var t;return t="undefined"!=typeof CESIUM_BASE_URL?CESIUM_BASE_URL:e(define.amd)&&!define.amd.toUrlUndefined&&e(a.toUrl)?n("..",l("Core/buildModuleUrl.js")):i(),f=new r({url:o(t)}),f.appendForwardSlash(),f}function c(e){return o(a.toUrl("../"+e))}function u(e){return s().getDerivedResource({url:e}).url}function l(t){return e(m)||(m=e(define.amd)&&!define.amd.toUrlUndefined&&e(a.toUrl)?c:u),m(t)}var d,f,m,p=/((?:.*\/)|^)cesium[\w-]*\.js(?:\W|$)/i;return l._cesiumScriptRegex=p,l._buildModuleUrlFromBaseUrl=u,l._clearBaseResource=function(){f=void 0},l.setBaseUrl=function(e){f=r.DEFAULT.getDerivedResource({url:e})},l.getCesiumBaseUrl=s,l}),define("ThirdParty/mersenne-twister",[],function(){var e=function(e){void 0==e&&(e=(new Date).getTime()),this.N=624,this.M=397,this.MATRIX_A=2567483615,this.UPPER_MASK=2147483648,this.LOWER_MASK=2147483647,this.mt=new Array(this.N),this.mti=this.N+1,this.init_genrand(e)};return e.prototype.init_genrand=function(e){for(this.mt[0]=e>>>0,this.mti=1;this.mti<this.N;this.mti++){var e=this.mt[this.mti-1]^this.mt[this.mti-1]>>>30;this.mt[this.mti]=(1812433253*((4294901760&e)>>>16)<<16)+1812433253*(65535&e)+this.mti,this.mt[this.mti]>>>=0}},e.prototype.genrand_int32=function(){var e,t=new Array(0,this.MATRIX_A);if(this.mti>=this.N){var n;for(this.mti==this.N+1&&this.init_genrand(5489),n=0;n<this.N-this.M;n++)e=this.mt[n]&this.UPPER_MASK|this.mt[n+1]&this.LOWER_MASK,this.mt[n]=this.mt[n+this.M]^e>>>1^t[1&e];for(;n<this.N-1;n++)e=this.mt[n]&this.UPPER_MASK|this.mt[n+1]&this.LOWER_MASK,this.mt[n]=this.mt[n+(this.M-this.N)]^e>>>1^t[1&e];e=this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK,this.mt[this.N-1]=this.mt[this.M-1]^e>>>1^t[1&e],this.mti=0}return e=this.mt[this.mti++],e^=e>>>11,e^=e<<7&2636928640,e^=e<<15&4022730752,(e^=e>>>18)>>>0},e.prototype.random=function(){return this.genrand_int32()*(1/4294967296)},e}),define("Core/Math",["../ThirdParty/mersenne-twister","./Check","./defaultValue","./defined","./DeveloperError"],function(e,t,n,r,a){"use strict";var i={};i.EPSILON1=.1,i.EPSILON2=.01,i.EPSILON3=.001,i.EPSILON4=1e-4,i.EPSILON5=1e-5,i.EPSILON6=1e-6,i.EPSILON7=1e-7,i.EPSILON8=1e-8,i.EPSILON9=1e-9,i.EPSILON10=1e-10,i.EPSILON11=1e-11,i.EPSILON12=1e-12,i.EPSILON13=1e-13,i.EPSILON14=1e-14,i.EPSILON15=1e-15,i.EPSILON16=1e-16,i.EPSILON17=1e-17,i.EPSILON18=1e-18,i.EPSILON19=1e-19,i.EPSILON20=1e-20,i.GRAVITATIONALPARAMETER=3986004418e5,i.SOLAR_RADIUS=6955e5,i.LUNAR_RADIUS=1737400,i.SIXTY_FOUR_KILOBYTES=65536,i.sign=n(Math.sign,function(e){return e=+e,0===e||e!==e?e:e>0?1:-1}),i.signNotZero=function(e){return e<0?-1:1},i.toSNorm=function(e,t){return t=n(t,255),Math.round((.5*i.clamp(e,-1,1)+.5)*t)},i.fromSNorm=function(e,t){return t=n(t,255),i.clamp(e,0,t)/t*2-1},i.sinh=n(Math.sinh,function(e){return(Math.exp(e)-Math.exp(-e))/2}),i.cosh=n(Math.cosh,function(e){return(Math.exp(e)+Math.exp(-e))/2}),i.lerp=function(e,t,n){return(1-n)*e+n*t},i.PI=Math.PI,i.ONE_OVER_PI=1/Math.PI,i.PI_OVER_TWO=Math.PI/2,i.PI_OVER_THREE=Math.PI/3,i.PI_OVER_FOUR=Math.PI/4,i.PI_OVER_SIX=Math.PI/6,i.THREE_PI_OVER_TWO=3*Math.PI/2,i.TWO_PI=2*Math.PI,i.ONE_OVER_TWO_PI=1/(2*Math.PI),i.RADIANS_PER_DEGREE=Math.PI/180,i.DEGREES_PER_RADIAN=180/Math.PI,i.RADIANS_PER_ARCSECOND=i.RADIANS_PER_DEGREE/3600,i.toRadians=function(e){return e*i.RADIANS_PER_DEGREE},i.toDegrees=function(e){return e*i.DEGREES_PER_RADIAN},i.convertLongitudeRange=function(e){var t=i.TWO_PI,n=e-Math.floor(e/t)*t;return n<-Math.PI?n+t:n>=Math.PI?n-t:n},i.clampToLatitudeRange=function(e){return i.clamp(e,-1*i.PI_OVER_TWO,i.PI_OVER_TWO)},i.negativePiToPi=function(e){return i.zeroToTwoPi(e+i.PI)-i.PI},i.zeroToTwoPi=function(e){var t=i.mod(e,i.TWO_PI);return Math.abs(t)<i.EPSILON14&&Math.abs(e)>i.EPSILON14?i.TWO_PI:t},i.mod=function(e,t){return(e%t+t)%t},i.equalsEpsilon=function(e,t,r,a){a=n(a,r);var i=Math.abs(e-t);return i<=a||i<=r*Math.max(Math.abs(e),Math.abs(t))};var o=[1];i.factorial=function(e){var t=o.length;if(e>=t)for(var n=o[t-1],r=t;r<=e;r++)o.push(n*r);return o[e]},i.incrementWrap=function(e,t,r){return r=n(r,0),++e,e>t&&(e=r),e},i.isPowerOfTwo=function(e){return 0!==e&&0==(e&e-1)},i.nextPowerOfTwo=function(e){return--e,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e},i.clamp=function(e,t,n){return e<t?t:e>n?n:e};var s=new e;return i.setRandomNumberSeed=function(t){s=new e(t)},i.nextRandomNumber=function(){return s.random()},i.randomBetween=function(e,t){return i.nextRandomNumber()*(t-e)+e},i.acosClamped=function(e){return Math.acos(i.clamp(e,-1,1))},i.asinClamped=function(e){return Math.asin(i.clamp(e,-1,1))},i.chordLength=function(e,t){return 2*t*Math.sin(.5*e)},i.logBase=function(e,t){return Math.log(e)/Math.log(t)},i.cbrt=n(Math.cbrt,function(e){var t=Math.pow(Math.abs(e),1/3);return e<0?-t:t}),i.log2=n(Math.log2,function(e){return Math.log(e)*Math.LOG2E}),i.fog=function(e,t){var n=e*t;return 1-Math.exp(-n*n)},i.fastApproximateAtan=function(e){return e*(-.1784*Math.abs(e)-.0663*e*e+1.0301)},i.fastApproximateAtan2=function(e,t){var n,r,a=Math.abs(e);n=Math.abs(t),r=Math.max(a,n),n=Math.min(a,n);var o=n/r;return a=i.fastApproximateAtan(o),a=Math.abs(t)>Math.abs(e)?i.PI_OVER_TWO-a:a,a=e<0?i.PI-a:a,a=t<0?-a:a},i}),define("Core/Cartesian3",["./Check","./defaultValue","./defined","./DeveloperError","./freezeObject","./Math"],function(e,t,n,r,a,i){"use strict";function o(e,n,r){this.x=t(e,0),this.y=t(n,0),this.z=t(r,0)}o.fromSpherical=function(e,r){n(r)||(r=new o);var a=e.clock,i=e.cone,s=t(e.magnitude,1),c=s*Math.sin(i);return r.x=c*Math.cos(a),r.y=c*Math.sin(a),r.z=s*Math.cos(i),r},o.fromElements=function(e,t,r,a){return n(a)?(a.x=e,a.y=t,a.z=r,a):new o(e,t,r)},o.clone=function(e,t){if(n(e))return n(t)?(t.x=e.x,t.y=e.y,t.z=e.z,t):new o(e.x,e.y,e.z)},o.fromCartesian4=o.clone,o.packedLength=3,o.pack=function(e,n,r){return r=t(r,0),n[r++]=e.x,n[r++]=e.y,n[r]=e.z,n},o.unpack=function(e,r,a){return r=t(r,0),n(a)||(a=new o),a.x=e[r++],a.y=e[r++],a.z=e[r],a},o.packArray=function(e,t){var r=e.length;n(t)?t.length=3*r:t=new Array(3*r);for(var a=0;a<r;++a)o.pack(e[a],t,3*a);return t},o.unpackArray=function(e,t){var r=e.length;n(t)?t.length=r/3:t=new Array(r/3);for(var a=0;a<r;a+=3){var i=a/3;t[i]=o.unpack(e,a,t[i])}return t},o.fromArray=o.unpack,o.maximumComponent=function(e){return Math.max(e.x,e.y,e.z)},o.minimumComponent=function(e){return Math.min(e.x,e.y,e.z)},o.minimumByComponent=function(e,t,n){return n.x=Math.min(e.x,t.x),n.y=Math.min(e.y,t.y),n.z=Math.min(e.z,t.z),n},o.maximumByComponent=function(e,t,n){return n.x=Math.max(e.x,t.x),n.y=Math.max(e.y,t.y),n.z=Math.max(e.z,t.z),n},o.magnitudeSquared=function(e){return e.x*e.x+e.y*e.y+e.z*e.z},o.magnitude=function(e){return Math.sqrt(o.magnitudeSquared(e))};var s=new o;o.distance=function(e,t){return o.subtract(e,t,s),o.magnitude(s)},o.distanceSquared=function(e,t){return o.subtract(e,t,s),o.magnitudeSquared(s)},o.normalize=function(e,t){var n=o.magnitude(e);return t.x=e.x/n,t.y=e.y/n,t.z=e.z/n,t},o.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z},o.multiplyComponents=function(e,t,n){return n.x=e.x*t.x,n.y=e.y*t.y,n.z=e.z*t.z,n},o.divideComponents=function(e,t,n){return n.x=e.x/t.x,n.y=e.y/t.y,n.z=e.z/t.z,n},o.add=function(e,t,n){return n.x=e.x+t.x,n.y=e.y+t.y,n.z=e.z+t.z,n},o.subtract=function(e,t,n){return n.x=e.x-t.x,n.y=e.y-t.y,n.z=e.z-t.z,n},o.multiplyByScalar=function(e,t,n){return n.x=e.x*t,n.y=e.y*t,n.z=e.z*t,n},o.divideByScalar=function(e,t,n){return n.x=e.x/t,n.y=e.y/t,n.z=e.z/t,n},o.negate=function(e,t){return t.x=-e.x,t.y=-e.y,t.z=-e.z,t},o.abs=function(e,t){return t.x=Math.abs(e.x),t.y=Math.abs(e.y),t.z=Math.abs(e.z),t};var c=new o;o.lerp=function(e,t,n,r){return o.multiplyByScalar(t,n,c),r=o.multiplyByScalar(e,1-n,r),o.add(c,r,r)};var u=new o,l=new o;o.angleBetween=function(e,t){o.normalize(e,u),o.normalize(t,l);var n=o.dot(u,l),r=o.magnitude(o.cross(u,l,u));return Math.atan2(r,n)};var d=new o;o.mostOrthogonalAxis=function(e,t){var n=o.normalize(e,d);return o.abs(n,n),t=n.x<=n.y?n.x<=n.z?o.clone(o.UNIT_X,t):o.clone(o.UNIT_Z,t):n.y<=n.z?o.clone(o.UNIT_Y,t):o.clone(o.UNIT_Z,t)},o.projectVector=function(e,t,n){var r=o.dot(e,t)/o.dot(t,t);return o.multiplyByScalar(t,r,n)},o.equals=function(e,t){return e===t||n(e)&&n(t)&&e.x===t.x&&e.y===t.y&&e.z===t.z},o.equalsArray=function(e,t,n){return e.x===t[n]&&e.y===t[n+1]&&e.z===t[n+2]},o.equalsEpsilon=function(e,t,r,a){return e===t||n(e)&&n(t)&&i.equalsEpsilon(e.x,t.x,r,a)&&i.equalsEpsilon(e.y,t.y,r,a)&&i.equalsEpsilon(e.z,t.z,r,a)},o.cross=function(e,t,n){var r=e.x,a=e.y,i=e.z,o=t.x,s=t.y,c=t.z,u=a*c-i*s,l=i*o-r*c,d=r*s-a*o;return n.x=u,n.y=l,n.z=d,n},o.midpoint=function(e,t,n){return n.x=.5*(e.x+t.x),n.y=.5*(e.y+t.y),n.z=.5*(e.z+t.z),n},o.fromDegrees=function(e,t,n,r,a){return e=i.toRadians(e),t=i.toRadians(t),o.fromRadians(e,t,n,r,a)};var f=new o,m=new o,p=new o(40680631590769,40680631590769,40408299984661.445);return o.fromRadians=function(e,r,a,i,s){a=t(a,0);var c=n(i)?i.radiiSquared:p,u=Math.cos(r);f.x=u*Math.cos(e),f.y=u*Math.sin(e),f.z=Math.sin(r),f=o.normalize(f,f),o.multiplyComponents(c,f,m);var l=Math.sqrt(o.dot(f,m));return m=o.divideByScalar(m,l,m),f=o.multiplyByScalar(f,a,f),n(s)||(s=new o),o.add(m,f,s)},o.fromDegreesArray=function(e,t,r){var a=e.length;n(r)?r.length=a/2:r=new Array(a/2);for(var i=0;i<a;i+=2){var s=e[i],c=e[i+1],u=i/2;r[u]=o.fromDegrees(s,c,0,t,r[u])}return r},o.fromRadiansArray=function(e,t,r){var a=e.length;n(r)?r.length=a/2:r=new Array(a/2);for(var i=0;i<a;i+=2){var s=e[i],c=e[i+1],u=i/2;r[u]=o.fromRadians(s,c,0,t,r[u])}return r},o.fromDegreesArrayHeights=function(e,t,r){var a=e.length;n(r)?r.length=a/3:r=new Array(a/3);for(var i=0;i<a;i+=3){var s=e[i],c=e[i+1],u=e[i+2],l=i/3;r[l]=o.fromDegrees(s,c,u,t,r[l])}return r},o.fromRadiansArrayHeights=function(e,t,r){var a=e.length;n(r)?r.length=a/3:r=new Array(a/3);for(var i=0;i<a;i+=3){var s=e[i],c=e[i+1],u=e[i+2],l=i/3;r[l]=o.fromRadians(s,c,u,t,r[l])}return r},o.ZERO=a(new o(0,0,0)),o.UNIT_X=a(new o(1,0,0)),o.UNIT_Y=a(new o(0,1,0)),o.UNIT_Z=a(new o(0,0,1)),o.prototype.clone=function(e){return o.clone(this,e)},o.prototype.equals=function(e){return o.equals(this,e)},o.prototype.equalsEpsilon=function(e,t,n){return o.equalsEpsilon(this,e,t,n)},o.prototype.toString=function(){return"("+this.x+", "+this.y+", "+this.z+")"},o}),define("Core/scaleToGeodeticSurface",["./Cartesian3","./defined","./DeveloperError","./Math"],function(e,t,n,r){"use strict";function a(n,a,s,c,u){var l=n.x,d=n.y,f=n.z,m=a.x,p=a.y,h=a.z,_=l*l*m*m,v=d*d*p*p,g=f*f*h*h,y=_+v+g,E=Math.sqrt(1/y),T=e.multiplyByScalar(n,E,i);if(y<c)return isFinite(E)?e.clone(T,u):void 0;var C=s.x,S=s.y,A=s.z,x=o;x.x=T.x*C*2,x.y=T.y*S*2,x.z=T.z*A*2;var w,b,R,I,z,D,O,P,M,N,F,L=(1-E)*e.magnitude(n)/(.5*e.magnitude(x)),B=0;do{L-=B,R=1/(1+L*C),I=1/(1+L*S),z=1/(1+L*A),D=R*R,O=I*I,P=z*z,M=D*R,N=O*I,F=P*z,w=_*D+v*O+g*P-1,b=_*M*C+v*N*S+g*F*A;B=w/(-2*b)}while(Math.abs(w)>r.EPSILON12);return t(u)?(u.x=l*R,u.y=d*I,u.z=f*z,u):new e(l*R,d*I,f*z)}var i=new e,o=new e;return a}),define("Core/Cartographic",["./Cartesian3","./Check","./defaultValue","./defined","./freezeObject","./Math","./scaleToGeodeticSurface"],function(e,t,n,r,a,i,o){"use strict";function s(e,t,r){this.longitude=n(e,0),this.latitude=n(t,0),this.height=n(r,0)}s.fromRadians=function(e,t,a,i){return a=n(a,0),r(i)?(i.longitude=e,i.latitude=t,i.height=a,i):new s(e,t,a)},s.fromDegrees=function(e,t,n,r){return e=i.toRadians(e),t=i.toRadians(t),s.fromRadians(e,t,n,r)};var c=new e,u=new e,l=new e,d=new e(1/6378137,1/6378137,1/6356752.314245179),f=new e(1/40680631590769,1/40680631590769,1/40408299984661.445),m=i.EPSILON1;return s.fromCartesian=function(t,n,a){var p=r(n)?n.oneOverRadii:d,h=r(n)?n.oneOverRadiiSquared:f,_=r(n)?n._centerToleranceSquared:m,v=o(t,p,h,_,u);if(r(v)){var g=e.multiplyComponents(v,h,c);g=e.normalize(g,g);var y=e.subtract(t,v,l),E=Math.atan2(g.y,g.x),T=Math.asin(g.z),C=i.sign(e.dot(y,t))*e.magnitude(y);return r(a)?(a.longitude=E,a.latitude=T,a.height=C,a):new s(E,T,C)}},s.toCartesian=function(t,n,r){return e.fromRadians(t.longitude,t.latitude,t.height,n,r)},s.clone=function(e,t){if(r(e))return r(t)?(t.longitude=e.longitude,t.latitude=e.latitude,t.height=e.height,t):new s(e.longitude,e.latitude,e.height)},s.equals=function(e,t){return e===t||r(e)&&r(t)&&e.longitude===t.longitude&&e.latitude===t.latitude&&e.height===t.height},s.equalsEpsilon=function(e,t,n){return e===t||r(e)&&r(t)&&Math.abs(e.longitude-t.longitude)<=n&&Math.abs(e.latitude-t.latitude)<=n&&Math.abs(e.height-t.height)<=n},s.ZERO=a(new s(0,0,0)),s.prototype.clone=function(e){return s.clone(this,e)},s.prototype.equals=function(e){return s.equals(this,e)},s.prototype.equalsEpsilon=function(e,t){return s.equalsEpsilon(this,e,t)},s.prototype.toString=function(){return"("+this.longitude+", "+this.latitude+", "+this.height+")"},s}),define("Core/Ellipsoid",["./Cartesian3","./Cartographic","./Check","./defaultValue","./defined","./defineProperties","./DeveloperError","./freezeObject","./Math","./scaleToGeodeticSurface"],function(e,t,n,r,a,i,o,s,c,u){"use strict";function l(t,n,a,i){n=r(n,0),a=r(a,0),i=r(i,0),t._radii=new e(n,a,i),t._radiiSquared=new e(n*n,a*a,i*i),t._radiiToTheFourth=new e(n*n*n*n,a*a*a*a,i*i*i*i),t._oneOverRadii=new e(0===n?0:1/n,0===a?0:1/a,0===i?0:1/i),t._oneOverRadiiSquared=new e(0===n?0:1/(n*n),0===a?0:1/(a*a),0===i?0:1/(i*i)),t._minimumRadius=Math.min(n,a,i),t._maximumRadius=Math.max(n,a,i),t._centerToleranceSquared=c.EPSILON1,0!==t._radiiSquared.z&&(t._squaredXOverSquaredZ=t._radiiSquared.x/t._radiiSquared.z)}function d(e,t,n){this._radii=void 0,this._radiiSquared=void 0,this._radiiToTheFourth=void 0,this._oneOverRadii=void 0,this._oneOverRadiiSquared=void 0,this._minimumRadius=void 0,this._maximumRadius=void 0,this._centerToleranceSquared=void 0,this._squaredXOverSquaredZ=void 0,l(this,e,t,n)}i(d.prototype,{radii:{get:function(){return this._radii}},radiiSquared:{get:function(){return this._radiiSquared}},radiiToTheFourth:{get:function(){return this._radiiToTheFourth}},oneOverRadii:{get:function(){return this._oneOverRadii}},oneOverRadiiSquared:{get:function(){return this._oneOverRadiiSquared}},minimumRadius:{get:function(){return this._minimumRadius}},maximumRadius:{get:function(){return this._maximumRadius}}}),d.clone=function(t,n){if(a(t)){var r=t._radii;return a(n)?(e.clone(r,n._radii),e.clone(t._radiiSquared,n._radiiSquared),e.clone(t._radiiToTheFourth,n._radiiToTheFourth),e.clone(t._oneOverRadii,n._oneOverRadii),e.clone(t._oneOverRadiiSquared,n._oneOverRadiiSquared),n._minimumRadius=t._minimumRadius,n._maximumRadius=t._maximumRadius,n._centerToleranceSquared=t._centerToleranceSquared,n):new d(r.x,r.y,r.z)}},d.fromCartesian3=function(e,t){return a(t)||(t=new d),a(e)?(l(t,e.x,e.y,e.z),t):t},d.WGS84=s(new d(6378137,6378137,6356752.314245179)),d.UNIT_SPHERE=s(new d(1,1,1)),d.MOON=s(new d(c.LUNAR_RADIUS,c.LUNAR_RADIUS,c.LUNAR_RADIUS)),d.prototype.clone=function(e){return d.clone(this,e)},d.packedLength=e.packedLength,d.pack=function(t,n,a){return a=r(a,0),e.pack(t._radii,n,a),n},d.unpack=function(t,n,a){n=r(n,0);var i=e.unpack(t,n);return d.fromCartesian3(i,a)},d.prototype.geocentricSurfaceNormal=e.normalize,d.prototype.geodeticSurfaceNormalCartographic=function(t,n){var r=t.longitude,i=t.latitude,o=Math.cos(i),s=o*Math.cos(r),c=o*Math.sin(r),u=Math.sin(i);return a(n)||(n=new e),n.x=s,n.y=c,n.z=u,e.normalize(n,n)},d.prototype.geodeticSurfaceNormal=function(t,n){return a(n)||(n=new e),n=e.multiplyComponents(t,this._oneOverRadiiSquared,n),e.normalize(n,n)};var f=new e,m=new e;d.prototype.cartographicToCartesian=function(t,n){var r=f,i=m;this.geodeticSurfaceNormalCartographic(t,r),e.multiplyComponents(this._radiiSquared,r,i);var o=Math.sqrt(e.dot(r,i));return e.divideByScalar(i,o,i),e.multiplyByScalar(r,t.height,r),a(n)||(n=new e),e.add(i,r,n)},d.prototype.cartographicArrayToCartesianArray=function(e,t){var n=e.length;a(t)?t.length=n:t=new Array(n);for(var r=0;r<n;r++)t[r]=this.cartographicToCartesian(e[r],t[r]);return t};var p=new e,h=new e,_=new e;return d.prototype.cartesianToCartographic=function(n,r){var i=this.scaleToGeodeticSurface(n,h);if(a(i)){var o=this.geodeticSurfaceNormal(i,p),s=e.subtract(n,i,_),u=Math.atan2(o.y,o.x),l=Math.asin(o.z),d=c.sign(e.dot(s,n))*e.magnitude(s);return a(r)?(r.longitude=u,r.latitude=l,r.height=d,r):new t(u,l,d)}},d.prototype.cartesianArrayToCartographicArray=function(e,t){var n=e.length;a(t)?t.length=n:t=new Array(n);for(var r=0;r<n;++r)t[r]=this.cartesianToCartographic(e[r],t[r]);return t},d.prototype.scaleToGeodeticSurface=function(e,t){return u(e,this._oneOverRadii,this._oneOverRadiiSquared,this._centerToleranceSquared,t)},d.prototype.scaleToGeocentricSurface=function(t,n){a(n)||(n=new e);var r=t.x,i=t.y,o=t.z,s=this._oneOverRadiiSquared,c=1/Math.sqrt(r*r*s.x+i*i*s.y+o*o*s.z);return e.multiplyByScalar(t,c,n)},d.prototype.transformPositionToScaledSpace=function(t,n){return a(n)||(n=new e),e.multiplyComponents(t,this._oneOverRadii,n)},d.prototype.transformPositionFromScaledSpace=function(t,n){return a(n)||(n=new e),e.multiplyComponents(t,this._radii,n)},d.prototype.equals=function(t){return this===t||a(t)&&e.equals(this._radii,t._radii)},d.prototype.toString=function(){return this._radii.toString()},d.prototype.getSurfaceNormalIntersectionWithZAxis=function(t,n,i){n=r(n,0);var o=this._squaredXOverSquaredZ;if(a(i)||(i=new e),i.x=0,i.y=0,i.z=t.z*(1-o),!(Math.abs(i.z)>=this._radii.z-n))return i},d}),define("Core/GeographicProjection",["./Cartesian3","./Cartographic","./defaultValue","./defined","./defineProperties","./DeveloperError","./Ellipsoid"],function(e,t,n,r,a,i,o){"use strict";function s(e){this._ellipsoid=n(e,o.WGS84),this._semimajorAxis=this._ellipsoid.maximumRadius,this._oneOverSemimajorAxis=1/this._semimajorAxis}return a(s.prototype,{ellipsoid:{get:function(){return this._ellipsoid}}}),s.prototype.project=function(t,n){var a=this._semimajorAxis,i=t.longitude*a,o=t.latitude*a,s=t.height;return r(n)?(n.x=i,n.y=o,n.z=s,n):new e(i,o,s)},s.prototype.unproject=function(e,n){var a=this._oneOverSemimajorAxis,i=e.x*a,o=e.y*a,s=e.z;return r(n)?(n.longitude=i,n.latitude=o,n.height=s,n):new t(i,o,s)},s}),define("Core/Intersect",["./freezeObject"],function(e){"use strict";return e({OUTSIDE:-1,INTERSECTING:0,INSIDE:1})}),define("Core/Interval",["./defaultValue"],function(e){"use strict";function t(t,n){this.start=e(t,0),this.stop=e(n,0)}return t}),define("Core/Matrix3",["./Cartesian3","./Check","./defaultValue","./defined","./defineProperties","./DeveloperError","./freezeObject","./Math"],function(e,t,n,r,a,i,o,s){"use strict";function c(e,t,r,a,i,o,s,c,u){this[0]=n(e,0),this[1]=n(a,0),this[2]=n(s,0),this[3]=n(t,0),this[4]=n(i,0),this[5]=n(c,0),this[6]=n(r,0),this[7]=n(o,0),this[8]=n(u,0)}function u(e){for(var t=0,n=0;n<9;++n){var r=e[n];t+=r*r}return Math.sqrt(t)}function l(e){for(var t=0,n=0;n<3;++n){var r=e[c.getElementIndex(h[n],p[n])];t+=2*r*r}return Math.sqrt(t)}function d(e,t){for(var n=s.EPSILON15,r=0,a=1,i=0;i<3;++i){var o=Math.abs(e[c.getElementIndex(h[i],p[i])]);o>r&&(a=i,r=o)}var u=1,l=0,d=p[a],f=h[a];if(Math.abs(e[c.getElementIndex(f,d)])>n){var m,_=e[c.getElementIndex(f,f)],v=e[c.getElementIndex(d,d)],g=e[c.getElementIndex(f,d)],y=(_-v)/2/g;m=y<0?-1/(-y+Math.sqrt(1+y*y)):1/(y+Math.sqrt(1+y*y)),u=1/Math.sqrt(1+m*m),l=m*u}return t=c.clone(c.IDENTITY,t),t[c.getElementIndex(d,d)]=t[c.getElementIndex(f,f)]=u,t[c.getElementIndex(f,d)]=l,t[c.getElementIndex(d,f)]=-l,t}c.packedLength=9,c.pack=function(e,t,r){return r=n(r,0),t[r++]=e[0],t[r++]=e[1],t[r++]=e[2],t[r++]=e[3],t[r++]=e[4],t[r++]=e[5],t[r++]=e[6],t[r++]=e[7],t[r++]=e[8],t},c.unpack=function(e,t,a){return t=n(t,0),r(a)||(a=new c),a[0]=e[t++],a[1]=e[t++],a[2]=e[t++],a[3]=e[t++],a[4]=e[t++],a[5]=e[t++],a[6]=e[t++],a[7]=e[t++],a[8]=e[t++],a},c.clone=function(e,t){if(r(e))return r(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t):new c(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])},c.fromArray=function(e,t,a){return t=n(t,0),r(a)||(a=new c),a[0]=e[t],a[1]=e[t+1],a[2]=e[t+2],a[3]=e[t+3],a[4]=e[t+4],a[5]=e[t+5],a[6]=e[t+6],a[7]=e[t+7],a[8]=e[t+8],a},c.fromColumnMajorArray=function(e,t){return c.clone(e,t)},c.fromRowMajorArray=function(e,t){return r(t)?(t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],t):new c(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8])},c.fromQuaternion=function(e,t){var n=e.x*e.x,a=e.x*e.y,i=e.x*e.z,o=e.x*e.w,s=e.y*e.y,u=e.y*e.z,l=e.y*e.w,d=e.z*e.z,f=e.z*e.w,m=e.w*e.w,p=n-s-d+m,h=2*(a-f),_=2*(i+l),v=2*(a+f),g=-n+s-d+m,y=2*(u-o),E=2*(i-l),T=2*(u+o),C=-n-s+d+m;return r(t)?(t[0]=p,t[1]=v,t[2]=E,t[3]=h,t[4]=g,t[5]=T,t[6]=_,t[7]=y,t[8]=C,t):new c(p,h,_,v,g,y,E,T,C)},c.fromHeadingPitchRoll=function(e,t){var n=Math.cos(-e.pitch),a=Math.cos(-e.heading),i=Math.cos(e.roll),o=Math.sin(-e.pitch),s=Math.sin(-e.heading),u=Math.sin(e.roll),l=n*a,d=-i*s+u*o*a,f=u*s+i*o*a,m=n*s,p=i*a+u*o*s,h=-u*a+i*o*s,_=-o,v=u*n,g=i*n;return r(t)?(t[0]=l,t[1]=m,t[2]=_,t[3]=d,t[4]=p,t[5]=v,t[6]=f,t[7]=h,t[8]=g,t):new c(l,d,f,m,p,h,_,v,g)},c.fromScale=function(e,t){return r(t)?(t[0]=e.x,t[1]=0,t[2]=0,t[3]=0,t[4]=e.y,t[5]=0,t[6]=0,t[7]=0,t[8]=e.z,t):new c(e.x,0,0,0,e.y,0,0,0,e.z)},c.fromUniformScale=function(e,t){return r(t)?(t[0]=e,t[1]=0,t[2]=0,t[3]=0,t[4]=e,t[5]=0,t[6]=0,t[7]=0,t[8]=e,t):new c(e,0,0,0,e,0,0,0,e)},c.fromCrossProduct=function(e,t){return r(t)?(t[0]=0,t[1]=e.z,t[2]=-e.y,t[3]=-e.z,t[4]=0,t[5]=e.x,t[6]=e.y,t[7]=-e.x,t[8]=0,t):new c(0,-e.z,e.y,e.z,0,-e.x,-e.y,e.x,0)},c.fromRotationX=function(e,t){var n=Math.cos(e),a=Math.sin(e);return r(t)?(t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=n,t[5]=a,t[6]=0,t[7]=-a,t[8]=n,t):new c(1,0,0,0,n,-a,0,a,n)},c.fromRotationY=function(e,t){var n=Math.cos(e),a=Math.sin(e);return r(t)?(t[0]=n,t[1]=0,t[2]=-a,t[3]=0,t[4]=1,t[5]=0,t[6]=a,t[7]=0,t[8]=n,t):new c(n,0,a,0,1,0,-a,0,n)},c.fromRotationZ=function(e,t){var n=Math.cos(e),a=Math.sin(e);return r(t)?(t[0]=n,t[1]=a,t[2]=0,t[3]=-a,t[4]=n,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t):new c(n,-a,0,a,n,0,0,0,1)},c.toArray=function(e,t){return r(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t):[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8]]},c.getElementIndex=function(e,t){return 3*e+t},c.getColumn=function(e,t,n){var r=3*t,a=e[r],i=e[r+1],o=e[r+2];return n.x=a,n.y=i,n.z=o,n},c.setColumn=function(e,t,n,r){r=c.clone(e,r);var a=3*t;return r[a]=n.x,r[a+1]=n.y,r[a+2]=n.z,r},c.getRow=function(e,t,n){var r=e[t],a=e[t+3],i=e[t+6];return n.x=r,n.y=a,n.z=i,n},c.setRow=function(e,t,n,r){return r=c.clone(e,r),r[t]=n.x,r[t+3]=n.y,r[t+6]=n.z,r};var f=new e;c.getScale=function(t,n){return n.x=e.magnitude(e.fromElements(t[0],t[1],t[2],f)),n.y=e.magnitude(e.fromElements(t[3],t[4],t[5],f)),n.z=e.magnitude(e.fromElements(t[6],t[7],t[8],f)),n};var m=new e;c.getMaximumScale=function(t){return c.getScale(t,m),e.maximumComponent(m)},c.multiply=function(e,t,n){var r=e[0]*t[0]+e[3]*t[1]+e[6]*t[2],a=e[1]*t[0]+e[4]*t[1]+e[7]*t[2],i=e[2]*t[0]+e[5]*t[1]+e[8]*t[2],o=e[0]*t[3]+e[3]*t[4]+e[6]*t[5],s=e[1]*t[3]+e[4]*t[4]+e[7]*t[5],c=e[2]*t[3]+e[5]*t[4]+e[8]*t[5],u=e[0]*t[6]+e[3]*t[7]+e[6]*t[8],l=e[1]*t[6]+e[4]*t[7]+e[7]*t[8],d=e[2]*t[6]+e[5]*t[7]+e[8]*t[8];return n[0]=r,n[1]=a,n[2]=i,n[3]=o,n[4]=s,n[5]=c,n[6]=u,n[7]=l,n[8]=d,n},c.add=function(e,t,n){return n[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n[3]=e[3]+t[3],n[4]=e[4]+t[4],n[5]=e[5]+t[5],n[6]=e[6]+t[6],n[7]=e[7]+t[7],n[8]=e[8]+t[8],n},c.subtract=function(e,t,n){return n[0]=e[0]-t[0],n[1]=e[1]-t[1],n[2]=e[2]-t[2],n[3]=e[3]-t[3],n[4]=e[4]-t[4],n[5]=e[5]-t[5],n[6]=e[6]-t[6],n[7]=e[7]-t[7],n[8]=e[8]-t[8],n},c.multiplyByVector=function(e,t,n){var r=t.x,a=t.y,i=t.z,o=e[0]*r+e[3]*a+e[6]*i,s=e[1]*r+e[4]*a+e[7]*i,c=e[2]*r+e[5]*a+e[8]*i;return n.x=o,n.y=s,n.z=c,n},
c.multiplyByScalar=function(e,t,n){return n[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n[3]=e[3]*t,n[4]=e[4]*t,n[5]=e[5]*t,n[6]=e[6]*t,n[7]=e[7]*t,n[8]=e[8]*t,n},c.multiplyByScale=function(e,t,n){return n[0]=e[0]*t.x,n[1]=e[1]*t.x,n[2]=e[2]*t.x,n[3]=e[3]*t.y,n[4]=e[4]*t.y,n[5]=e[5]*t.y,n[6]=e[6]*t.z,n[7]=e[7]*t.z,n[8]=e[8]*t.z,n},c.negate=function(e,t){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t[4]=-e[4],t[5]=-e[5],t[6]=-e[6],t[7]=-e[7],t[8]=-e[8],t},c.transpose=function(e,t){var n=e[0],r=e[3],a=e[6],i=e[1],o=e[4],s=e[7],c=e[2],u=e[5],l=e[8];return t[0]=n,t[1]=r,t[2]=a,t[3]=i,t[4]=o,t[5]=s,t[6]=c,t[7]=u,t[8]=l,t};var p=[1,0,0],h=[2,2,1],_=new c,v=new c;return c.computeEigenDecomposition=function(e,t){var n=s.EPSILON20,a=0,i=0;r(t)||(t={});for(var o=t.unitary=c.clone(c.IDENTITY,t.unitary),f=t.diagonal=c.clone(e,t.diagonal),m=n*u(f);i<10&&l(f)>m;)d(f,_),c.transpose(_,v),c.multiply(f,_,f),c.multiply(v,f,f),c.multiply(o,_,o),++a>2&&(++i,a=0);return t},c.abs=function(e,t){return t[0]=Math.abs(e[0]),t[1]=Math.abs(e[1]),t[2]=Math.abs(e[2]),t[3]=Math.abs(e[3]),t[4]=Math.abs(e[4]),t[5]=Math.abs(e[5]),t[6]=Math.abs(e[6]),t[7]=Math.abs(e[7]),t[8]=Math.abs(e[8]),t},c.determinant=function(e){var t=e[0],n=e[3],r=e[6],a=e[1],i=e[4],o=e[7],s=e[2],c=e[5],u=e[8];return t*(i*u-c*o)+a*(c*r-n*u)+s*(n*o-i*r)},c.inverse=function(e,t){var n=e[0],r=e[1],a=e[2],i=e[3],o=e[4],s=e[5],u=e[6],l=e[7],d=e[8],f=c.determinant(e);t[0]=o*d-l*s,t[1]=l*a-r*d,t[2]=r*s-o*a,t[3]=u*s-i*d,t[4]=n*d-u*a,t[5]=i*a-n*s,t[6]=i*l-u*o,t[7]=u*r-n*l,t[8]=n*o-i*r;var m=1/f;return c.multiplyByScalar(t,m,t)},c.equals=function(e,t){return e===t||r(e)&&r(t)&&e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]},c.equalsEpsilon=function(e,t,n){return e===t||r(e)&&r(t)&&Math.abs(e[0]-t[0])<=n&&Math.abs(e[1]-t[1])<=n&&Math.abs(e[2]-t[2])<=n&&Math.abs(e[3]-t[3])<=n&&Math.abs(e[4]-t[4])<=n&&Math.abs(e[5]-t[5])<=n&&Math.abs(e[6]-t[6])<=n&&Math.abs(e[7]-t[7])<=n&&Math.abs(e[8]-t[8])<=n},c.IDENTITY=o(new c(1,0,0,0,1,0,0,0,1)),c.ZERO=o(new c(0,0,0,0,0,0,0,0,0)),c.COLUMN0ROW0=0,c.COLUMN0ROW1=1,c.COLUMN0ROW2=2,c.COLUMN1ROW0=3,c.COLUMN1ROW1=4,c.COLUMN1ROW2=5,c.COLUMN2ROW0=6,c.COLUMN2ROW1=7,c.COLUMN2ROW2=8,a(c.prototype,{length:{get:function(){return c.packedLength}}}),c.prototype.clone=function(e){return c.clone(this,e)},c.prototype.equals=function(e){return c.equals(this,e)},c.equalsArray=function(e,t,n){return e[0]===t[n]&&e[1]===t[n+1]&&e[2]===t[n+2]&&e[3]===t[n+3]&&e[4]===t[n+4]&&e[5]===t[n+5]&&e[6]===t[n+6]&&e[7]===t[n+7]&&e[8]===t[n+8]},c.prototype.equalsEpsilon=function(e,t){return c.equalsEpsilon(this,e,t)},c.prototype.toString=function(){return"("+this[0]+", "+this[3]+", "+this[6]+")\n("+this[1]+", "+this[4]+", "+this[7]+")\n("+this[2]+", "+this[5]+", "+this[8]+")"},c}),define("Core/Cartesian4",["./Check","./defaultValue","./defined","./DeveloperError","./freezeObject","./Math"],function(e,t,n,r,a,i){"use strict";function o(e,n,r,a){this.x=t(e,0),this.y=t(n,0),this.z=t(r,0),this.w=t(a,0)}o.fromElements=function(e,t,r,a,i){return n(i)?(i.x=e,i.y=t,i.z=r,i.w=a,i):new o(e,t,r,a)},o.fromColor=function(e,t){return n(t)?(t.x=e.red,t.y=e.green,t.z=e.blue,t.w=e.alpha,t):new o(e.red,e.green,e.blue,e.alpha)},o.clone=function(e,t){if(n(e))return n(t)?(t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t):new o(e.x,e.y,e.z,e.w)},o.packedLength=4,o.pack=function(e,n,r){return r=t(r,0),n[r++]=e.x,n[r++]=e.y,n[r++]=e.z,n[r]=e.w,n},o.unpack=function(e,r,a){return r=t(r,0),n(a)||(a=new o),a.x=e[r++],a.y=e[r++],a.z=e[r++],a.w=e[r],a},o.packArray=function(e,t){var r=e.length;n(t)?t.length=4*r:t=new Array(4*r);for(var a=0;a<r;++a)o.pack(e[a],t,4*a);return t},o.unpackArray=function(e,t){var r=e.length;n(t)?t.length=r/4:t=new Array(r/4);for(var a=0;a<r;a+=4){var i=a/4;t[i]=o.unpack(e,a,t[i])}return t},o.fromArray=o.unpack,o.maximumComponent=function(e){return Math.max(e.x,e.y,e.z,e.w)},o.minimumComponent=function(e){return Math.min(e.x,e.y,e.z,e.w)},o.minimumByComponent=function(e,t,n){return n.x=Math.min(e.x,t.x),n.y=Math.min(e.y,t.y),n.z=Math.min(e.z,t.z),n.w=Math.min(e.w,t.w),n},o.maximumByComponent=function(e,t,n){return n.x=Math.max(e.x,t.x),n.y=Math.max(e.y,t.y),n.z=Math.max(e.z,t.z),n.w=Math.max(e.w,t.w),n},o.magnitudeSquared=function(e){return e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w},o.magnitude=function(e){return Math.sqrt(o.magnitudeSquared(e))};var s=new o;o.distance=function(e,t){return o.subtract(e,t,s),o.magnitude(s)},o.distanceSquared=function(e,t){return o.subtract(e,t,s),o.magnitudeSquared(s)},o.normalize=function(e,t){var n=o.magnitude(e);return t.x=e.x/n,t.y=e.y/n,t.z=e.z/n,t.w=e.w/n,t},o.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w},o.multiplyComponents=function(e,t,n){return n.x=e.x*t.x,n.y=e.y*t.y,n.z=e.z*t.z,n.w=e.w*t.w,n},o.divideComponents=function(e,t,n){return n.x=e.x/t.x,n.y=e.y/t.y,n.z=e.z/t.z,n.w=e.w/t.w,n},o.add=function(e,t,n){return n.x=e.x+t.x,n.y=e.y+t.y,n.z=e.z+t.z,n.w=e.w+t.w,n},o.subtract=function(e,t,n){return n.x=e.x-t.x,n.y=e.y-t.y,n.z=e.z-t.z,n.w=e.w-t.w,n},o.multiplyByScalar=function(e,t,n){return n.x=e.x*t,n.y=e.y*t,n.z=e.z*t,n.w=e.w*t,n},o.divideByScalar=function(e,t,n){return n.x=e.x/t,n.y=e.y/t,n.z=e.z/t,n.w=e.w/t,n},o.negate=function(e,t){return t.x=-e.x,t.y=-e.y,t.z=-e.z,t.w=-e.w,t},o.abs=function(e,t){return t.x=Math.abs(e.x),t.y=Math.abs(e.y),t.z=Math.abs(e.z),t.w=Math.abs(e.w),t};var c=new o;o.lerp=function(e,t,n,r){return o.multiplyByScalar(t,n,c),r=o.multiplyByScalar(e,1-n,r),o.add(c,r,r)};var u=new o;o.mostOrthogonalAxis=function(e,t){var n=o.normalize(e,u);return o.abs(n,n),t=n.x<=n.y?n.x<=n.z?n.x<=n.w?o.clone(o.UNIT_X,t):o.clone(o.UNIT_W,t):n.z<=n.w?o.clone(o.UNIT_Z,t):o.clone(o.UNIT_W,t):n.y<=n.z?n.y<=n.w?o.clone(o.UNIT_Y,t):o.clone(o.UNIT_W,t):n.z<=n.w?o.clone(o.UNIT_Z,t):o.clone(o.UNIT_W,t)},o.equals=function(e,t){return e===t||n(e)&&n(t)&&e.x===t.x&&e.y===t.y&&e.z===t.z&&e.w===t.w},o.equalsArray=function(e,t,n){return e.x===t[n]&&e.y===t[n+1]&&e.z===t[n+2]&&e.w===t[n+3]},o.equalsEpsilon=function(e,t,r,a){return e===t||n(e)&&n(t)&&i.equalsEpsilon(e.x,t.x,r,a)&&i.equalsEpsilon(e.y,t.y,r,a)&&i.equalsEpsilon(e.z,t.z,r,a)&&i.equalsEpsilon(e.w,t.w,r,a)},o.ZERO=a(new o(0,0,0,0)),o.UNIT_X=a(new o(1,0,0,0)),o.UNIT_Y=a(new o(0,1,0,0)),o.UNIT_Z=a(new o(0,0,1,0)),o.UNIT_W=a(new o(0,0,0,1)),o.prototype.clone=function(e){return o.clone(this,e)},o.prototype.equals=function(e){return o.equals(this,e)},o.prototype.equalsEpsilon=function(e,t,n){return o.equalsEpsilon(this,e,t,n)},o.prototype.toString=function(){return"("+this.x+", "+this.y+", "+this.z+", "+this.w+")"};var l=new Float32Array(1);return o.packFloat=function(e,t){if(n(t)||(t=new o),l[0]=e,0===(e=l[0]))return o.clone(o.ZERO,t);var r,a=e<0?1:0;isFinite(e)?(e=Math.abs(e),r=Math.floor(i.logBase(e,10))+1,e/=Math.pow(10,r)):(e=.1,r=38);var s=256*e;return t.x=Math.floor(s),s=256*(s-t.x),t.y=Math.floor(s),s=256*(s-t.y),t.z=Math.floor(s),t.w=2*(r+38)+a,t},o.unpackFloat=function(e){var t=e.w/2,n=Math.floor(t),r=2*(t-n);if(n-=38,r=2*r-1,r=-r,n>=38)return r<0?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY;var a=r*e.x*(1/256);return a+=r*e.y*(1/65536),(a+=r*e.z*(1/16777216))*Math.pow(10,n)},o}),define("Core/Matrix4",["./Cartesian3","./Cartesian4","./Check","./defaultValue","./defined","./defineProperties","./freezeObject","./Math","./Matrix3","./RuntimeError"],function(e,t,n,r,a,i,o,s,c,u){"use strict";function l(e,t,n,a,i,o,s,c,u,l,d,f,m,p,h,_){this[0]=r(e,0),this[1]=r(i,0),this[2]=r(u,0),this[3]=r(m,0),this[4]=r(t,0),this[5]=r(o,0),this[6]=r(l,0),this[7]=r(p,0),this[8]=r(n,0),this[9]=r(s,0),this[10]=r(d,0),this[11]=r(h,0),this[12]=r(a,0),this[13]=r(c,0),this[14]=r(f,0),this[15]=r(_,0)}l.packedLength=16,l.pack=function(e,t,n){return n=r(n,0),t[n++]=e[0],t[n++]=e[1],t[n++]=e[2],t[n++]=e[3],t[n++]=e[4],t[n++]=e[5],t[n++]=e[6],t[n++]=e[7],t[n++]=e[8],t[n++]=e[9],t[n++]=e[10],t[n++]=e[11],t[n++]=e[12],t[n++]=e[13],t[n++]=e[14],t[n]=e[15],t},l.unpack=function(e,t,n){return t=r(t,0),a(n)||(n=new l),n[0]=e[t++],n[1]=e[t++],n[2]=e[t++],n[3]=e[t++],n[4]=e[t++],n[5]=e[t++],n[6]=e[t++],n[7]=e[t++],n[8]=e[t++],n[9]=e[t++],n[10]=e[t++],n[11]=e[t++],n[12]=e[t++],n[13]=e[t++],n[14]=e[t++],n[15]=e[t],n},l.clone=function(e,t){if(a(e))return a(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t):new l(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])},l.fromArray=l.unpack,l.fromColumnMajorArray=function(e,t){return l.clone(e,t)},l.fromRowMajorArray=function(e,t){return a(t)?(t[0]=e[0],t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=e[1],t[5]=e[5],t[6]=e[9],t[7]=e[13],t[8]=e[2],t[9]=e[6],t[10]=e[10],t[11]=e[14],t[12]=e[3],t[13]=e[7],t[14]=e[11],t[15]=e[15],t):new l(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15])},l.fromRotationTranslation=function(t,n,i){return n=r(n,e.ZERO),a(i)?(i[0]=t[0],i[1]=t[1],i[2]=t[2],i[3]=0,i[4]=t[3],i[5]=t[4],i[6]=t[5],i[7]=0,i[8]=t[6],i[9]=t[7],i[10]=t[8],i[11]=0,i[12]=n.x,i[13]=n.y,i[14]=n.z,i[15]=1,i):new l(t[0],t[3],t[6],n.x,t[1],t[4],t[7],n.y,t[2],t[5],t[8],n.z,0,0,0,1)},l.fromTranslationQuaternionRotationScale=function(e,t,n,r){a(r)||(r=new l);var i=n.x,o=n.y,s=n.z,c=t.x*t.x,u=t.x*t.y,d=t.x*t.z,f=t.x*t.w,m=t.y*t.y,p=t.y*t.z,h=t.y*t.w,_=t.z*t.z,v=t.z*t.w,g=t.w*t.w,y=c-m-_+g,E=2*(u-v),T=2*(d+h),C=2*(u+v),S=-c+m-_+g,A=2*(p-f),x=2*(d-h),w=2*(p+f),b=-c-m+_+g;return r[0]=y*i,r[1]=C*i,r[2]=x*i,r[3]=0,r[4]=E*o,r[5]=S*o,r[6]=w*o,r[7]=0,r[8]=T*s,r[9]=A*s,r[10]=b*s,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,r},l.fromTranslationRotationScale=function(e,t){return l.fromTranslationQuaternionRotationScale(e.translation,e.rotation,e.scale,t)},l.fromTranslation=function(e,t){return l.fromRotationTranslation(c.IDENTITY,e,t)},l.fromScale=function(e,t){return a(t)?(t[0]=e.x,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e.y,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=e.z,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t):new l(e.x,0,0,0,0,e.y,0,0,0,0,e.z,0,0,0,0,1)},l.fromUniformScale=function(e,t){return a(t)?(t[0]=e,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t):new l(e,0,0,0,0,e,0,0,0,0,e,0,0,0,0,1)};var d=new e,f=new e,m=new e;l.fromCamera=function(t,n){var r=t.position,i=t.direction,o=t.up;e.normalize(i,d),e.normalize(e.cross(d,o,f),f),e.normalize(e.cross(f,d,m),m);var s=f.x,c=f.y,u=f.z,p=d.x,h=d.y,_=d.z,v=m.x,g=m.y,y=m.z,E=r.x,T=r.y,C=r.z,S=s*-E+c*-T+u*-C,A=v*-E+g*-T+y*-C,x=p*E+h*T+_*C;return a(n)?(n[0]=s,n[1]=v,n[2]=-p,n[3]=0,n[4]=c,n[5]=g,n[6]=-h,n[7]=0,n[8]=u,n[9]=y,n[10]=-_,n[11]=0,n[12]=S,n[13]=A,n[14]=x,n[15]=1,n):new l(s,c,u,S,v,g,y,A,-p,-h,-_,x,0,0,0,1)},l.computePerspectiveFieldOfView=function(e,t,n,r,a){var i=Math.tan(.5*e),o=1/i,s=o/t,c=(r+n)/(n-r),u=2*r*n/(n-r);return a[0]=s,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=o,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=c,a[11]=-1,a[12]=0,a[13]=0,a[14]=u,a[15]=0,a},l.computeOrthographicOffCenter=function(e,t,n,r,a,i,o){var s=1/(t-e),c=1/(r-n),u=1/(i-a),l=-(t+e)*s,d=-(r+n)*c,f=-(i+a)*u;return s*=2,c*=2,u*=-2,o[0]=s,o[1]=0,o[2]=0,o[3]=0,o[4]=0,o[5]=c,o[6]=0,o[7]=0,o[8]=0,o[9]=0,o[10]=u,o[11]=0,o[12]=l,o[13]=d,o[14]=f,o[15]=1,o},l.computePerspectiveOffCenter=function(e,t,n,r,a,i,o){var s=2*a/(t-e),c=2*a/(r-n),u=(t+e)/(t-e),l=(r+n)/(r-n),d=-(i+a)/(i-a),f=-2*i*a/(i-a);return o[0]=s,o[1]=0,o[2]=0,o[3]=0,o[4]=0,o[5]=c,o[6]=0,o[7]=0,o[8]=u,o[9]=l,o[10]=d,o[11]=-1,o[12]=0,o[13]=0,o[14]=f,o[15]=0,o},l.computeInfinitePerspectiveOffCenter=function(e,t,n,r,a,i){var o=2*a/(t-e),s=2*a/(r-n),c=(t+e)/(t-e),u=(r+n)/(r-n),l=-2*a;return i[0]=o,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=s,i[6]=0,i[7]=0,i[8]=c,i[9]=u,i[10]=-1,i[11]=-1,i[12]=0,i[13]=0,i[14]=l,i[15]=0,i},l.computeViewportTransformation=function(e,t,n,a){e=r(e,r.EMPTY_OBJECT);var i=r(e.x,0),o=r(e.y,0),s=r(e.width,0),c=r(e.height,0);t=r(t,0),n=r(n,1);var u=.5*s,l=.5*c,d=.5*(n-t),f=u,m=l,p=d,h=i+u,_=o+l,v=t+d;return a[0]=f,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=m,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=p,a[11]=0,a[12]=h,a[13]=_,a[14]=v,a[15]=1,a},l.computeView=function(t,n,r,a,i){return i[0]=a.x,i[1]=r.x,i[2]=-n.x,i[3]=0,i[4]=a.y,i[5]=r.y,i[6]=-n.y,i[7]=0,i[8]=a.z,i[9]=r.z,i[10]=-n.z,i[11]=0,i[12]=-e.dot(a,t),i[13]=-e.dot(r,t),i[14]=e.dot(n,t),i[15]=1,i},l.toArray=function(e,t){return a(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t):[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]},l.getElementIndex=function(e,t){return 4*e+t},l.getColumn=function(e,t,n){var r=4*t,a=e[r],i=e[r+1],o=e[r+2],s=e[r+3];return n.x=a,n.y=i,n.z=o,n.w=s,n},l.setColumn=function(e,t,n,r){r=l.clone(e,r);var a=4*t;return r[a]=n.x,r[a+1]=n.y,r[a+2]=n.z,r[a+3]=n.w,r},l.setTranslation=function(e,t,n){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[8]=e[8],n[9]=e[9],n[10]=e[10],n[11]=e[11],n[12]=t.x,n[13]=t.y,n[14]=t.z,n[15]=e[15],n},l.getRow=function(e,t,n){var r=e[t],a=e[t+4],i=e[t+8],o=e[t+12];return n.x=r,n.y=a,n.z=i,n.w=o,n},l.setRow=function(e,t,n,r){return r=l.clone(e,r),r[t]=n.x,r[t+4]=n.y,r[t+8]=n.z,r[t+12]=n.w,r};var p=new e;l.getScale=function(t,n){return n.x=e.magnitude(e.fromElements(t[0],t[1],t[2],p)),n.y=e.magnitude(e.fromElements(t[4],t[5],t[6],p)),n.z=e.magnitude(e.fromElements(t[8],t[9],t[10],p)),n};var h=new e;l.getMaximumScale=function(t){return l.getScale(t,h),e.maximumComponent(h)},l.multiply=function(e,t,n){var r=e[0],a=e[1],i=e[2],o=e[3],s=e[4],c=e[5],u=e[6],l=e[7],d=e[8],f=e[9],m=e[10],p=e[11],h=e[12],_=e[13],v=e[14],g=e[15],y=t[0],E=t[1],T=t[2],C=t[3],S=t[4],A=t[5],x=t[6],w=t[7],b=t[8],R=t[9],I=t[10],z=t[11],D=t[12],O=t[13],P=t[14],M=t[15],N=r*y+s*E+d*T+h*C,F=a*y+c*E+f*T+_*C,L=i*y+u*E+m*T+v*C,B=o*y+l*E+p*T+g*C,U=r*S+s*A+d*x+h*w,G=a*S+c*A+f*x+_*w,V=i*S+u*A+m*x+v*w,k=o*S+l*A+p*x+g*w,q=r*b+s*R+d*I+h*z,H=a*b+c*R+f*I+_*z,W=i*b+u*R+m*I+v*z,Y=o*b+l*R+p*I+g*z,X=r*D+s*O+d*P+h*M,j=a*D+c*O+f*P+_*M,Z=i*D+u*O+m*P+v*M,K=o*D+l*O+p*P+g*M;return n[0]=N,n[1]=F,n[2]=L,n[3]=B,n[4]=U,n[5]=G,n[6]=V,n[7]=k,n[8]=q,n[9]=H,n[10]=W,n[11]=Y,n[12]=X,n[13]=j,n[14]=Z,n[15]=K,n},l.add=function(e,t,n){return n[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n[3]=e[3]+t[3],n[4]=e[4]+t[4],n[5]=e[5]+t[5],n[6]=e[6]+t[6],n[7]=e[7]+t[7],n[8]=e[8]+t[8],n[9]=e[9]+t[9],n[10]=e[10]+t[10],n[11]=e[11]+t[11],n[12]=e[12]+t[12],n[13]=e[13]+t[13],n[14]=e[14]+t[14],n[15]=e[15]+t[15],n},l.subtract=function(e,t,n){return n[0]=e[0]-t[0],n[1]=e[1]-t[1],n[2]=e[2]-t[2],n[3]=e[3]-t[3],n[4]=e[4]-t[4],n[5]=e[5]-t[5],n[6]=e[6]-t[6],n[7]=e[7]-t[7],n[8]=e[8]-t[8],n[9]=e[9]-t[9],n[10]=e[10]-t[10],n[11]=e[11]-t[11],n[12]=e[12]-t[12],n[13]=e[13]-t[13],n[14]=e[14]-t[14],n[15]=e[15]-t[15],n},l.multiplyTransformation=function(e,t,n){var r=e[0],a=e[1],i=e[2],o=e[4],s=e[5],c=e[6],u=e[8],l=e[9],d=e[10],f=e[12],m=e[13],p=e[14],h=t[0],_=t[1],v=t[2],g=t[4],y=t[5],E=t[6],T=t[8],C=t[9],S=t[10],A=t[12],x=t[13],w=t[14],b=r*h+o*_+u*v,R=a*h+s*_+l*v,I=i*h+c*_+d*v,z=r*g+o*y+u*E,D=a*g+s*y+l*E,O=i*g+c*y+d*E,P=r*T+o*C+u*S,M=a*T+s*C+l*S,N=i*T+c*C+d*S,F=r*A+o*x+u*w+f,L=a*A+s*x+l*w+m,B=i*A+c*x+d*w+p;return n[0]=b,n[1]=R,n[2]=I,n[3]=0,n[4]=z,n[5]=D,n[6]=O,n[7]=0,n[8]=P,n[9]=M,n[10]=N,n[11]=0,n[12]=F,n[13]=L,n[14]=B,n[15]=1,n},l.multiplyByMatrix3=function(e,t,n){var r=e[0],a=e[1],i=e[2],o=e[4],s=e[5],c=e[6],u=e[8],l=e[9],d=e[10],f=t[0],m=t[1],p=t[2],h=t[3],_=t[4],v=t[5],g=t[6],y=t[7],E=t[8],T=r*f+o*m+u*p,C=a*f+s*m+l*p,S=i*f+c*m+d*p,A=r*h+o*_+u*v,x=a*h+s*_+l*v,w=i*h+c*_+d*v,b=r*g+o*y+u*E,R=a*g+s*y+l*E,I=i*g+c*y+d*E;return n[0]=T,n[1]=C,n[2]=S,n[3]=0,n[4]=A,n[5]=x,n[6]=w,n[7]=0,n[8]=b,n[9]=R,n[10]=I,n[11]=0,n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15],n},l.multiplyByTranslation=function(e,t,n){var r=t.x,a=t.y,i=t.z,o=r*e[0]+a*e[4]+i*e[8]+e[12],s=r*e[1]+a*e[5]+i*e[9]+e[13],c=r*e[2]+a*e[6]+i*e[10]+e[14];return n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[8]=e[8],n[9]=e[9],n[10]=e[10],n[11]=e[11],n[12]=o,n[13]=s,n[14]=c,n[15]=e[15],n};var _=new e;l.multiplyByUniformScale=function(e,t,n){return _.x=t,_.y=t,_.z=t,l.multiplyByScale(e,_,n)},l.multiplyByScale=function(e,t,n){var r=t.x,a=t.y,i=t.z;return 1===r&&1===a&&1===i?l.clone(e,n):(n[0]=r*e[0],n[1]=r*e[1],n[2]=r*e[2],n[3]=0,n[4]=a*e[4],n[5]=a*e[5],n[6]=a*e[6],n[7]=0,n[8]=i*e[8],n[9]=i*e[9],n[10]=i*e[10],n[11]=0,n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=1,n)},l.multiplyByVector=function(e,t,n){var r=t.x,a=t.y,i=t.z,o=t.w,s=e[0]*r+e[4]*a+e[8]*i+e[12]*o,c=e[1]*r+e[5]*a+e[9]*i+e[13]*o,u=e[2]*r+e[6]*a+e[10]*i+e[14]*o,l=e[3]*r+e[7]*a+e[11]*i+e[15]*o;return n.x=s,n.y=c,n.z=u,n.w=l,n},l.multiplyByPointAsVector=function(e,t,n){var r=t.x,a=t.y,i=t.z,o=e[0]*r+e[4]*a+e[8]*i,s=e[1]*r+e[5]*a+e[9]*i,c=e[2]*r+e[6]*a+e[10]*i;return n.x=o,n.y=s,n.z=c,n},l.multiplyByPoint=function(e,t,n){var r=t.x,a=t.y,i=t.z,o=e[0]*r+e[4]*a+e[8]*i+e[12],s=e[1]*r+e[5]*a+e[9]*i+e[13],c=e[2]*r+e[6]*a+e[10]*i+e[14];return n.x=o,n.y=s,n.z=c,n},l.multiplyByScalar=function(e,t,n){return n[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n[3]=e[3]*t,n[4]=e[4]*t,n[5]=e[5]*t,n[6]=e[6]*t,n[7]=e[7]*t,n[8]=e[8]*t,n[9]=e[9]*t,n[10]=e[10]*t,n[11]=e[11]*t,n[12]=e[12]*t,n[13]=e[13]*t,n[14]=e[14]*t,n[15]=e[15]*t,n},l.negate=function(e,t){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t[4]=-e[4],t[5]=-e[5],t[6]=-e[6],t[7]=-e[7],t[8]=-e[8],t[9]=-e[9],t[10]=-e[10],t[11]=-e[11],t[12]=-e[12],t[13]=-e[13],t[14]=-e[14],t[15]=-e[15],t},l.transpose=function(e,t){var n=e[1],r=e[2],a=e[3],i=e[6],o=e[7],s=e[11];return t[0]=e[0],t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=n,t[5]=e[5],t[6]=e[9],t[7]=e[13],t[8]=r,t[9]=i,t[10]=e[10],t[11]=e[14],t[12]=a,t[13]=o,t[14]=s,t[15]=e[15],t},l.abs=function(e,t){return t[0]=Math.abs(e[0]),t[1]=Math.abs(e[1]),t[2]=Math.abs(e[2]),t[3]=Math.abs(e[3]),t[4]=Math.abs(e[4]),t[5]=Math.abs(e[5]),t[6]=Math.abs(e[6]),t[7]=Math.abs(e[7]),t[8]=Math.abs(e[8]),t[9]=Math.abs(e[9]),t[10]=Math.abs(e[10]),t[11]=Math.abs(e[11]),t[12]=Math.abs(e[12]),t[13]=Math.abs(e[13]),t[14]=Math.abs(e[14]),t[15]=Math.abs(e[15]),t},l.equals=function(e,t){return e===t||a(e)&&a(t)&&e[12]===t[12]&&e[13]===t[13]&&e[14]===t[14]&&e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[8]===t[8]&&e[9]===t[9]&&e[10]===t[10]&&e[3]===t[3]&&e[7]===t[7]&&e[11]===t[11]&&e[15]===t[15]},l.equalsEpsilon=function(e,t,n){return e===t||a(e)&&a(t)&&Math.abs(e[0]-t[0])<=n&&Math.abs(e[1]-t[1])<=n&&Math.abs(e[2]-t[2])<=n&&Math.abs(e[3]-t[3])<=n&&Math.abs(e[4]-t[4])<=n&&Math.abs(e[5]-t[5])<=n&&Math.abs(e[6]-t[6])<=n&&Math.abs(e[7]-t[7])<=n&&Math.abs(e[8]-t[8])<=n&&Math.abs(e[9]-t[9])<=n&&Math.abs(e[10]-t[10])<=n&&Math.abs(e[11]-t[11])<=n&&Math.abs(e[12]-t[12])<=n&&Math.abs(e[13]-t[13])<=n&&Math.abs(e[14]-t[14])<=n&&Math.abs(e[15]-t[15])<=n},l.getTranslation=function(e,t){return t.x=e[12],t.y=e[13],t.z=e[14],t},l.getRotation=function(e,t){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[4],t[4]=e[5],t[5]=e[6],t[6]=e[8],t[7]=e[9],t[8]=e[10],t};var v=new c,g=new c,y=new t,E=new t(0,0,0,1);return l.inverse=function(e,n){if(c.equalsEpsilon(l.getRotation(e,v),g,s.EPSILON7)&&t.equals(l.getRow(e,3,y),E))return n[0]=0,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=0,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=0,n[11]=0,n[12]=-e[12],n[13]=-e[13],n[14]=-e[14],n[15]=1,n;var r=e[0],a=e[4],i=e[8],o=e[12],d=e[1],f=e[5],m=e[9],p=e[13],h=e[2],_=e[6],T=e[10],C=e[14],S=e[3],A=e[7],x=e[11],w=e[15],b=T*w,R=C*x,I=_*w,z=C*A,D=_*x,O=T*A,P=h*w,M=C*S,N=h*x,F=T*S,L=h*A,B=_*S,U=b*f+z*m+D*p-(R*f+I*m+O*p),G=R*d+P*m+F*p-(b*d+M*m+N*p),V=I*d+M*f+L*p-(z*d+P*f+B*p),k=O*d+N*f+B*m-(D*d+F*f+L*m),q=R*a+I*i+O*o-(b*a+z*i+D*o),H=b*r+M*i+N*o-(R*r+P*i+F*o),W=z*r+P*a+B*o-(I*r+M*a+L*o),Y=D*r+F*a+L*i-(O*r+N*a+B*i);b=i*p,R=o*m,I=a*p,z=o*f,D=a*m,O=i*f,P=r*p,M=o*d,N=r*m,F=i*d,L=r*f,B=a*d;var X=b*A+z*x+D*w-(R*A+I*x+O*w),j=R*S+P*x+F*w-(b*S+M*x+N*w),Z=I*S+M*A+L*w-(z*S+P*A+B*w),K=O*S+N*A+B*x-(D*S+F*A+L*x),J=I*T+O*C+R*_-(D*C+b*_+z*T),Q=N*C+b*h+M*T-(P*T+F*C+R*h),$=P*_+B*C+z*h-(L*C+I*h+M*_),ee=L*T+D*h+F*_-(N*_+B*T+O*h),te=r*U+a*G+i*V+o*k;if(Math.abs(te)<s.EPSILON20)throw new u("matrix is not invertible because its determinate is zero.");return te=1/te,n[0]=U*te,n[1]=G*te,n[2]=V*te,n[3]=k*te,n[4]=q*te,n[5]=H*te,n[6]=W*te,n[7]=Y*te,n[8]=X*te,n[9]=j*te,n[10]=Z*te,n[11]=K*te,n[12]=J*te,n[13]=Q*te,n[14]=$*te,n[15]=ee*te,n},l.inverseTransformation=function(e,t){var n=e[0],r=e[1],a=e[2],i=e[4],o=e[5],s=e[6],c=e[8],u=e[9],l=e[10],d=e[12],f=e[13],m=e[14],p=-n*d-r*f-a*m,h=-i*d-o*f-s*m,_=-c*d-u*f-l*m;return t[0]=n,t[1]=i,t[2]=c,t[3]=0,t[4]=r,t[5]=o,t[6]=u,t[7]=0,t[8]=a,t[9]=s,t[10]=l,t[11]=0,t[12]=p,t[13]=h,t[14]=_,t[15]=1,t},l.IDENTITY=o(new l(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)),l.ZERO=o(new l(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)),l.COLUMN0ROW0=0,l.COLUMN0ROW1=1,l.COLUMN0ROW2=2,l.COLUMN0ROW3=3,l.COLUMN1ROW0=4,l.COLUMN1ROW1=5,l.COLUMN1ROW2=6,l.COLUMN1ROW3=7,l.COLUMN2ROW0=8,l.COLUMN2ROW1=9,l.COLUMN2ROW2=10,l.COLUMN2ROW3=11,l.COLUMN3ROW0=12,l.COLUMN3ROW1=13,l.COLUMN3ROW2=14,l.COLUMN3ROW3=15,i(l.prototype,{length:{get:function(){return l.packedLength}}}),l.prototype.clone=function(e){return l.clone(this,e)},l.prototype.equals=function(e){return l.equals(this,e)},l.equalsArray=function(e,t,n){return e[0]===t[n]&&e[1]===t[n+1]&&e[2]===t[n+2]&&e[3]===t[n+3]&&e[4]===t[n+4]&&e[5]===t[n+5]&&e[6]===t[n+6]&&e[7]===t[n+7]&&e[8]===t[n+8]&&e[9]===t[n+9]&&e[10]===t[n+10]&&e[11]===t[n+11]&&e[12]===t[n+12]&&e[13]===t[n+13]&&e[14]===t[n+14]&&e[15]===t[n+15]},l.prototype.equalsEpsilon=function(e,t){return l.equalsEpsilon(this,e,t)},l.prototype.toString=function(){return"("+this[0]+", "+this[4]+", "+this[8]+", "+this[12]+")\n("+this[1]+", "+this[5]+", "+this[9]+", "+this[13]+")\n("+this[2]+", "+this[6]+", "+this[10]+", "+this[14]+")\n("+this[3]+", "+this[7]+", "+this[11]+", "+this[15]+")"},l}),define("Core/Rectangle",["./Cartographic","./Check","./defaultValue","./defined","./defineProperties","./Ellipsoid","./freezeObject","./Math"],function(e,t,n,r,a,i,o,s){"use strict";function c(e,t,r,a){this.west=n(e,0),this.south=n(t,0),this.east=n(r,0),this.north=n(a,0)}a(c.prototype,{width:{get:function(){return c.computeWidth(this)}},height:{get:function(){return c.computeHeight(this)}}}),c.packedLength=4,c.pack=function(e,t,r){return r=n(r,0),t[r++]=e.west,t[r++]=e.south,t[r++]=e.east,t[r]=e.north,t},c.unpack=function(e,t,a){return t=n(t,0),r(a)||(a=new c),a.west=e[t++],a.south=e[t++],a.east=e[t++],a.north=e[t],a},c.computeWidth=function(e){var t=e.east,n=e.west;return t<n&&(t+=s.TWO_PI),t-n},c.computeHeight=function(e){return e.north-e.south},c.fromDegrees=function(e,t,a,i,o){return e=s.toRadians(n(e,0)),t=s.toRadians(n(t,0)),a=s.toRadians(n(a,0)),i=s.toRadians(n(i,0)),r(o)?(o.west=e,o.south=t,o.east=a,o.north=i,o):new c(e,t,a,i)},c.fromRadians=function(e,t,a,i,o){return r(o)?(o.west=n(e,0),o.south=n(t,0),o.east=n(a,0),o.north=n(i,0),o):new c(e,t,a,i)},c.fromCartographicArray=function(e,t){for(var n=Number.MAX_VALUE,a=-Number.MAX_VALUE,i=Number.MAX_VALUE,o=-Number.MAX_VALUE,u=Number.MAX_VALUE,l=-Number.MAX_VALUE,d=0,f=e.length;d<f;d++){var m=e[d];n=Math.min(n,m.longitude),a=Math.max(a,m.longitude),u=Math.min(u,m.latitude),l=Math.max(l,m.latitude);var p=m.longitude>=0?m.longitude:m.longitude+s.TWO_PI;i=Math.min(i,p),o=Math.max(o,p)}return a-n>o-i&&(n=i,a=o,a>s.PI&&(a-=s.TWO_PI),n>s.PI&&(n-=s.TWO_PI)),r(t)?(t.west=n,t.south=u,t.east=a,t.north=l,t):new c(n,u,a,l)},c.fromCartesianArray=function(e,t,a){t=n(t,i.WGS84);for(var o=Number.MAX_VALUE,u=-Number.MAX_VALUE,l=Number.MAX_VALUE,d=-Number.MAX_VALUE,f=Number.MAX_VALUE,m=-Number.MAX_VALUE,p=0,h=e.length;p<h;p++){var _=t.cartesianToCartographic(e[p]);o=Math.min(o,_.longitude),u=Math.max(u,_.longitude),f=Math.min(f,_.latitude),m=Math.max(m,_.latitude);var v=_.longitude>=0?_.longitude:_.longitude+s.TWO_PI;l=Math.min(l,v),d=Math.max(d,v)}return u-o>d-l&&(o=l,u=d,u>s.PI&&(u-=s.TWO_PI),o>s.PI&&(o-=s.TWO_PI)),r(a)?(a.west=o,a.south=f,a.east=u,a.north=m,a):new c(o,f,u,m)},c.clone=function(e,t){if(r(e))return r(t)?(t.west=e.west,t.south=e.south,t.east=e.east,t.north=e.north,t):new c(e.west,e.south,e.east,e.north)},c.equalsEpsilon=function(e,t,n){return e===t||r(e)&&r(t)&&Math.abs(e.west-t.west)<=n&&Math.abs(e.south-t.south)<=n&&Math.abs(e.east-t.east)<=n&&Math.abs(e.north-t.north)<=n},c.prototype.clone=function(e){return c.clone(this,e)},c.prototype.equals=function(e){return c.equals(this,e)},c.equals=function(e,t){return e===t||r(e)&&r(t)&&e.west===t.west&&e.south===t.south&&e.east===t.east&&e.north===t.north},c.prototype.equalsEpsilon=function(e,t){return c.equalsEpsilon(this,e,t)},c.validate=function(e){},c.southwest=function(t,n){return r(n)?(n.longitude=t.west,n.latitude=t.south,n.height=0,n):new e(t.west,t.south)},c.northwest=function(t,n){return r(n)?(n.longitude=t.west,n.latitude=t.north,n.height=0,n):new e(t.west,t.north)},c.northeast=function(t,n){return r(n)?(n.longitude=t.east,n.latitude=t.north,n.height=0,n):new e(t.east,t.north)},c.southeast=function(t,n){return r(n)?(n.longitude=t.east,n.latitude=t.south,n.height=0,n):new e(t.east,t.south)},c.center=function(t,n){var a=t.east,i=t.west;a<i&&(a+=s.TWO_PI);var o=s.negativePiToPi(.5*(i+a)),c=.5*(t.south+t.north);return r(n)?(n.longitude=o,n.latitude=c,n.height=0,n):new e(o,c)},c.intersection=function(e,t,n){var a=e.east,i=e.west,o=t.east,u=t.west;a<i&&o>0?a+=s.TWO_PI:o<u&&a>0&&(o+=s.TWO_PI),a<i&&u<0?u+=s.TWO_PI:o<u&&i<0&&(i+=s.TWO_PI);var l=s.negativePiToPi(Math.max(i,u)),d=s.negativePiToPi(Math.min(a,o));if(!((e.west<e.east||t.west<t.east)&&d<=l)){var f=Math.max(e.south,t.south),m=Math.min(e.north,t.north);if(!(f>=m))return r(n)?(n.west=l,n.south=f,n.east=d,n.north=m,n):new c(l,f,d,m)}},c.simpleIntersection=function(e,t,n){var a=Math.max(e.west,t.west),i=Math.max(e.south,t.south),o=Math.min(e.east,t.east),s=Math.min(e.north,t.north);if(!(i>=s||a>=o))return r(n)?(n.west=a,n.south=i,n.east=o,n.north=s,n):new c(a,i,o,s)},c.union=function(e,t,n){r(n)||(n=new c);var a=e.east,i=e.west,o=t.east,u=t.west;a<i&&o>0?a+=s.TWO_PI:o<u&&a>0&&(o+=s.TWO_PI),a<i&&u<0?u+=s.TWO_PI:o<u&&i<0&&(i+=s.TWO_PI);var l=s.convertLongitudeRange(Math.min(i,u)),d=s.convertLongitudeRange(Math.max(a,o));return n.west=l,n.south=Math.min(e.south,t.south),n.east=d,n.north=Math.max(e.north,t.north),n},c.expand=function(e,t,n){return r(n)||(n=new c),n.west=Math.min(e.west,t.longitude),n.south=Math.min(e.south,t.latitude),n.east=Math.max(e.east,t.longitude),n.north=Math.max(e.north,t.latitude),n},c.contains=function(e,t){var n=t.longitude,r=t.latitude,a=e.west,i=e.east;return i<a&&(i+=s.TWO_PI,n<0&&(n+=s.TWO_PI)),(n>a||s.equalsEpsilon(n,a,s.EPSILON14))&&(n<i||s.equalsEpsilon(n,i,s.EPSILON14))&&r>=e.south&&r<=e.north};var u=new e;return c.subsample=function(e,t,a,o){t=n(t,i.WGS84),a=n(a,0),r(o)||(o=[]);var l=0,d=e.north,f=e.south,m=e.east,p=e.west,h=u;h.height=a,h.longitude=p,h.latitude=d,o[l]=t.cartographicToCartesian(h,o[l]),l++,h.longitude=m,o[l]=t.cartographicToCartesian(h,o[l]),l++,h.latitude=f,o[l]=t.cartographicToCartesian(h,o[l]),l++,h.longitude=p,o[l]=t.cartographicToCartesian(h,o[l]),l++,h.latitude=d<0?d:f>0?f:0;for(var _=1;_<8;++_)h.longitude=-Math.PI+_*s.PI_OVER_TWO,c.contains(e,h)&&(o[l]=t.cartographicToCartesian(h,o[l]),l++);return 0===h.latitude&&(h.longitude=p,o[l]=t.cartographicToCartesian(h,o[l]),l++,h.longitude=m,o[l]=t.cartographicToCartesian(h,o[l]),l++),o.length=l,o},c.MAX_VALUE=o(new c(-Math.PI,-s.PI_OVER_TWO,Math.PI,s.PI_OVER_TWO)),c}),define("Core/BoundingSphere",["./Cartesian3","./Cartographic","./Check","./defaultValue","./defined","./Ellipsoid","./GeographicProjection","./Intersect","./Interval","./Math","./Matrix3","./Matrix4","./Rectangle"],function(e,t,n,r,a,i,o,s,c,u,l,d,f){"use strict";function m(t,n){this.center=e.clone(r(t,e.ZERO)),this.radius=r(n,0)}var p=new e,h=new e,_=new e,v=new e,g=new e,y=new e,E=new e,T=new e,C=new e,S=new e,A=new e,x=new e,w=4/3*u.PI;m.fromPoints=function(t,n){if(a(n)||(n=new m),!a(t)||0===t.length)return n.center=e.clone(e.ZERO,n.center),n.radius=0,n;var r,i=e.clone(t[0],E),o=e.clone(i,p),s=e.clone(i,h),c=e.clone(i,_),u=e.clone(i,v),l=e.clone(i,g),d=e.clone(i,y),f=t.length;for(r=1;r<f;r++){e.clone(t[r],i);var w=i.x,b=i.y,R=i.z;w<o.x&&e.clone(i,o),w>u.x&&e.clone(i,u),b<s.y&&e.clone(i,s),b>l.y&&e.clone(i,l),R<c.z&&e.clone(i,c),R>d.z&&e.clone(i,d)}var I=e.magnitudeSquared(e.subtract(u,o,T)),z=e.magnitudeSquared(e.subtract(l,s,T)),D=e.magnitudeSquared(e.subtract(d,c,T)),O=o,P=u,M=I;z>M&&(M=z,O=s,P=l),D>M&&(M=D,O=c,P=d);var N=C;N.x=.5*(O.x+P.x),N.y=.5*(O.y+P.y),N.z=.5*(O.z+P.z);var F=e.magnitudeSquared(e.subtract(P,N,T)),L=Math.sqrt(F),B=S;B.x=o.x,B.y=s.y,B.z=c.z;var U=A;U.x=u.x,U.y=l.y,U.z=d.z;var G=e.midpoint(B,U,x),V=0;for(r=0;r<f;r++){e.clone(t[r],i);var k=e.magnitude(e.subtract(i,G,T));k>V&&(V=k);var q=e.magnitudeSquared(e.subtract(i,N,T));if(q>F){var H=Math.sqrt(q);L=.5*(L+H),F=L*L;var W=H-L;N.x=(L*N.x+W*i.x)/H,N.y=(L*N.y+W*i.y)/H,N.z=(L*N.z+W*i.z)/H}}return L<V?(e.clone(N,n.center),n.radius=L):(e.clone(G,n.center),n.radius=V),n};var b=new o,R=new e,I=new e,z=new t,D=new t;m.fromRectangle2D=function(e,t,n){return m.fromRectangleWithHeights2D(e,t,0,0,n)},m.fromRectangleWithHeights2D=function(t,n,i,o,s){if(a(s)||(s=new m),!a(t))return s.center=e.clone(e.ZERO,s.center),s.radius=0,s;n=r(n,b),f.southwest(t,z),z.height=i,f.northeast(t,D),D.height=o;var c=n.project(z,R),u=n.project(D,I),l=u.x-c.x,d=u.y-c.y,p=u.z-c.z;s.radius=.5*Math.sqrt(l*l+d*d+p*p);var h=s.center;return h.x=c.x+.5*l,h.y=c.y+.5*d,h.z=c.z+.5*p,s};var O=[];m.fromRectangle3D=function(t,n,o,s){if(n=r(n,i.WGS84),o=r(o,0),a(s)||(s=new m),!a(t))return s.center=e.clone(e.ZERO,s.center),s.radius=0,s;var c=f.subsample(t,n,o,O);return m.fromPoints(c,s)},m.fromVertices=function(t,n,i,o){if(a(o)||(o=new m),!a(t)||0===t.length)return o.center=e.clone(e.ZERO,o.center),o.radius=0,o;n=r(n,e.ZERO),i=r(i,3);var s=E;s.x=t[0]+n.x,s.y=t[1]+n.y,s.z=t[2]+n.z;var c,u=e.clone(s,p),l=e.clone(s,h),d=e.clone(s,_),f=e.clone(s,v),w=e.clone(s,g),b=e.clone(s,y),R=t.length;for(c=0;c<R;c+=i){var I=t[c]+n.x,z=t[c+1]+n.y,D=t[c+2]+n.z;s.x=I,s.y=z,s.z=D,I<u.x&&e.clone(s,u),I>f.x&&e.clone(s,f),z<l.y&&e.clone(s,l),z>w.y&&e.clone(s,w),D<d.z&&e.clone(s,d),D>b.z&&e.clone(s,b)}var O=e.magnitudeSquared(e.subtract(f,u,T)),P=e.magnitudeSquared(e.subtract(w,l,T)),M=e.magnitudeSquared(e.subtract(b,d,T)),N=u,F=f,L=O;P>L&&(L=P,N=l,F=w),M>L&&(L=M,N=d,F=b);var B=C;B.x=.5*(N.x+F.x),B.y=.5*(N.y+F.y),B.z=.5*(N.z+F.z);var U=e.magnitudeSquared(e.subtract(F,B,T)),G=Math.sqrt(U),V=S;V.x=u.x,V.y=l.y,V.z=d.z;var k=A;k.x=f.x,k.y=w.y,k.z=b.z;var q=e.midpoint(V,k,x),H=0;for(c=0;c<R;c+=i){s.x=t[c]+n.x,s.y=t[c+1]+n.y,s.z=t[c+2]+n.z;var W=e.magnitude(e.subtract(s,q,T));W>H&&(H=W);var Y=e.magnitudeSquared(e.subtract(s,B,T));if(Y>U){var X=Math.sqrt(Y);G=.5*(G+X),U=G*G;var j=X-G;B.x=(G*B.x+j*s.x)/X,B.y=(G*B.y+j*s.y)/X,B.z=(G*B.z+j*s.z)/X}}return G<H?(e.clone(B,o.center),o.radius=G):(e.clone(q,o.center),o.radius=H),o},m.fromEncodedCartesianVertices=function(t,n,r){if(a(r)||(r=new m),!a(t)||!a(n)||t.length!==n.length||0===t.length)return r.center=e.clone(e.ZERO,r.center),r.radius=0,r;var i=E;i.x=t[0]+n[0],i.y=t[1]+n[1],i.z=t[2]+n[2];var o,s=e.clone(i,p),c=e.clone(i,h),u=e.clone(i,_),l=e.clone(i,v),d=e.clone(i,g),f=e.clone(i,y),w=t.length;for(o=0;o<w;o+=3){var b=t[o]+n[o],R=t[o+1]+n[o+1],I=t[o+2]+n[o+2];i.x=b,i.y=R,i.z=I,b<s.x&&e.clone(i,s),b>l.x&&e.clone(i,l),R<c.y&&e.clone(i,c),R>d.y&&e.clone(i,d),I<u.z&&e.clone(i,u),I>f.z&&e.clone(i,f)}var z=e.magnitudeSquared(e.subtract(l,s,T)),D=e.magnitudeSquared(e.subtract(d,c,T)),O=e.magnitudeSquared(e.subtract(f,u,T)),P=s,M=l,N=z;D>N&&(N=D,P=c,M=d),O>N&&(N=O,P=u,M=f);var F=C;F.x=.5*(P.x+M.x),F.y=.5*(P.y+M.y),F.z=.5*(P.z+M.z);var L=e.magnitudeSquared(e.subtract(M,F,T)),B=Math.sqrt(L),U=S;U.x=s.x,U.y=c.y,U.z=u.z;var G=A;G.x=l.x,G.y=d.y,G.z=f.z;var V=e.midpoint(U,G,x),k=0;for(o=0;o<w;o+=3){i.x=t[o]+n[o],i.y=t[o+1]+n[o+1],i.z=t[o+2]+n[o+2];var q=e.magnitude(e.subtract(i,V,T));q>k&&(k=q)
;var H=e.magnitudeSquared(e.subtract(i,F,T));if(H>L){var W=Math.sqrt(H);B=.5*(B+W),L=B*B;var Y=W-B;F.x=(B*F.x+Y*i.x)/W,F.y=(B*F.y+Y*i.y)/W,F.z=(B*F.z+Y*i.z)/W}}return B<k?(e.clone(F,r.center),r.radius=B):(e.clone(V,r.center),r.radius=k),r},m.fromCornerPoints=function(t,n,r){a(r)||(r=new m);var i=e.midpoint(t,n,r.center);return r.radius=e.distance(i,n),r},m.fromEllipsoid=function(t,n){return a(n)||(n=new m),e.clone(e.ZERO,n.center),n.radius=t.maximumRadius,n};var P=new e;m.fromBoundingSpheres=function(t,n){if(a(n)||(n=new m),!a(t)||0===t.length)return n.center=e.clone(e.ZERO,n.center),n.radius=0,n;var r=t.length;if(1===r)return m.clone(t[0],n);if(2===r)return m.union(t[0],t[1],n);var i,o=[];for(i=0;i<r;i++)o.push(t[i].center);n=m.fromPoints(o,n);var s=n.center,c=n.radius;for(i=0;i<r;i++){var u=t[i];c=Math.max(c,e.distance(s,u.center,P)+u.radius)}return n.radius=c,n};var M=new e,N=new e,F=new e;m.fromOrientedBoundingBox=function(t,n){a(n)||(n=new m);var r=t.halfAxes,i=l.getColumn(r,0,M),o=l.getColumn(r,1,N),s=l.getColumn(r,2,F);return e.add(i,o,i),e.add(i,s,i),n.center=e.clone(t.center,n.center),n.radius=e.magnitude(i),n},m.clone=function(t,n){if(a(t))return a(n)?(n.center=e.clone(t.center,n.center),n.radius=t.radius,n):new m(t.center,t.radius)},m.packedLength=4,m.pack=function(e,t,n){n=r(n,0);var a=e.center;return t[n++]=a.x,t[n++]=a.y,t[n++]=a.z,t[n]=e.radius,t},m.unpack=function(e,t,n){t=r(t,0),a(n)||(n=new m);var i=n.center;return i.x=e[t++],i.y=e[t++],i.z=e[t++],n.radius=e[t],n};var L=new e,B=new e;m.union=function(t,n,r){a(r)||(r=new m);var i=t.center,o=t.radius,s=n.center,c=n.radius,u=e.subtract(s,i,L),l=e.magnitude(u);if(o>=l+c)return t.clone(r),r;if(c>=l+o)return n.clone(r),r;var d=.5*(o+l+c),f=e.multiplyByScalar(u,(-o+d)/l,B);return e.add(f,i,f),e.clone(f,r.center),r.radius=d,r};var U=new e;m.expand=function(t,n,r){r=m.clone(t,r);var a=e.magnitude(e.subtract(n,r.center,U));return a>r.radius&&(r.radius=a),r},m.intersectPlane=function(t,n){var r=t.center,a=t.radius,i=n.normal,o=e.dot(i,r)+n.distance;return o<-a?s.OUTSIDE:o<a?s.INTERSECTING:s.INSIDE},m.transform=function(e,t,n){return a(n)||(n=new m),n.center=d.multiplyByPoint(t,e.center,n.center),n.radius=d.getMaximumScale(t)*e.radius,n};var G=new e;m.distanceSquaredTo=function(t,n){var r=e.subtract(t.center,n,G);return e.magnitudeSquared(r)-t.radius*t.radius},m.transformWithoutScale=function(e,t,n){return a(n)||(n=new m),n.center=d.multiplyByPoint(t,e.center,n.center),n.radius=e.radius,n};var V=new e;m.computePlaneDistances=function(t,n,r,i){a(i)||(i=new c);var o=e.subtract(t.center,n,V),s=e.dot(r,o);return i.start=s-t.radius,i.stop=s+t.radius,i};for(var k=new e,q=new e,H=new e,W=new e,Y=new e,X=new t,j=new Array(8),Z=0;Z<8;++Z)j[Z]=new e;var K=new o;return m.projectTo2D=function(t,n,a){n=r(n,K);var i=n.ellipsoid,o=t.center,s=t.radius,c=i.geodeticSurfaceNormal(o,k),u=e.cross(e.UNIT_Z,c,q);e.normalize(u,u);var l=e.cross(c,u,H);e.normalize(l,l),e.multiplyByScalar(c,s,c),e.multiplyByScalar(l,s,l),e.multiplyByScalar(u,s,u);var d=e.negate(l,Y),f=e.negate(u,W),p=j,h=p[0];e.add(c,l,h),e.add(h,u,h),h=p[1],e.add(c,l,h),e.add(h,f,h),h=p[2],e.add(c,d,h),e.add(h,f,h),h=p[3],e.add(c,d,h),e.add(h,u,h),e.negate(c,c),h=p[4],e.add(c,l,h),e.add(h,u,h),h=p[5],e.add(c,l,h),e.add(h,f,h),h=p[6],e.add(c,d,h),e.add(h,f,h),h=p[7],e.add(c,d,h),e.add(h,u,h);for(var _=p.length,v=0;v<_;++v){var g=p[v];e.add(o,g,g);var y=i.cartesianToCartographic(g,X);n.project(y,g)}a=m.fromPoints(p,a),o=a.center;var E=o.x,T=o.y,C=o.z;return o.x=C,o.y=E,o.z=T,a},m.isOccluded=function(e,t){return!t.isBoundingSphereVisible(e)},m.equals=function(t,n){return t===n||a(t)&&a(n)&&e.equals(t.center,n.center)&&t.radius===n.radius},m.prototype.intersectPlane=function(e){return m.intersectPlane(this,e)},m.prototype.distanceSquaredTo=function(e){return m.distanceSquaredTo(this,e)},m.prototype.computePlaneDistances=function(e,t,n){return m.computePlaneDistances(this,e,t,n)},m.prototype.isOccluded=function(e){return m.isOccluded(this,e)},m.prototype.equals=function(e){return m.equals(this,e)},m.prototype.clone=function(e){return m.clone(this,e)},m.prototype.volume=function(){var e=this.radius;return w*e*e*e},m}),define("Core/Cartesian2",["./Check","./defaultValue","./defined","./DeveloperError","./freezeObject","./Math"],function(e,t,n,r,a,i){"use strict";function o(e,n){this.x=t(e,0),this.y=t(n,0)}o.fromElements=function(e,t,r){return n(r)?(r.x=e,r.y=t,r):new o(e,t)},o.clone=function(e,t){if(n(e))return n(t)?(t.x=e.x,t.y=e.y,t):new o(e.x,e.y)},o.fromCartesian3=o.clone,o.fromCartesian4=o.clone,o.packedLength=2,o.pack=function(e,n,r){return r=t(r,0),n[r++]=e.x,n[r]=e.y,n},o.unpack=function(e,r,a){return r=t(r,0),n(a)||(a=new o),a.x=e[r++],a.y=e[r],a},o.packArray=function(e,t){var r=e.length;n(t)?t.length=2*r:t=new Array(2*r);for(var a=0;a<r;++a)o.pack(e[a],t,2*a);return t},o.unpackArray=function(e,t){var r=e.length;n(t)?t.length=r/2:t=new Array(r/2);for(var a=0;a<r;a+=2){var i=a/2;t[i]=o.unpack(e,a,t[i])}return t},o.fromArray=o.unpack,o.maximumComponent=function(e){return Math.max(e.x,e.y)},o.minimumComponent=function(e){return Math.min(e.x,e.y)},o.minimumByComponent=function(e,t,n){return n.x=Math.min(e.x,t.x),n.y=Math.min(e.y,t.y),n},o.maximumByComponent=function(e,t,n){return n.x=Math.max(e.x,t.x),n.y=Math.max(e.y,t.y),n},o.magnitudeSquared=function(e){return e.x*e.x+e.y*e.y},o.magnitude=function(e){return Math.sqrt(o.magnitudeSquared(e))};var s=new o;o.distance=function(e,t){return o.subtract(e,t,s),o.magnitude(s)},o.distanceSquared=function(e,t){return o.subtract(e,t,s),o.magnitudeSquared(s)},o.normalize=function(e,t){var n=o.magnitude(e);return t.x=e.x/n,t.y=e.y/n,t},o.dot=function(e,t){return e.x*t.x+e.y*t.y},o.multiplyComponents=function(e,t,n){return n.x=e.x*t.x,n.y=e.y*t.y,n},o.divideComponents=function(e,t,n){return n.x=e.x/t.x,n.y=e.y/t.y,n},o.add=function(e,t,n){return n.x=e.x+t.x,n.y=e.y+t.y,n},o.subtract=function(e,t,n){return n.x=e.x-t.x,n.y=e.y-t.y,n},o.multiplyByScalar=function(e,t,n){return n.x=e.x*t,n.y=e.y*t,n},o.divideByScalar=function(e,t,n){return n.x=e.x/t,n.y=e.y/t,n},o.negate=function(e,t){return t.x=-e.x,t.y=-e.y,t},o.abs=function(e,t){return t.x=Math.abs(e.x),t.y=Math.abs(e.y),t};var c=new o;o.lerp=function(e,t,n,r){return o.multiplyByScalar(t,n,c),r=o.multiplyByScalar(e,1-n,r),o.add(c,r,r)};var u=new o,l=new o;o.angleBetween=function(e,t){return o.normalize(e,u),o.normalize(t,l),i.acosClamped(o.dot(u,l))};var d=new o;return o.mostOrthogonalAxis=function(e,t){var n=o.normalize(e,d);return o.abs(n,n),t=n.x<=n.y?o.clone(o.UNIT_X,t):o.clone(o.UNIT_Y,t)},o.equals=function(e,t){return e===t||n(e)&&n(t)&&e.x===t.x&&e.y===t.y},o.equalsArray=function(e,t,n){return e.x===t[n]&&e.y===t[n+1]},o.equalsEpsilon=function(e,t,r,a){return e===t||n(e)&&n(t)&&i.equalsEpsilon(e.x,t.x,r,a)&&i.equalsEpsilon(e.y,t.y,r,a)},o.ZERO=a(new o(0,0)),o.UNIT_X=a(new o(1,0)),o.UNIT_Y=a(new o(0,1)),o.prototype.clone=function(e){return o.clone(this,e)},o.prototype.equals=function(e){return o.equals(this,e)},o.prototype.equalsEpsilon=function(e,t,n){return o.equalsEpsilon(this,e,t,n)},o.prototype.toString=function(){return"("+this.x+", "+this.y+")"},o}),define("Core/GeographicTilingScheme",["./Cartesian2","./Check","./defaultValue","./defined","./defineProperties","./Ellipsoid","./GeographicProjection","./Math","./Rectangle"],function(e,t,n,r,a,i,o,s,c){"use strict";function u(e){e=n(e,{}),this._ellipsoid=n(e.ellipsoid,i.WGS84),this._rectangle=n(e.rectangle,c.MAX_VALUE),this._projection=new o(this._ellipsoid),this._numberOfLevelZeroTilesX=n(e.numberOfLevelZeroTilesX,2),this._numberOfLevelZeroTilesY=n(e.numberOfLevelZeroTilesY,1)}return a(u.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},rectangle:{get:function(){return this._rectangle}},projection:{get:function(){return this._projection}}}),u.prototype.getNumberOfXTilesAtLevel=function(e){return this._numberOfLevelZeroTilesX<<e},u.prototype.getNumberOfYTilesAtLevel=function(e){return this._numberOfLevelZeroTilesY<<e},u.prototype.rectangleToNativeRectangle=function(e,t){var n=s.toDegrees(e.west),a=s.toDegrees(e.south),i=s.toDegrees(e.east),o=s.toDegrees(e.north);return r(t)?(t.west=n,t.south=a,t.east=i,t.north=o,t):new c(n,a,i,o)},u.prototype.tileXYToNativeRectangle=function(e,t,n,r){var a=this.tileXYToRectangle(e,t,n,r);return a.west=s.toDegrees(a.west),a.south=s.toDegrees(a.south),a.east=s.toDegrees(a.east),a.north=s.toDegrees(a.north),a},u.prototype.tileXYToRectangle=function(e,t,n,a){var i=this._rectangle,o=this.getNumberOfXTilesAtLevel(n),s=this.getNumberOfYTilesAtLevel(n),u=i.width/o,l=e*u+i.west,d=(e+1)*u+i.west,f=i.height/s,m=i.north-t*f,p=i.north-(t+1)*f;return r(a)||(a=new c(l,p,d,m)),a.west=l,a.south=p,a.east=d,a.north=m,a},u.prototype.positionToTileXY=function(t,n,a){var i=this._rectangle;if(c.contains(i,t)){var o=this.getNumberOfXTilesAtLevel(n),u=this.getNumberOfYTilesAtLevel(n),l=i.width/o,d=i.height/u,f=t.longitude;i.east<i.west&&(f+=s.TWO_PI);var m=(f-i.west)/l|0;m>=o&&(m=o-1);var p=(i.north-t.latitude)/d|0;return p>=u&&(p=u-1),r(a)?(a.x=m,a.y=p,a):new e(m,p)}},u}),define("Core/ApproximateTerrainHeights",["./buildModuleUrl","./defaultValue","./defined","./BoundingSphere","./Cartesian2","./Cartesian3","./Cartographic","./Check","./DeveloperError","./Ellipsoid","./GeographicTilingScheme","./Rectangle","./Resource"],function(e,t,n,r,a,i,o,s,c,u,l,d,f){"use strict";function m(e){o.fromRadians(e.east,e.north,0,T[0]),o.fromRadians(e.west,e.north,0,T[1]),o.fromRadians(e.east,e.south,0,T[2]),o.fromRadians(e.west,e.south,0,T[3]);var t,n=0,r=0,a=0,i=0,s=S._terrainHeightsMaxLevel;for(t=0;t<=s;++t){for(var c=!1,u=0;u<4;++u){var l=T[u];if(E.positionToTileXY(l,t,C),0===u)a=C.x,i=C.y;else if(a!==C.x||i!==C.y){c=!0;break}}if(c)break;n=a,r=i}if(0!==t)return{x:n,y:r,level:t>s?s:t-1}}var p=new i,h=new i,_=new o,v=new i,g=new i,y=new r,E=new l,T=[new o,new o,new o,new o],C=new a,S={};return S.initialize=function(){var t=S._initPromise;return n(t)?t:(t=f.fetchJson(e("Assets/approximateTerrainHeights.json")).then(function(e){S._terrainHeights=e}),S._initPromise=t,t)},S.getApproximateTerrainHeights=function(e,r){r=t(r,u.WGS84);var a=m(e),o=S._defaultMinTerrainHeight,s=S._defaultMaxTerrainHeight;if(n(a)){var c=a.level+"-"+a.x+"-"+a.y,l=S._terrainHeights[c];n(l)&&(o=l[0],s=l[1]),r.cartographicToCartesian(d.northeast(e,_),p),r.cartographicToCartesian(d.southwest(e,_),h),i.midpoint(h,p,v);var f=r.scaleToGeodeticSurface(v,g);if(n(f)){var y=i.distance(v,f);o=Math.min(o,-y)}else o=S._defaultMinTerrainHeight}return o=Math.max(S._defaultMinTerrainHeight,o),{minimumTerrainHeight:o,maximumTerrainHeight:s}},S.getInstanceBoundingSphere=function(e,a){a=t(a,u.WGS84);var i=m(e),o=S._defaultMaxTerrainHeight;if(n(i)){var s=i.level+"-"+i.x+"-"+i.y,c=S._terrainHeights[s];n(c)&&(o=c[1])}var l=r.fromRectangle3D(e,a,0);return r.fromRectangle3D(e,a,o,y),r.union(l,y,l)},S._terrainHeightsMaxLevel=6,S._defaultMaxTerrainHeight=9e3,S._defaultMinTerrainHeight=-1e5,S._terrainHeights=void 0,S._initPromise=void 0,S}),define("Core/arrayRemoveDuplicates",["./Check","./defaultValue","./defined","./Math"],function(e,t,n,r){"use strict";function a(e,r,a){if(n(e)){a=t(a,!1);var o=e.length;if(o<2)return e;var s,c,u;for(s=1;s<o&&(c=e[s-1],u=e[s],!r(c,u,i));++s);if(s===o)return a&&r(e[0],e[e.length-1],i)?e.slice(1):e;for(var l=e.slice(0,s);s<o;++s)u=e[s],r(c,u,i)||(l.push(u),c=u);return a&&l.length>1&&r(l[0],l[l.length-1],i)&&l.shift(),l}}var i=r.EPSILON10;return a}),define("Core/WebGLConstants",["./freezeObject"],function(e){"use strict";return e({DEPTH_BUFFER_BIT:256,STENCIL_BUFFER_BIT:1024,COLOR_BUFFER_BIT:16384,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775,SRC_ALPHA_SATURATE:776,FUNC_ADD:32774,BLEND_EQUATION:32777,BLEND_EQUATION_RGB:32777,BLEND_EQUATION_ALPHA:34877,FUNC_SUBTRACT:32778,FUNC_REVERSE_SUBTRACT:32779,BLEND_DST_RGB:32968,BLEND_SRC_RGB:32969,BLEND_DST_ALPHA:32970,BLEND_SRC_ALPHA:32971,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,BLEND_COLOR:32773,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,ARRAY_BUFFER_BINDING:34964,ELEMENT_ARRAY_BUFFER_BINDING:34965,STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048,BUFFER_SIZE:34660,BUFFER_USAGE:34661,CURRENT_VERTEX_ATTRIB:34342,FRONT:1028,BACK:1029,FRONT_AND_BACK:1032,CULL_FACE:2884,BLEND:3042,DITHER:3024,STENCIL_TEST:2960,DEPTH_TEST:2929,SCISSOR_TEST:3089,POLYGON_OFFSET_FILL:32823,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_COVERAGE:32928,NO_ERROR:0,INVALID_ENUM:1280,INVALID_VALUE:1281,INVALID_OPERATION:1282,OUT_OF_MEMORY:1285,CW:2304,CCW:2305,LINE_WIDTH:2849,ALIASED_POINT_SIZE_RANGE:33901,ALIASED_LINE_WIDTH_RANGE:33902,CULL_FACE_MODE:2885,FRONT_FACE:2886,DEPTH_RANGE:2928,DEPTH_WRITEMASK:2930,DEPTH_CLEAR_VALUE:2931,DEPTH_FUNC:2932,STENCIL_CLEAR_VALUE:2961,STENCIL_FUNC:2962,STENCIL_FAIL:2964,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STENCIL_BACK_FUNC:34816,STENCIL_BACK_FAIL:34817,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,VIEWPORT:2978,SCISSOR_BOX:3088,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,UNPACK_ALIGNMENT:3317,PACK_ALIGNMENT:3333,MAX_TEXTURE_SIZE:3379,MAX_VIEWPORT_DIMS:3386,SUBPIXEL_BITS:3408,RED_BITS:3410,GREEN_BITS:3411,BLUE_BITS:3412,ALPHA_BITS:3413,DEPTH_BITS:3414,STENCIL_BITS:3415,POLYGON_OFFSET_UNITS:10752,POLYGON_OFFSET_FACTOR:32824,TEXTURE_BINDING_2D:32873,SAMPLE_BUFFERS:32936,SAMPLES:32937,SAMPLE_COVERAGE_VALUE:32938,SAMPLE_COVERAGE_INVERT:32939,COMPRESSED_TEXTURE_FORMATS:34467,DONT_CARE:4352,FASTEST:4353,NICEST:4354,GENERATE_MIPMAP_HINT:33170,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FRAGMENT_SHADER:35632,VERTEX_SHADER:35633,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VARYING_VECTORS:36348,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_FRAGMENT_UNIFORM_VECTORS:36349,SHADER_TYPE:35663,DELETE_STATUS:35712,LINK_STATUS:35714,VALIDATE_STATUS:35715,ATTACHED_SHADERS:35717,ACTIVE_UNIFORMS:35718,ACTIVE_ATTRIBUTES:35721,SHADING_LANGUAGE_VERSION:35724,CURRENT_PROGRAM:35725,NEVER:512,LESS:513,EQUAL:514,LEQUAL:515,GREATER:516,NOTEQUAL:517,GEQUAL:518,ALWAYS:519,KEEP:7680,REPLACE:7681,INCR:7682,DECR:7683,INVERT:5386,INCR_WRAP:34055,DECR_WRAP:34056,VENDOR:7936,RENDERER:7937,VERSION:7938,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TEXTURE_2D:3553,TEXTURE:5890,TEXTURE_CUBE_MAP:34067,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,MAX_CUBE_MAP_TEXTURE_SIZE:34076,TEXTURE0:33984,TEXTURE1:33985,TEXTURE2:33986,TEXTURE3:33987,TEXTURE4:33988,TEXTURE5:33989,TEXTURE6:33990,TEXTURE7:33991,TEXTURE8:33992,TEXTURE9:33993,TEXTURE10:33994,TEXTURE11:33995,TEXTURE12:33996,TEXTURE13:33997,TEXTURE14:33998,TEXTURE15:33999,TEXTURE16:34e3,TEXTURE17:34001,TEXTURE18:34002,TEXTURE19:34003,TEXTURE20:34004,TEXTURE21:34005,TEXTURE22:34006,TEXTURE23:34007,TEXTURE24:34008,TEXTURE25:34009,TEXTURE26:34010,TEXTURE27:34011,TEXTURE28:34012,TEXTURE29:34013,TEXTURE30:34014,TEXTURE31:34015,ACTIVE_TEXTURE:34016,REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,IMPLEMENTATION_COLOR_READ_TYPE:35738,IMPLEMENTATION_COLOR_READ_FORMAT:35739,COMPILE_STATUS:35713,LOW_FLOAT:36336,MEDIUM_FLOAT:36337,HIGH_FLOAT:36338,LOW_INT:36339,MEDIUM_INT:36340,HIGH_INT:36341,FRAMEBUFFER:36160,RENDERBUFFER:36161,RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,RENDERBUFFER_WIDTH:36162,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_STENCIL_SIZE:36181,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,COLOR_ATTACHMENT0:36064,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306,NONE:0,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_UNSUPPORTED:36061,FRAMEBUFFER_BINDING:36006,RENDERBUFFER_BINDING:36007,MAX_RENDERBUFFER_SIZE:34024,INVALID_FRAMEBUFFER_OPERATION:1286,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,CONTEXT_LOST_WEBGL:37442,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,BROWSER_DEFAULT_WEBGL:37444,COMPRESSED_RGB_S3TC_DXT1_EXT:33776,COMPRESSED_RGBA_S3TC_DXT1_EXT:33777,COMPRESSED_RGBA_S3TC_DXT3_EXT:33778,COMPRESSED_RGBA_S3TC_DXT5_EXT:33779,COMPRESSED_RGB_PVRTC_4BPPV1_IMG:35840,COMPRESSED_RGB_PVRTC_2BPPV1_IMG:35841,COMPRESSED_RGBA_PVRTC_4BPPV1_IMG:35842,COMPRESSED_RGBA_PVRTC_2BPPV1_IMG:35843,COMPRESSED_RGB_ETC1_WEBGL:36196,HALF_FLOAT_OES:36193,DOUBLE:5130,READ_BUFFER:3074,UNPACK_ROW_LENGTH:3314,UNPACK_SKIP_ROWS:3315,UNPACK_SKIP_PIXELS:3316,PACK_ROW_LENGTH:3330,PACK_SKIP_ROWS:3331,PACK_SKIP_PIXELS:3332,COLOR:6144,DEPTH:6145,STENCIL:6146,RED:6403,RGB8:32849,RGBA8:32856,RGB10_A2:32857,TEXTURE_BINDING_3D:32874,UNPACK_SKIP_IMAGES:32877,UNPACK_IMAGE_HEIGHT:32878,TEXTURE_3D:32879,TEXTURE_WRAP_R:32882,MAX_3D_TEXTURE_SIZE:32883,UNSIGNED_INT_2_10_10_10_REV:33640,MAX_ELEMENTS_VERTICES:33e3,MAX_ELEMENTS_INDICES:33001,TEXTURE_MIN_LOD:33082,TEXTURE_MAX_LOD:33083,TEXTURE_BASE_LEVEL:33084,TEXTURE_MAX_LEVEL:33085,MIN:32775,MAX:32776,DEPTH_COMPONENT24:33190,MAX_TEXTURE_LOD_BIAS:34045,TEXTURE_COMPARE_MODE:34892,TEXTURE_COMPARE_FUNC:34893,CURRENT_QUERY:34917,QUERY_RESULT:34918,QUERY_RESULT_AVAILABLE:34919,STREAM_READ:35041,STREAM_COPY:35042,STATIC_READ:35045,STATIC_COPY:35046,DYNAMIC_READ:35049,DYNAMIC_COPY:35050,MAX_DRAW_BUFFERS:34852,DRAW_BUFFER0:34853,DRAW_BUFFER1:34854,DRAW_BUFFER2:34855,DRAW_BUFFER3:34856,DRAW_BUFFER4:34857,DRAW_BUFFER5:34858,DRAW_BUFFER6:34859,DRAW_BUFFER7:34860,DRAW_BUFFER8:34861,DRAW_BUFFER9:34862,DRAW_BUFFER10:34863,DRAW_BUFFER11:34864,DRAW_BUFFER12:34865,DRAW_BUFFER13:34866,DRAW_BUFFER14:34867,DRAW_BUFFER15:34868,MAX_FRAGMENT_UNIFORM_COMPONENTS:35657,MAX_VERTEX_UNIFORM_COMPONENTS:35658,SAMPLER_3D:35679,SAMPLER_2D_SHADOW:35682,FRAGMENT_SHADER_DERIVATIVE_HINT:35723,PIXEL_PACK_BUFFER:35051,PIXEL_UNPACK_BUFFER:35052,PIXEL_PACK_BUFFER_BINDING:35053,PIXEL_UNPACK_BUFFER_BINDING:35055,FLOAT_MAT2x3:35685,FLOAT_MAT2x4:35686,FLOAT_MAT3x2:35687,FLOAT_MAT3x4:35688,FLOAT_MAT4x2:35689,FLOAT_MAT4x3:35690,SRGB:35904,SRGB8:35905,SRGB8_ALPHA8:35907,COMPARE_REF_TO_TEXTURE:34894,RGBA32F:34836,RGB32F:34837,RGBA16F:34842,RGB16F:34843,VERTEX_ATTRIB_ARRAY_INTEGER:35069,MAX_ARRAY_TEXTURE_LAYERS:35071,MIN_PROGRAM_TEXEL_OFFSET:35076,MAX_PROGRAM_TEXEL_OFFSET:35077,MAX_VARYING_COMPONENTS:35659,TEXTURE_2D_ARRAY:35866,TEXTURE_BINDING_2D_ARRAY:35869,R11F_G11F_B10F:35898,UNSIGNED_INT_10F_11F_11F_REV:35899,RGB9_E5:35901,UNSIGNED_INT_5_9_9_9_REV:35902,TRANSFORM_FEEDBACK_BUFFER_MODE:35967,MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS:35968,TRANSFORM_FEEDBACK_VARYINGS:35971,TRANSFORM_FEEDBACK_BUFFER_START:35972,TRANSFORM_FEEDBACK_BUFFER_SIZE:35973,TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN:35976,RASTERIZER_DISCARD:35977,MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS:35978,MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS:35979,INTERLEAVED_ATTRIBS:35980,SEPARATE_ATTRIBS:35981,TRANSFORM_FEEDBACK_BUFFER:35982,TRANSFORM_FEEDBACK_BUFFER_BINDING:35983,RGBA32UI:36208,RGB32UI:36209,RGBA16UI:36214,RGB16UI:36215,RGBA8UI:36220,RGB8UI:36221,RGBA32I:36226,RGB32I:36227,RGBA16I:36232,RGB16I:36233,RGBA8I:36238,RGB8I:36239,RED_INTEGER:36244,RGB_INTEGER:36248,RGBA_INTEGER:36249,SAMPLER_2D_ARRAY:36289,SAMPLER_2D_ARRAY_SHADOW:36292,SAMPLER_CUBE_SHADOW:36293,UNSIGNED_INT_VEC2:36294,UNSIGNED_INT_VEC3:36295,UNSIGNED_INT_VEC4:36296,INT_SAMPLER_2D:36298,INT_SAMPLER_3D:36299,INT_SAMPLER_CUBE:36300,INT_SAMPLER_2D_ARRAY:36303,UNSIGNED_INT_SAMPLER_2D:36306,UNSIGNED_INT_SAMPLER_3D:36307,UNSIGNED_INT_SAMPLER_CUBE:36308,UNSIGNED_INT_SAMPLER_2D_ARRAY:36311,DEPTH_COMPONENT32F:36012,DEPTH32F_STENCIL8:36013,FLOAT_32_UNSIGNED_INT_24_8_REV:36269,FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING:33296,FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE:33297,FRAMEBUFFER_ATTACHMENT_RED_SIZE:33298,FRAMEBUFFER_ATTACHMENT_GREEN_SIZE:33299,FRAMEBUFFER_ATTACHMENT_BLUE_SIZE:33300,FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE:33301,FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE:33302,FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE:33303,FRAMEBUFFER_DEFAULT:33304,UNSIGNED_INT_24_8:34042,DEPTH24_STENCIL8:35056,UNSIGNED_NORMALIZED:35863,DRAW_FRAMEBUFFER_BINDING:36006,READ_FRAMEBUFFER:36008,DRAW_FRAMEBUFFER:36009,READ_FRAMEBUFFER_BINDING:36010,RENDERBUFFER_SAMPLES:36011,FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER:36052,MAX_COLOR_ATTACHMENTS:36063,COLOR_ATTACHMENT1:36065,COLOR_ATTACHMENT2:36066,COLOR_ATTACHMENT3:36067,COLOR_ATTACHMENT4:36068,COLOR_ATTACHMENT5:36069,COLOR_ATTACHMENT6:36070,COLOR_ATTACHMENT7:36071,COLOR_ATTACHMENT8:36072,COLOR_ATTACHMENT9:36073,COLOR_ATTACHMENT10:36074,COLOR_ATTACHMENT11:36075,COLOR_ATTACHMENT12:36076,COLOR_ATTACHMENT13:36077,COLOR_ATTACHMENT14:36078,COLOR_ATTACHMENT15:36079,FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:36182,MAX_SAMPLES:36183,HALF_FLOAT:5131,RG:33319,RG_INTEGER:33320,R8:33321,RG8:33323,R16F:33325,R32F:33326,RG16F:33327,RG32F:33328,R8I:33329,R8UI:33330,R16I:33331,R16UI:33332,R32I:33333,R32UI:33334,RG8I:33335,RG8UI:33336,RG16I:33337,RG16UI:33338,RG32I:33339,RG32UI:33340,VERTEX_ARRAY_BINDING:34229,R8_SNORM:36756,RG8_SNORM:36757,RGB8_SNORM:36758,RGBA8_SNORM:36759,SIGNED_NORMALIZED:36764,COPY_READ_BUFFER:36662,COPY_WRITE_BUFFER:36663,COPY_READ_BUFFER_BINDING:36662,COPY_WRITE_BUFFER_BINDING:36663,UNIFORM_BUFFER:35345,UNIFORM_BUFFER_BINDING:35368,UNIFORM_BUFFER_START:35369,UNIFORM_BUFFER_SIZE:35370,MAX_VERTEX_UNIFORM_BLOCKS:35371,MAX_FRAGMENT_UNIFORM_BLOCKS:35373,MAX_COMBINED_UNIFORM_BLOCKS:35374,MAX_UNIFORM_BUFFER_BINDINGS:35375,MAX_UNIFORM_BLOCK_SIZE:35376,MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS:35377,MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS:35379,UNIFORM_BUFFER_OFFSET_ALIGNMENT:35380,ACTIVE_UNIFORM_BLOCKS:35382,UNIFORM_TYPE:35383,UNIFORM_SIZE:35384,UNIFORM_BLOCK_INDEX:35386,UNIFORM_OFFSET:35387,UNIFORM_ARRAY_STRIDE:35388,UNIFORM_MATRIX_STRIDE:35389,UNIFORM_IS_ROW_MAJOR:35390,UNIFORM_BLOCK_BINDING:35391,UNIFORM_BLOCK_DATA_SIZE:35392,UNIFORM_BLOCK_ACTIVE_UNIFORMS:35394,UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES:35395,UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER:35396,UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER:35398,INVALID_INDEX:4294967295,MAX_VERTEX_OUTPUT_COMPONENTS:37154,MAX_FRAGMENT_INPUT_COMPONENTS:37157,MAX_SERVER_WAIT_TIMEOUT:37137,OBJECT_TYPE:37138,SYNC_CONDITION:37139,SYNC_STATUS:37140,SYNC_FLAGS:37141,SYNC_FENCE:37142,SYNC_GPU_COMMANDS_COMPLETE:37143,UNSIGNALED:37144,SIGNALED:37145,ALREADY_SIGNALED:37146,TIMEOUT_EXPIRED:37147,CONDITION_SATISFIED:37148,WAIT_FAILED:37149,SYNC_FLUSH_COMMANDS_BIT:1,VERTEX_ATTRIB_ARRAY_DIVISOR:35070,ANY_SAMPLES_PASSED:35887,ANY_SAMPLES_PASSED_CONSERVATIVE:36202,SAMPLER_BINDING:35097,RGB10_A2UI:36975,INT_2_10_10_10_REV:36255,TRANSFORM_FEEDBACK:36386,TRANSFORM_FEEDBACK_PAUSED:36387,TRANSFORM_FEEDBACK_ACTIVE:36388,TRANSFORM_FEEDBACK_BINDING:36389,COMPRESSED_R11_EAC:37488,COMPRESSED_SIGNED_R11_EAC:37489,COMPRESSED_RG11_EAC:37490,COMPRESSED_SIGNED_RG11_EAC:37491,COMPRESSED_RGB8_ETC2:37492,COMPRESSED_SRGB8_ETC2:37493,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:37494,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:37495,COMPRESSED_RGBA8_ETC2_EAC:37496,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:37497,TEXTURE_IMMUTABLE_FORMAT:37167,MAX_ELEMENT_INDEX:36203,TEXTURE_IMMUTABLE_LEVELS:33503,MAX_TEXTURE_MAX_ANISOTROPY_EXT:34047})}),define("Core/ComponentDatatype",["./defaultValue","./defined","./DeveloperError","./FeatureDetection","./freezeObject","./WebGLConstants"],function(e,t,n,r,a,i){"use strict";if(!r.supportsTypedArrays())return{};var o={BYTE:i.BYTE,UNSIGNED_BYTE:i.UNSIGNED_BYTE,SHORT:i.SHORT,UNSIGNED_SHORT:i.UNSIGNED_SHORT,INT:i.INT,UNSIGNED_INT:i.UNSIGNED_INT,FLOAT:i.FLOAT,DOUBLE:i.DOUBLE};return o.getSizeInBytes=function(e){switch(e){case o.BYTE:return Int8Array.BYTES_PER_ELEMENT;case o.UNSIGNED_BYTE:return Uint8Array.BYTES_PER_ELEMENT;case o.SHORT:return Int16Array.BYTES_PER_ELEMENT;case o.UNSIGNED_SHORT:return Uint16Array.BYTES_PER_ELEMENT;case o.INT:return Int32Array.BYTES_PER_ELEMENT;case o.UNSIGNED_INT:return Uint32Array.BYTES_PER_ELEMENT;case o.FLOAT:return Float32Array.BYTES_PER_ELEMENT;case o.DOUBLE:return Float64Array.BYTES_PER_ELEMENT}},o.fromTypedArray=function(e){return e instanceof Int8Array?o.BYTE:e instanceof Uint8Array?o.UNSIGNED_BYTE:e instanceof Int16Array?o.SHORT:e instanceof Uint16Array?o.UNSIGNED_SHORT:e instanceof Int32Array?o.INT:e instanceof Uint32Array?o.UNSIGNED_INT:e instanceof Float32Array?o.FLOAT:e instanceof Float64Array?o.DOUBLE:void 0},o.validate=function(e){return t(e)&&(e===o.BYTE||e===o.UNSIGNED_BYTE||e===o.SHORT||e===o.UNSIGNED_SHORT||e===o.INT||e===o.UNSIGNED_INT||e===o.FLOAT||e===o.DOUBLE)},o.createTypedArray=function(e,t){switch(e){case o.BYTE:return new Int8Array(t);case o.UNSIGNED_BYTE:return new Uint8Array(t);case o.SHORT:return new Int16Array(t);case o.UNSIGNED_SHORT:return new Uint16Array(t);case o.INT:return new Int32Array(t);case o.UNSIGNED_INT:return new Uint32Array(t);case o.FLOAT:return new Float32Array(t);case o.DOUBLE:return new Float64Array(t)}},o.createArrayBufferView=function(t,n,r,a){switch(r=e(r,0),a=e(a,(n.byteLength-r)/o.getSizeInBytes(t)),t){case o.BYTE:return new Int8Array(n,r,a);case o.UNSIGNED_BYTE:return new Uint8Array(n,r,a);case o.SHORT:return new Int16Array(n,r,a);case o.UNSIGNED_SHORT:return new Uint16Array(n,r,a);case o.INT:return new Int32Array(n,r,a);case o.UNSIGNED_INT:return new Uint32Array(n,r,a);case o.FLOAT:return new Float32Array(n,r,a);case o.DOUBLE:return new Float64Array(n,r,a)}},o.fromName=function(e){switch(e){case"BYTE":return o.BYTE;case"UNSIGNED_BYTE":return o.UNSIGNED_BYTE;case"SHORT":return o.SHORT;case"UNSIGNED_SHORT":return o.UNSIGNED_SHORT;case"INT":return o.INT;case"UNSIGNED_INT":return o.UNSIGNED_INT;case"FLOAT":return o.FLOAT;case"DOUBLE":return o.DOUBLE}},a(o)}),define("Core/EllipsoidGeodesic",["./Cartesian3","./Cartographic","./Check","./defaultValue","./defined","./defineProperties","./Ellipsoid","./Math"],function(e,t,n,r,a,i,o,s){"use strict";function c(e){var t=e._uSquared,n=e._ellipsoid.maximumRadius,r=e._ellipsoid.minimumRadius,a=(n-r)/n,i=Math.cos(e._startHeading),o=Math.sin(e._startHeading),s=(1-a)*Math.tan(e._start.latitude),c=1/Math.sqrt(1+s*s),u=c*s,l=Math.atan2(s,i),d=c*o,f=d*d,m=1-f,p=Math.sqrt(m),h=t/4,_=h*h,v=_*h,g=_*_,y=1+h-3*_/4+5*v/4-175*g/64,E=1-h+15*_/8-35*v/8,T=1-3*h+35*_/4,C=1-5*h,S=y*l-E*Math.sin(2*l)*h/2-T*Math.sin(4*l)*_/16-C*Math.sin(6*l)*v/48-5*Math.sin(8*l)*g/512,A=e._constants;A.a=n,A.b=r,A.f=a,A.cosineHeading=i,A.sineHeading=o,A.tanU=s,A.cosineU=c,A.sineU=u,A.sigma=l,A.sineAlpha=d,A.sineSquaredAlpha=f,A.cosineSquaredAlpha=m,A.cosineAlpha=p,A.u2Over4=h,A.u4Over16=_,A.u6Over64=v,A.u8Over256=g,A.a0=y,A.a1=E,A.a2=T,A.a3=C,A.distanceRatio=S}function u(e,t){return e*t*(4+e*(4-3*t))/16}function l(e,t,n,r,a,i,o){var s=u(e,n);return(1-s)*e*t*(r+s*a*(o+s*i*(2*o*o-1)))}function d(e,t,n,r,a,i,o){var c,u,d,f,m,p=(t-n)/t,h=i-r,_=Math.atan((1-p)*Math.tan(a)),v=Math.atan((1-p)*Math.tan(o)),g=Math.cos(_),y=Math.sin(_),E=Math.cos(v),T=Math.sin(v),C=g*E,S=g*T,A=y*T,x=y*E,w=h,b=s.TWO_PI,R=Math.cos(w),I=Math.sin(w);do{R=Math.cos(w),I=Math.sin(w);var z=S-x*R;d=Math.sqrt(E*E*I*I+z*z),u=A+C*R,c=Math.atan2(d,u);var D;0===d?(D=0,f=1):(D=C*I/d,f=1-D*D),b=w,m=u-2*A/f,isNaN(m)&&(m=0),w=h+l(p,D,f,c,d,u,m)}while(Math.abs(w-b)>s.EPSILON12);var O=f*(t*t-n*n)/(n*n),P=1+O*(4096+O*(O*(320-175*O)-768))/16384,M=O*(256+O*(O*(74-47*O)-128))/1024,N=m*m,F=M*d*(m+M*(u*(2*N-1)-M*m*(4*d*d-3)*(4*N-3)/6)/4),L=n*P*(c-F),B=Math.atan2(E*I,S-x*R),U=Math.atan2(g*I,S*R-x);e._distance=L,e._startHeading=B,e._endHeading=U,e._uSquared=O}function f(n,r,a,i){e.normalize(i.cartographicToCartesian(r,h),p),e.normalize(i.cartographicToCartesian(a,h),h);d(n,i.maximumRadius,i.minimumRadius,r.longitude,r.latitude,a.longitude,a.latitude),n._start=t.clone(r,n._start),n._end=t.clone(a,n._end),n._start.height=0,n._end.height=0,c(n)}function m(e,n,i){var s=r(i,o.WGS84);this._ellipsoid=s,this._start=new t,this._end=new t,this._constants={},this._startHeading=void 0,this._endHeading=void 0,this._distance=void 0,this._uSquared=void 0,a(e)&&a(n)&&f(this,e,n,s)}var p=new e,h=new e;return i(m.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},surfaceDistance:{get:function(){return this._distance}},start:{get:function(){return this._start}},end:{get:function(){return this._end}},startHeading:{get:function(){return this._startHeading}},endHeading:{get:function(){return this._endHeading}}}),m.prototype.setEndPoints=function(e,t){f(this,e,t,this._ellipsoid)},m.prototype.interpolateUsingFraction=function(e,t){return this.interpolateUsingSurfaceDistance(this._distance*e,t)},m.prototype.interpolateUsingSurfaceDistance=function(e,n){var r=this._constants,i=r.distanceRatio+e/r.b,o=Math.cos(2*i),s=Math.cos(4*i),c=Math.cos(6*i),u=Math.sin(2*i),d=Math.sin(4*i),f=Math.sin(6*i),m=Math.sin(8*i),p=i*i,h=i*p,_=r.u8Over256,v=r.u2Over4,g=r.u6Over64,y=r.u4Over16,E=2*h*_*o/3+i*(1-v+7*y/4-15*g/4+579*_/64-(y-15*g/4+187*_/16)*o-(5*g/4-115*_/16)*s-29*_*c/16)+(v/2-y+71*g/32-85*_/16)*u+(5*y/16-5*g/4+383*_/96)*d-p*((g-11*_/2)*u+5*_*d/2)+(29*g/96-29*_/16)*f+539*_*m/1536,T=Math.asin(Math.sin(E)*r.cosineAlpha),C=Math.atan(r.a/r.b*Math.tan(T));E-=r.sigma;var S=Math.cos(2*r.sigma+E),A=Math.sin(E),x=Math.cos(E),w=r.cosineU*x,b=r.sineU*A,R=Math.atan2(A*r.sineHeading,w-b*r.cosineHeading),I=R-l(r.f,r.sineAlpha,r.cosineSquaredAlpha,E,A,x,S);return a(n)?(n.longitude=this._start.longitude+I,n.latitude=C,n.height=0,n):new t(this._start.longitude+I,C,0)},m}),define("Core/EncodedCartesian3",["./Cartesian3","./Check","./defined"],function(e,t,n){"use strict";function r(){this.high=e.clone(e.ZERO),this.low=e.clone(e.ZERO)}r.encode=function(e,t){n(t)||(t={high:0,low:0});var r;return e>=0?(r=65536*Math.floor(e/65536),t.high=r,t.low=e-r):(r=65536*Math.floor(-e/65536),t.high=-r,t.low=e+r),t};var a={high:0,low:0};r.fromCartesian=function(e,t){n(t)||(t=new r);var i=t.high,o=t.low;return r.encode(e.x,a),i.x=a.high,o.x=a.low,r.encode(e.y,a),i.y=a.high,o.y=a.low,r.encode(e.z,a),i.z=a.high,o.z=a.low,t};var i=new r;return r.writeElements=function(e,t,n){r.fromCartesian(e,i);var a=i.high,o=i.low;t[n]=a.x,t[n+1]=a.y,t[n+2]=a.z,t[n+3]=o.x,t[n+4]=o.y,t[n+5]=o.z},r}),define("Core/GeometryOffsetAttribute",["../Core/freezeObject"],function(e){"use strict";return e({NONE:0,TOP:1,ALL:2})}),define("Core/GeometryType",["./freezeObject"],function(e){"use strict";return e({NONE:0,TRIANGLES:1,LINES:2,POLYLINES:3})}),
define("Core/Matrix2",["./Cartesian2","./Check","./defaultValue","./defined","./defineProperties","./freezeObject"],function(e,t,n,r,a,i){"use strict";function o(e,t,r,a){this[0]=n(e,0),this[1]=n(r,0),this[2]=n(t,0),this[3]=n(a,0)}o.packedLength=4,o.pack=function(e,t,r){return r=n(r,0),t[r++]=e[0],t[r++]=e[1],t[r++]=e[2],t[r++]=e[3],t},o.unpack=function(e,t,a){return t=n(t,0),r(a)||(a=new o),a[0]=e[t++],a[1]=e[t++],a[2]=e[t++],a[3]=e[t++],a},o.clone=function(e,t){if(r(e))return r(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t):new o(e[0],e[2],e[1],e[3])},o.fromArray=function(e,t,a){return t=n(t,0),r(a)||(a=new o),a[0]=e[t],a[1]=e[t+1],a[2]=e[t+2],a[3]=e[t+3],a},o.fromColumnMajorArray=function(e,t){return o.clone(e,t)},o.fromRowMajorArray=function(e,t){return r(t)?(t[0]=e[0],t[1]=e[2],t[2]=e[1],t[3]=e[3],t):new o(e[0],e[1],e[2],e[3])},o.fromScale=function(e,t){return r(t)?(t[0]=e.x,t[1]=0,t[2]=0,t[3]=e.y,t):new o(e.x,0,0,e.y)},o.fromUniformScale=function(e,t){return r(t)?(t[0]=e,t[1]=0,t[2]=0,t[3]=e,t):new o(e,0,0,e)},o.fromRotation=function(e,t){var n=Math.cos(e),a=Math.sin(e);return r(t)?(t[0]=n,t[1]=a,t[2]=-a,t[3]=n,t):new o(n,-a,a,n)},o.toArray=function(e,t){return r(t)?(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t):[e[0],e[1],e[2],e[3]]},o.getElementIndex=function(e,t){return 2*e+t},o.getColumn=function(e,t,n){var r=2*t,a=e[r],i=e[r+1];return n.x=a,n.y=i,n},o.setColumn=function(e,t,n,r){r=o.clone(e,r);var a=2*t;return r[a]=n.x,r[a+1]=n.y,r},o.getRow=function(e,t,n){var r=e[t],a=e[t+2];return n.x=r,n.y=a,n},o.setRow=function(e,t,n,r){return r=o.clone(e,r),r[t]=n.x,r[t+2]=n.y,r};var s=new e;o.getScale=function(t,n){return n.x=e.magnitude(e.fromElements(t[0],t[1],s)),n.y=e.magnitude(e.fromElements(t[2],t[3],s)),n};var c=new e;return o.getMaximumScale=function(t){return o.getScale(t,c),e.maximumComponent(c)},o.multiply=function(e,t,n){var r=e[0]*t[0]+e[2]*t[1],a=e[0]*t[2]+e[2]*t[3],i=e[1]*t[0]+e[3]*t[1],o=e[1]*t[2]+e[3]*t[3];return n[0]=r,n[1]=i,n[2]=a,n[3]=o,n},o.add=function(e,t,n){return n[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n[3]=e[3]+t[3],n},o.subtract=function(e,t,n){return n[0]=e[0]-t[0],n[1]=e[1]-t[1],n[2]=e[2]-t[2],n[3]=e[3]-t[3],n},o.multiplyByVector=function(e,t,n){var r=e[0]*t.x+e[2]*t.y,a=e[1]*t.x+e[3]*t.y;return n.x=r,n.y=a,n},o.multiplyByScalar=function(e,t,n){return n[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n[3]=e[3]*t,n},o.multiplyByScale=function(e,t,n){return n[0]=e[0]*t.x,n[1]=e[1]*t.x,n[2]=e[2]*t.y,n[3]=e[3]*t.y,n},o.negate=function(e,t){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t},o.transpose=function(e,t){var n=e[0],r=e[2],a=e[1],i=e[3];return t[0]=n,t[1]=r,t[2]=a,t[3]=i,t},o.abs=function(e,t){return t[0]=Math.abs(e[0]),t[1]=Math.abs(e[1]),t[2]=Math.abs(e[2]),t[3]=Math.abs(e[3]),t},o.equals=function(e,t){return e===t||r(e)&&r(t)&&e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]},o.equalsArray=function(e,t,n){return e[0]===t[n]&&e[1]===t[n+1]&&e[2]===t[n+2]&&e[3]===t[n+3]},o.equalsEpsilon=function(e,t,n){return e===t||r(e)&&r(t)&&Math.abs(e[0]-t[0])<=n&&Math.abs(e[1]-t[1])<=n&&Math.abs(e[2]-t[2])<=n&&Math.abs(e[3]-t[3])<=n},o.IDENTITY=i(new o(1,0,0,1)),o.ZERO=i(new o(0,0,0,0)),o.COLUMN0ROW0=0,o.COLUMN0ROW1=1,o.COLUMN1ROW0=2,o.COLUMN1ROW1=3,a(o.prototype,{length:{get:function(){return o.packedLength}}}),o.prototype.clone=function(e){return o.clone(this,e)},o.prototype.equals=function(e){return o.equals(this,e)},o.prototype.equalsEpsilon=function(e,t){return o.equalsEpsilon(this,e,t)},o.prototype.toString=function(){return"("+this[0]+", "+this[2]+")\n("+this[1]+", "+this[3]+")"},o}),define("Core/PrimitiveType",["./freezeObject","./WebGLConstants"],function(e,t){"use strict";var n={POINTS:t.POINTS,LINES:t.LINES,LINE_LOOP:t.LINE_LOOP,LINE_STRIP:t.LINE_STRIP,TRIANGLES:t.TRIANGLES,TRIANGLE_STRIP:t.TRIANGLE_STRIP,TRIANGLE_FAN:t.TRIANGLE_FAN,validate:function(e){return e===n.POINTS||e===n.LINES||e===n.LINE_LOOP||e===n.LINE_STRIP||e===n.TRIANGLES||e===n.TRIANGLE_STRIP||e===n.TRIANGLE_FAN}};return e(n)}),define("Core/Quaternion",["./Cartesian3","./Check","./defaultValue","./defined","./FeatureDetection","./freezeObject","./Math","./Matrix3"],function(e,t,n,r,a,i,o,s){"use strict";function c(e,t,r,a){this.x=n(e,0),this.y=n(t,0),this.z=n(r,0),this.w=n(a,0)}var u=new e;c.fromAxisAngle=function(t,n,a){var i=n/2,o=Math.sin(i);u=e.normalize(t,u);var s=u.x*o,l=u.y*o,d=u.z*o,f=Math.cos(i);return r(a)?(a.x=s,a.y=l,a.z=d,a.w=f,a):new c(s,l,d,f)};var l=[1,2,0],d=new Array(3);c.fromRotationMatrix=function(e,t){var n,a,i,o,u,f=e[s.COLUMN0ROW0],m=e[s.COLUMN1ROW1],p=e[s.COLUMN2ROW2],h=f+m+p;if(h>0)n=Math.sqrt(h+1),u=.5*n,n=.5/n,a=(e[s.COLUMN1ROW2]-e[s.COLUMN2ROW1])*n,i=(e[s.COLUMN2ROW0]-e[s.COLUMN0ROW2])*n,o=(e[s.COLUMN0ROW1]-e[s.COLUMN1ROW0])*n;else{var _=l,v=0;m>f&&(v=1),p>f&&p>m&&(v=2);var g=_[v],y=_[g];n=Math.sqrt(e[s.getElementIndex(v,v)]-e[s.getElementIndex(g,g)]-e[s.getElementIndex(y,y)]+1);var E=d;E[v]=.5*n,n=.5/n,u=(e[s.getElementIndex(y,g)]-e[s.getElementIndex(g,y)])*n,E[g]=(e[s.getElementIndex(g,v)]+e[s.getElementIndex(v,g)])*n,E[y]=(e[s.getElementIndex(y,v)]+e[s.getElementIndex(v,y)])*n,a=-E[0],i=-E[1],o=-E[2]}return r(t)?(t.x=a,t.y=i,t.z=o,t.w=u,t):new c(a,i,o,u)};var f=new c,m=new c,p=new c,h=new c;c.fromHeadingPitchRoll=function(t,n){return h=c.fromAxisAngle(e.UNIT_X,t.roll,f),p=c.fromAxisAngle(e.UNIT_Y,-t.pitch,n),n=c.multiply(p,h,p),m=c.fromAxisAngle(e.UNIT_Z,-t.heading,f),c.multiply(m,n,n)};var _=new e,v=new e,g=new c,y=new c,E=new c;c.packedLength=4,c.pack=function(e,t,r){return r=n(r,0),t[r++]=e.x,t[r++]=e.y,t[r++]=e.z,t[r]=e.w,t},c.unpack=function(e,t,a){return t=n(t,0),r(a)||(a=new c),a.x=e[t],a.y=e[t+1],a.z=e[t+2],a.w=e[t+3],a},c.packedInterpolationLength=3,c.convertPackedArrayForInterpolation=function(e,t,n,r){c.unpack(e,4*n,E),c.conjugate(E,E);for(var a=0,i=n-t+1;a<i;a++){var o=3*a;c.unpack(e,4*(t+a),g),c.multiply(g,E,g),g.w<0&&c.negate(g,g),c.computeAxis(g,_);var s=c.computeAngle(g);r[o]=_.x*s,r[o+1]=_.y*s,r[o+2]=_.z*s}},c.unpackInterpolationResult=function(t,n,a,i,o){r(o)||(o=new c),e.fromArray(t,0,v);var s=e.magnitude(v);return c.unpack(n,4*i,y),0===s?c.clone(c.IDENTITY,g):c.fromAxisAngle(v,s,g),c.multiply(g,y,o)},c.clone=function(e,t){if(r(e))return r(t)?(t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t):new c(e.x,e.y,e.z,e.w)},c.conjugate=function(e,t){return t.x=-e.x,t.y=-e.y,t.z=-e.z,t.w=e.w,t},c.magnitudeSquared=function(e){return e.x*e.x+e.y*e.y+e.z*e.z+e.w*e.w},c.magnitude=function(e){return Math.sqrt(c.magnitudeSquared(e))},c.normalize=function(e,t){var n=1/c.magnitude(e),r=e.x*n,a=e.y*n,i=e.z*n,o=e.w*n;return t.x=r,t.y=a,t.z=i,t.w=o,t},c.inverse=function(e,t){var n=c.magnitudeSquared(e);return t=c.conjugate(e,t),c.multiplyByScalar(t,1/n,t)},c.add=function(e,t,n){return n.x=e.x+t.x,n.y=e.y+t.y,n.z=e.z+t.z,n.w=e.w+t.w,n},c.subtract=function(e,t,n){return n.x=e.x-t.x,n.y=e.y-t.y,n.z=e.z-t.z,n.w=e.w-t.w,n},c.negate=function(e,t){return t.x=-e.x,t.y=-e.y,t.z=-e.z,t.w=-e.w,t},c.dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w},c.multiply=function(e,t,n){var r=e.x,a=e.y,i=e.z,o=e.w,s=t.x,c=t.y,u=t.z,l=t.w,d=o*s+r*l+a*u-i*c,f=o*c-r*u+a*l+i*s,m=o*u+r*c-a*s+i*l,p=o*l-r*s-a*c-i*u;return n.x=d,n.y=f,n.z=m,n.w=p,n},c.multiplyByScalar=function(e,t,n){return n.x=e.x*t,n.y=e.y*t,n.z=e.z*t,n.w=e.w*t,n},c.divideByScalar=function(e,t,n){return n.x=e.x/t,n.y=e.y/t,n.z=e.z/t,n.w=e.w/t,n},c.computeAxis=function(e,t){var n=e.w;if(Math.abs(n-1)<o.EPSILON6)return t.x=t.y=t.z=0,t;var r=1/Math.sqrt(1-n*n);return t.x=e.x*r,t.y=e.y*r,t.z=e.z*r,t},c.computeAngle=function(e){return Math.abs(e.w-1)<o.EPSILON6?0:2*Math.acos(e.w)};var T=new c;c.lerp=function(e,t,n,r){return T=c.multiplyByScalar(t,n,T),r=c.multiplyByScalar(e,1-n,r),c.add(T,r,r)};var C=new c,S=new c,A=new c;c.slerp=function(e,t,n,r){var a=c.dot(e,t),i=t;if(a<0&&(a=-a,i=C=c.negate(t,C)),1-a<o.EPSILON6)return c.lerp(e,i,n,r);var s=Math.acos(a);return S=c.multiplyByScalar(e,Math.sin((1-n)*s),S),A=c.multiplyByScalar(i,Math.sin(n*s),A),r=c.add(S,A,r),c.multiplyByScalar(r,1/Math.sin(s),r)},c.log=function(t,n){var r=o.acosClamped(t.w),a=0;return 0!==r&&(a=r/Math.sin(r)),e.multiplyByScalar(t,a,n)},c.exp=function(t,n){var r=e.magnitude(t),a=0;return 0!==r&&(a=Math.sin(r)/r),n.x=t.x*a,n.y=t.y*a,n.z=t.z*a,n.w=Math.cos(r),n};var x=new e,w=new e,b=new c,R=new c;c.computeInnerQuadrangle=function(t,n,r,a){var i=c.conjugate(n,b);c.multiply(i,r,R);var o=c.log(R,x);c.multiply(i,t,R);var s=c.log(R,w);return e.add(o,s,o),e.multiplyByScalar(o,.25,o),e.negate(o,o),c.exp(o,b),c.multiply(n,b,a)},c.squad=function(e,t,n,r,a,i){var o=c.slerp(e,t,a,b),s=c.slerp(n,r,a,R);return c.slerp(o,s,2*a*(1-a),i)};for(var I=new c,z=1.9011074535173003,D=a.supportsTypedArrays()?new Float32Array(8):[],O=a.supportsTypedArrays()?new Float32Array(8):[],P=a.supportsTypedArrays()?new Float32Array(8):[],M=a.supportsTypedArrays()?new Float32Array(8):[],N=0;N<7;++N){var F=N+1,L=2*F+1;D[N]=1/(F*L),O[N]=F/L}return D[7]=z/136,O[7]=8*z/17,c.fastSlerp=function(e,t,n,r){var a,i=c.dot(e,t);i>=0?a=1:(a=-1,i=-i);for(var o=i-1,s=1-n,u=n*n,l=s*s,d=7;d>=0;--d)P[d]=(D[d]*u-O[d])*o,M[d]=(D[d]*l-O[d])*o;var f=a*n*(1+P[0]*(1+P[1]*(1+P[2]*(1+P[3]*(1+P[4]*(1+P[5]*(1+P[6]*(1+P[7])))))))),m=s*(1+M[0]*(1+M[1]*(1+M[2]*(1+M[3]*(1+M[4]*(1+M[5]*(1+M[6]*(1+M[7])))))))),p=c.multiplyByScalar(e,m,I);return c.multiplyByScalar(t,f,r),c.add(p,r,r)},c.fastSquad=function(e,t,n,r,a,i){var o=c.fastSlerp(e,t,a,b),s=c.fastSlerp(n,r,a,R);return c.fastSlerp(o,s,2*a*(1-a),i)},c.equals=function(e,t){return e===t||r(e)&&r(t)&&e.x===t.x&&e.y===t.y&&e.z===t.z&&e.w===t.w},c.equalsEpsilon=function(e,t,n){return e===t||r(e)&&r(t)&&Math.abs(e.x-t.x)<=n&&Math.abs(e.y-t.y)<=n&&Math.abs(e.z-t.z)<=n&&Math.abs(e.w-t.w)<=n},c.ZERO=i(new c(0,0,0,0)),c.IDENTITY=i(new c(0,0,0,1)),c.prototype.clone=function(e){return c.clone(this,e)},c.prototype.equals=function(e){return c.equals(this,e)},c.prototype.equalsEpsilon=function(e,t){return c.equalsEpsilon(this,e,t)},c.prototype.toString=function(){return"("+this.x+", "+this.y+", "+this.z+", "+this.w+")"},c}),define("Core/binarySearch",["./Check"],function(e){"use strict";function t(e,t,n){for(var r,a,i=0,o=e.length-1;i<=o;)if(r=~~((i+o)/2),(a=n(e[r],t))<0)i=r+1;else{if(!(a>0))return r;o=r-1}return~(o+1)}return t}),define("Core/EarthOrientationParametersSample",[],function(){"use strict";function e(e,t,n,r,a){this.xPoleWander=e,this.yPoleWander=t,this.xPoleOffset=n,this.yPoleOffset=r,this.ut1MinusUtc=a}return e}),define("ThirdParty/sprintf",[],function(){function e(){var e=/%%|%(\d+\$)?([-+\'#0 ]*)(\*\d+\$|\*|\d+)?(\.(\*\d+\$|\*|\d+))?([scboxXuideEfFgG])/g,t=arguments,n=0,r=t[n++],a=function(e,t,n,r){n||(n=" ");var a=e.length>=t?"":Array(1+t-e.length>>>0).join(n);return r?e+a:a+e},i=function(e,t,n,r,i,o){var s=r-e.length;return s>0&&(e=n||!i?a(e,r,o,n):e.slice(0,t.length)+a("",s,"0",!0)+e.slice(t.length)),e},o=function(e,t,n,r,o,s,c){var u=e>>>0;return n=n&&u&&{2:"0b",8:"0",16:"0x"}[t]||"",e=n+a(u.toString(t),s||0,"0",!1),i(e,n,r,o,c)},s=function(e,t,n,r,a,o){return null!=r&&(e=e.slice(0,r)),i(e,"",t,n,a,o)},c=function(e,r,c,u,l,d,f){var m,p,h,_,v;if("%%"==e)return"%";for(var g=!1,y="",E=!1,T=!1,C=" ",S=c.length,A=0;c&&A<S;A++)switch(c.charAt(A)){case" ":y=" ";break;case"+":y="+";break;case"-":g=!0;break;case"'":C=c.charAt(A+1);break;case"0":E=!0;break;case"#":T=!0}if(u=u?"*"==u?+t[n++]:"*"==u.charAt(0)?+t[u.slice(1,-1)]:+u:0,u<0&&(u=-u,g=!0),!isFinite(u))throw new Error("sprintf: (minimum-)width must be finite");switch(d=d?"*"==d?+t[n++]:"*"==d.charAt(0)?+t[d.slice(1,-1)]:+d:"fFeE".indexOf(f)>-1?6:"d"==f?0:void 0,v=r?t[r.slice(0,-1)]:t[n++],f){case"s":return s(String(v),g,u,d,E,C);case"c":return s(String.fromCharCode(+v),g,u,d,E);case"b":return o(v,2,T,g,u,d,E);case"o":return o(v,8,T,g,u,d,E);case"x":return o(v,16,T,g,u,d,E);case"X":return o(v,16,T,g,u,d,E).toUpperCase();case"u":return o(v,10,T,g,u,d,E);case"i":case"d":return m=+v||0,m=Math.round(m-m%1),p=m<0?"-":y,v=p+a(String(Math.abs(m)),d,"0",!1),i(v,p,g,u,E);case"e":case"E":case"f":case"F":case"g":case"G":return m=+v,p=m<0?"-":y,h=["toExponential","toFixed","toPrecision"]["efg".indexOf(f.toLowerCase())],_=["toString","toUpperCase"]["eEfFgG".indexOf(f)%2],v=p+Math.abs(m)[h](d),i(v,p,g,u,E)[_]();default:return e}};return r.replace(e,c)}return e}),define("Core/GregorianDate",[],function(){"use strict";function e(e,t,n,r,a,i,o,s){this.year=e,this.month=t,this.day=n,this.hour=r,this.minute=a,this.second=i,this.millisecond=o,this.isLeapSecond=s}return e}),define("Core/isLeapYear",["./DeveloperError"],function(e){"use strict";function t(e){return e%4==0&&e%100!=0||e%400==0}return t}),define("Core/LeapSecond",[],function(){"use strict";function e(e,t){this.julianDate=e,this.offset=t}return e}),define("Core/TimeConstants",["./freezeObject"],function(e){"use strict";return e({SECONDS_PER_MILLISECOND:.001,SECONDS_PER_MINUTE:60,MINUTES_PER_HOUR:60,HOURS_PER_DAY:24,SECONDS_PER_HOUR:3600,MINUTES_PER_DAY:1440,SECONDS_PER_DAY:86400,DAYS_PER_JULIAN_CENTURY:36525,PICOSECOND:1e-9,MODIFIED_JULIAN_DATE_DIFFERENCE:2400000.5})}),define("Core/TimeStandard",["./freezeObject"],function(e){"use strict";return e({UTC:0,TAI:1})}),define("Core/JulianDate",["../ThirdParty/sprintf","./binarySearch","./defaultValue","./defined","./DeveloperError","./GregorianDate","./isLeapYear","./LeapSecond","./TimeConstants","./TimeStandard"],function(e,t,n,r,a,i,o,s,c,u){"use strict";function l(e,t){return h.compare(e.julianDate,t.julianDate)}function d(e){g.julianDate=e;var n=h.leapSeconds,r=t(n,g,l);r<0&&(r=~r),r>=n.length&&(r=n.length-1);var a=n[r].offset;if(r>0){h.secondsDifference(n[r].julianDate,e)>a&&(r--,a=n[r].offset)}h.addSeconds(e,a,e)}function f(e,n){g.julianDate=e;var r=h.leapSeconds,a=t(r,g,l);if(a<0&&(a=~a),0===a)return h.addSeconds(e,-r[0].offset,n);if(a>=r.length)return h.addSeconds(e,-r[a-1].offset,n);var i=h.secondsDifference(r[a].julianDate,e);return 0===i?h.addSeconds(e,-r[a].offset,n):i<=1?void 0:h.addSeconds(e,-r[--a].offset,n)}function m(e,t,n){var r=t/c.SECONDS_PER_DAY|0;return e+=r,t-=c.SECONDS_PER_DAY*r,t<0&&(e--,t+=c.SECONDS_PER_DAY),n.dayNumber=e,n.secondsOfDay=t,n}function p(e,t,n,r,a,i,o){var s=(t-14)/12|0,u=e+4800+s,l=(1461*u/4|0)+(367*(t-2-12*s)/12|0)-(3*((u+100)/100|0)/4|0)+n-32075;(r-=12)<0&&(r+=24);var d=i+(r*c.SECONDS_PER_HOUR+a*c.SECONDS_PER_MINUTE+o*c.SECONDS_PER_MILLISECOND);return d>=43200&&(l-=1),[l,d]}function h(e,t,r){this.dayNumber=void 0,this.secondsOfDay=void 0,e=n(e,0),t=n(t,0),r=n(r,u.UTC);var a=0|e;t+=(e-a)*c.SECONDS_PER_DAY,m(a,t,this),r===u.UTC&&d(this)}var _=new i,v=[31,28,31,30,31,30,31,31,30,31,30,31],g=new s,y=/^(\d{4})$/,E=/^(\d{4})-(\d{2})$/,T=/^(\d{4})-?(\d{3})$/,C=/^(\d{4})-?W(\d{2})-?(\d{1})?$/,S=/^(\d{4})-?(\d{2})-?(\d{2})$/,A=/([Z+\-])?(\d{2})?:?(\d{2})?$/,x=/^(\d{2})(\.\d+)?/.source+A.source,w=/^(\d{2}):?(\d{2})(\.\d+)?/.source+A.source,b=/^(\d{2}):?(\d{2}):?(\d{2})(\.\d+)?/.source+A.source;h.fromGregorianDate=function(e,t){var n=p(e.year,e.month,e.day,e.hour,e.minute,e.second,e.millisecond);return r(t)?(m(n[0],n[1],t),d(t),t):new h(n[0],n[1],u.UTC)},h.fromDate=function(e,t){var n=p(e.getUTCFullYear(),e.getUTCMonth()+1,e.getUTCDate(),e.getUTCHours(),e.getUTCMinutes(),e.getUTCSeconds(),e.getUTCMilliseconds());return r(t)?(m(n[0],n[1],t),d(t),t):new h(n[0],n[1],u.UTC)},h.fromIso8601=function(e,t){e=e.replace(",",".");var n,a,i,s=e.split("T"),c=1,l=1,f=0,_=0,g=0,A=0,R=s[0],I=s[1];if(null!==(s=R.match(S)))n=+s[1],c=+s[2],l=+s[3];else if(null!==(s=R.match(E)))n=+s[1],c=+s[2];else if(null!==(s=R.match(y)))n=+s[1];else{var z;if(null!==(s=R.match(T)))n=+s[1],z=+s[2],i=o(n);else if(null!==(s=R.match(C))){n=+s[1];var D=+s[2],O=+s[3]||0,P=new Date(Date.UTC(n,0,4));z=7*D+O-P.getUTCDay()-3}a=new Date(Date.UTC(n,0,1)),a.setUTCDate(z),c=a.getUTCMonth()+1,l=a.getUTCDate()}i=o(n);var M;if(r(I)){s=I.match(b),null!==s?(f=+s[1],_=+s[2],g=+s[3],A=1e3*+(s[4]||0),M=5):(s=I.match(w),null!==s?(f=+s[1],_=+s[2],g=60*+(s[3]||0),M=4):null!==(s=I.match(x))&&(f=+s[1],_=60*+(s[2]||0),M=3));var N=s[M],F=+s[M+1],L=+(s[M+2]||0);switch(N){case"+":f-=F,_-=L;break;case"-":f+=F,_+=L;break;case"Z":break;default:_+=new Date(Date.UTC(n,c-1,l,f,_)).getTimezoneOffset()}}var B=60===g;for(B&&g--;_>=60;)_-=60,f++;for(;f>=24;)f-=24,l++;for(a=i&&2===c?29:v[c-1];l>a;)l-=a,c++,c>12&&(c-=12,n++),a=i&&2===c?29:v[c-1];for(;_<0;)_+=60,f--;for(;f<0;)f+=24,l--;for(;l<1;)c--,c<1&&(c+=12,n--),a=i&&2===c?29:v[c-1],l+=a;var U=p(n,c,l,f,_,g,A);return r(t)?(m(U[0],U[1],t),d(t)):t=new h(U[0],U[1],u.UTC),B&&h.addSeconds(t,1,t),t},h.now=function(e){return h.fromDate(new Date,e)};var R=new h(0,0,u.TAI);return h.toGregorianDate=function(e,t){var n=!1,a=f(e,R);r(a)||(h.addSeconds(e,-1,R),a=f(R,R),n=!0);var o=a.dayNumber,s=a.secondsOfDay;s>=43200&&(o+=1);var u=o+68569|0,l=4*u/146097|0;u=u-((146097*l+3)/4|0)|0;var d=4e3*(u+1)/1461001|0;u=u-(1461*d/4|0)+31|0;var m=80*u/2447|0,p=u-(2447*m/80|0)|0;u=m/11|0;var _=m+2-12*u|0,v=100*(l-49)+d+u|0,g=s/c.SECONDS_PER_HOUR|0,y=s-g*c.SECONDS_PER_HOUR,E=y/c.SECONDS_PER_MINUTE|0;y-=E*c.SECONDS_PER_MINUTE;var T=0|y,C=(y-T)/c.SECONDS_PER_MILLISECOND;return g+=12,g>23&&(g-=24),n&&(T+=1),r(t)?(t.year=v,t.month=_,t.day=p,t.hour=g,t.minute=E,t.second=T,t.millisecond=C,t.isLeapSecond=n,t):new i(v,_,p,g,E,T,C,n)},h.toDate=function(e){var t=h.toGregorianDate(e,_),n=t.second;return t.isLeapSecond&&(n-=1),new Date(Date.UTC(t.year,t.month-1,t.day,t.hour,t.minute,n,t.millisecond))},h.toIso8601=function(t,n){var a=h.toGregorianDate(t,_),i=a.year,o=a.month,s=a.day,c=a.hour,u=a.minute,l=a.second,d=a.millisecond;1e4===i&&1===o&&1===s&&0===c&&0===u&&0===l&&0===d&&(i=9999,o=12,s=31,c=24);var f;return r(n)||0===d?r(n)&&0!==n?(f=(.01*d).toFixed(n).replace(".","").slice(0,n),e("%04d-%02d-%02dT%02d:%02d:%02d.%sZ",i,o,s,c,u,l,f)):e("%04d-%02d-%02dT%02d:%02d:%02dZ",i,o,s,c,u,l):(f=(.01*d).toString().replace(".",""),e("%04d-%02d-%02dT%02d:%02d:%02d.%sZ",i,o,s,c,u,l,f))},h.clone=function(e,t){if(r(e))return r(t)?(t.dayNumber=e.dayNumber,t.secondsOfDay=e.secondsOfDay,t):new h(e.dayNumber,e.secondsOfDay,u.TAI)},h.compare=function(e,t){var n=e.dayNumber-t.dayNumber;return 0!==n?n:e.secondsOfDay-t.secondsOfDay},h.equals=function(e,t){return e===t||r(e)&&r(t)&&e.dayNumber===t.dayNumber&&e.secondsOfDay===t.secondsOfDay},h.equalsEpsilon=function(e,t,n){return e===t||r(e)&&r(t)&&Math.abs(h.secondsDifference(e,t))<=n},h.totalDays=function(e){return e.dayNumber+e.secondsOfDay/c.SECONDS_PER_DAY},h.secondsDifference=function(e,t){return(e.dayNumber-t.dayNumber)*c.SECONDS_PER_DAY+(e.secondsOfDay-t.secondsOfDay)},h.daysDifference=function(e,t){return e.dayNumber-t.dayNumber+(e.secondsOfDay-t.secondsOfDay)/c.SECONDS_PER_DAY},h.computeTaiMinusUtc=function(e){g.julianDate=e;var n=h.leapSeconds,r=t(n,g,l);return r<0&&(r=~r,--r<0&&(r=0)),n[r].offset},h.addSeconds=function(e,t,n){return m(e.dayNumber,e.secondsOfDay+t,n)},h.addMinutes=function(e,t,n){var r=e.secondsOfDay+t*c.SECONDS_PER_MINUTE;return m(e.dayNumber,r,n)},h.addHours=function(e,t,n){var r=e.secondsOfDay+t*c.SECONDS_PER_HOUR;return m(e.dayNumber,r,n)},h.addDays=function(e,t,n){return m(e.dayNumber+t,e.secondsOfDay,n)},h.lessThan=function(e,t){return h.compare(e,t)<0},h.lessThanOrEquals=function(e,t){return h.compare(e,t)<=0},h.greaterThan=function(e,t){return h.compare(e,t)>0},h.greaterThanOrEquals=function(e,t){return h.compare(e,t)>=0},h.prototype.clone=function(e){return h.clone(this,e)},h.prototype.equals=function(e){return h.equals(this,e)},h.prototype.equalsEpsilon=function(e,t){return h.equalsEpsilon(this,e,t)},h.prototype.toString=function(){return h.toIso8601(this)},h.leapSeconds=[new s(new h(2441317,43210,u.TAI),10),new s(new h(2441499,43211,u.TAI),11),new s(new h(2441683,43212,u.TAI),12),new s(new h(2442048,43213,u.TAI),13),new s(new h(2442413,43214,u.TAI),14),new s(new h(2442778,43215,u.TAI),15),new s(new h(2443144,43216,u.TAI),16),new s(new h(2443509,43217,u.TAI),17),new s(new h(2443874,43218,u.TAI),18),new s(new h(2444239,43219,u.TAI),19),new s(new h(2444786,43220,u.TAI),20),new s(new h(2445151,43221,u.TAI),21),new s(new h(2445516,43222,u.TAI),22),new s(new h(2446247,43223,u.TAI),23),new s(new h(2447161,43224,u.TAI),24),new s(new h(2447892,43225,u.TAI),25),new s(new h(2448257,43226,u.TAI),26),new s(new h(2448804,43227,u.TAI),27),new s(new h(2449169,43228,u.TAI),28),new s(new h(2449534,43229,u.TAI),29),new s(new h(2450083,43230,u.TAI),30),new s(new h(2450630,43231,u.TAI),31),new s(new h(2451179,43232,u.TAI),32),new s(new h(2453736,43233,u.TAI),33),new s(new h(2454832,43234,u.TAI),34),new s(new h(2456109,43235,u.TAI),35),new s(new h(2457204,43236,u.TAI),36),new s(new h(2457754,43237,u.TAI),37)],h}),define("Core/EarthOrientationParameters",["../ThirdParty/when","./binarySearch","./defaultValue","./defined","./EarthOrientationParametersSample","./freezeObject","./JulianDate","./LeapSecond","./Resource","./RuntimeError","./TimeConstants","./TimeStandard"],function(e,t,n,r,a,i,o,s,c,u,l,d){"use strict";function f(t){if(t=n(t,n.EMPTY_OBJECT),this._dates=void 0,this._samples=void 0,this._dateColumn=-1,this._xPoleWanderRadiansColumn=-1,this._yPoleWanderRadiansColumn=-1,this._ut1MinusUtcSecondsColumn=-1,this._xCelestialPoleOffsetRadiansColumn=-1,this._yCelestialPoleOffsetRadiansColumn=-1,this._taiMinusUtcSecondsColumn=-1,this._columnCount=0,this._lastIndex=-1,this._downloadPromise=void 0,this._dataError=void 0,this._addNewLeapSeconds=n(t.addNewLeapSeconds,!0),r(t.data))p(this,t.data);else if(r(t.url)){var a=c.createIfNeeded(t.url),i=this;this._downloadPromise=e(a.fetchJson(),function(e){p(i,e)},function(){i._dataError="An error occurred while retrieving the EOP data from the URL "+a.url+"."})}else p(this,{columnNames:["dateIso8601","modifiedJulianDateUtc","xPoleWanderRadians","yPoleWanderRadians","ut1MinusUtcSeconds","lengthOfDayCorrectionSeconds","xCelestialPoleOffsetRadians","yCelestialPoleOffsetRadians","taiMinusUtcSeconds"],samples:[]})}function m(e,t){return o.compare(e.julianDate,t)}function p(e,n){if(!r(n.columnNames))return void(e._dataError="Error in loaded EOP data: The columnNames property is required.");if(!r(n.samples))return void(e._dataError="Error in loaded EOP data: The samples property is required.");var a=n.columnNames.indexOf("modifiedJulianDateUtc"),i=n.columnNames.indexOf("xPoleWanderRadians"),c=n.columnNames.indexOf("yPoleWanderRadians"),u=n.columnNames.indexOf("ut1MinusUtcSeconds"),f=n.columnNames.indexOf("xCelestialPoleOffsetRadians"),p=n.columnNames.indexOf("yCelestialPoleOffsetRadians"),h=n.columnNames.indexOf("taiMinusUtcSeconds");if(a<0||i<0||c<0||u<0||f<0||p<0||h<0)return void(e._dataError="Error in loaded EOP data: The columnNames property must include modifiedJulianDateUtc, xPoleWanderRadians, yPoleWanderRadians, ut1MinusUtcSeconds, xCelestialPoleOffsetRadians, yCelestialPoleOffsetRadians, and taiMinusUtcSeconds columns");var _=e._samples=n.samples,v=e._dates=[];e._dateColumn=a,e._xPoleWanderRadiansColumn=i,e._yPoleWanderRadiansColumn=c,e._ut1MinusUtcSecondsColumn=u,e._xCelestialPoleOffsetRadiansColumn=f,e._yCelestialPoleOffsetRadiansColumn=p,e._taiMinusUtcSecondsColumn=h,e._columnCount=n.columnNames.length,e._lastIndex=void 0;for(var g,y=e._addNewLeapSeconds,E=0,T=_.length;E<T;E+=e._columnCount){var C=_[E+a],S=_[E+h],A=C+l.MODIFIED_JULIAN_DATE_DIFFERENCE,x=new o(A,S,d.TAI);if(v.push(x),y){if(S!==g&&r(g)){var w=o.leapSeconds,b=t(w,x,m);if(b<0){var R=new s(x,S);w.splice(~b,0,R)}}g=S}}}function h(e,t,n,r,a){var i=n*r;a.xPoleWander=t[i+e._xPoleWanderRadiansColumn],a.yPoleWander=t[i+e._yPoleWanderRadiansColumn],a.xPoleOffset=t[i+e._xCelestialPoleOffsetRadiansColumn],a.yPoleOffset=t[i+e._yCelestialPoleOffsetRadiansColumn],a.ut1MinusUtc=t[i+e._ut1MinusUtcSecondsColumn]}function _(e,t,n){return t+e*(n-t)}function v(e,t,n,r,a,i,s){var c=e._columnCount;if(i>t.length-1)return s.xPoleWander=0,s.yPoleWander=0,s.xPoleOffset=0,s.yPoleOffset=0,s.ut1MinusUtc=0,s;var u=t[a],l=t[i];if(u.equals(l)||r.equals(u))return h(e,n,a,c,s),s;if(r.equals(l))return h(e,n,i,c,s),s;var d=o.secondsDifference(r,u)/o.secondsDifference(l,u),f=a*c,m=i*c,p=n[f+e._ut1MinusUtcSecondsColumn],v=n[m+e._ut1MinusUtcSecondsColumn],g=v-p;if(g>.5||g<-.5){var y=n[f+e._taiMinusUtcSecondsColumn],E=n[m+e._taiMinusUtcSecondsColumn];y!==E&&(l.equals(r)?p=v:v-=E-y)}return s.xPoleWander=_(d,n[f+e._xPoleWanderRadiansColumn],n[m+e._xPoleWanderRadiansColumn]),s.yPoleWander=_(d,n[f+e._yPoleWanderRadiansColumn],n[m+e._yPoleWanderRadiansColumn]),s.xPoleOffset=_(d,n[f+e._xCelestialPoleOffsetRadiansColumn],n[m+e._xCelestialPoleOffsetRadiansColumn]),s.yPoleOffset=_(d,n[f+e._yCelestialPoleOffsetRadiansColumn],n[m+e._yCelestialPoleOffsetRadiansColumn]),s.ut1MinusUtc=_(d,p,v),s}return f.NONE=i({getPromiseToLoad:function(){return e()},compute:function(e,t){return r(t)?(t.xPoleWander=0,t.yPoleWander=0,t.xPoleOffset=0,t.yPoleOffset=0,t.ut1MinusUtc=0):t=new a(0,0,0,0,0),t}}),f.prototype.getPromiseToLoad=function(){return e(this._downloadPromise)},f.prototype.compute=function(e,n){if(r(this._samples)){if(r(n)||(n=new a(0,0,0,0,0)),0===this._samples.length)return n.xPoleWander=0,n.yPoleWander=0,n.xPoleOffset=0,n.yPoleOffset=0,n.ut1MinusUtc=0,n;var i=this._dates,s=this._lastIndex,c=0,l=0;if(r(s)){var d=i[s],f=i[s+1],m=o.lessThanOrEquals(d,e),p=!r(f),h=p||o.greaterThanOrEquals(f,e);if(m&&h)return c=s,!p&&f.equals(e)&&++c,l=c+1,v(this,i,this._samples,e,c,l,n),n}var _=t(i,e,o.compare,this._dateColumn);return _>=0?(_<i.length-1&&i[_+1].equals(e)&&++_,c=_,l=_):(l=~_,(c=l-1)<0&&(c=0)),this._lastIndex=c,v(this,i,this._samples,e,c,l,n),n}if(r(this._dataError))throw new u(this._dataError)},f}),define("Core/Iau2006XysSample",[],function(){"use strict";function e(e,t,n){this.x=e,this.y=t,this.s=n}return e}),define("Core/Iau2006XysData",["../ThirdParty/when","./buildModuleUrl","./defaultValue","./defined","./Iau2006XysSample","./JulianDate","./Resource","./TimeStandard"],function(e,t,n,r,a,i,o,s){"use strict";function c(e){e=n(e,n.EMPTY_OBJECT),this._xysFileUrlTemplate=o.createIfNeeded(e.xysFileUrlTemplate),this._interpolationOrder=n(e.interpolationOrder,9),this._sampleZeroJulianEphemerisDate=n(e.sampleZeroJulianEphemerisDate,2442396.5),this._sampleZeroDateTT=new i(this._sampleZeroJulianEphemerisDate,0,s.TAI),this._stepSizeDays=n(e.stepSizeDays,1),this._samplesPerXysFile=n(e.samplesPerXysFile,1e3),this._totalSamples=n(e.totalSamples,27426),this._samples=new Array(3*this._totalSamples),this._chunkDownloadsInProgress=[];for(var t=this._interpolationOrder,r=this._denominators=new Array(t+1),a=this._xTable=new Array(t+1),c=Math.pow(this._stepSizeDays,t),u=0;u<=t;++u){r[u]=c,a[u]=u*this._stepSizeDays;for(var l=0;l<=t;++l)l!==u&&(r[u]*=u-l);r[u]=1/r[u]}this._work=new Array(t+1),this._coef=new Array(t+1)}function u(e,t,n){var r=d;return r.dayNumber=t,r.secondsOfDay=n,i.daysDifference(r,e._sampleZeroDateTT)}function l(n,a){if(n._chunkDownloadsInProgress[a])return n._chunkDownloadsInProgress[a];var i=e.defer();n._chunkDownloadsInProgress[a]=i;var s,c=n._xysFileUrlTemplate;return s=r(c)?c.getDerivedResource({templateValues:{0:a}}):new o({url:t("Assets/IAU2006_XYS/IAU2006_XYS_"+a+".json")}),e(s.fetchJson(),function(e){n._chunkDownloadsInProgress[a]=!1;for(var t=n._samples,r=e.samples,o=a*n._samplesPerXysFile*3,s=0,c=r.length;s<c;++s)t[o+s]=r[s];i.resolve()}),i.promise}var d=new i(0,0,s.TAI);return c.prototype.preload=function(t,n,r,a){var i=u(this,t,n),o=u(this,r,a),s=i/this._stepSizeDays-this._interpolationOrder/2|0;s<0&&(s=0);var c=o/this._stepSizeDays-this._interpolationOrder/2|0+this._interpolationOrder;c>=this._totalSamples&&(c=this._totalSamples-1);for(var d=s/this._samplesPerXysFile|0,f=c/this._samplesPerXysFile|0,m=[],p=d;p<=f;++p)m.push(l(this,p));return e.all(m)},c.prototype.computeXysRadians=function(e,t,n){var i=u(this,e,t);if(!(i<0)){var o=i/this._stepSizeDays|0;if(!(o>=this._totalSamples)){var s=this._interpolationOrder,c=o-(s/2|0);c<0&&(c=0);var d=c+s;d>=this._totalSamples&&(d=this._totalSamples-1,(c=d-s)<0&&(c=0));var f=!1,m=this._samples;if(r(m[3*c])||(l(this,c/this._samplesPerXysFile|0),f=!0),r(m[3*d])||(l(this,d/this._samplesPerXysFile|0),f=!0),!f){r(n)?(n.x=0,n.y=0,n.s=0):n=new a(0,0,0);var p,h,_=i-c*this._stepSizeDays,v=this._work,g=this._denominators,y=this._coef,E=this._xTable;for(p=0;p<=s;++p)v[p]=_-E[p];for(p=0;p<=s;++p){for(y[p]=1,h=0;h<=s;++h)h!==p&&(y[p]*=v[h]);y[p]*=g[p];var T=3*(c+p);n.x+=y[p]*m[T++],n.y+=y[p]*m[T++],n.s+=y[p]*m[T]}return n}}}},c}),define("Core/Transforms",["../ThirdParty/when","./Cartesian2","./Cartesian3","./Cartesian4","./Cartographic","./Check","./defaultValue","./defined","./DeveloperError","./EarthOrientationParameters","./EarthOrientationParametersSample","./Ellipsoid","./Iau2006XysData","./Iau2006XysSample","./JulianDate","./Math","./Matrix3","./Matrix4","./Quaternion","./TimeConstants"],function(e,t,n,r,a,i,o,s,c,u,l,d,f,m,p,h,_,v,g,y){"use strict";var E={},T={up:{south:"east",north:"west",west:"south",east:"north"},down:{south:"west",north:"east",west:"north",east:"south"},south:{up:"west",down:"east",west:"down",east:"up"},north:{up:"east",down:"west",west:"up",east:"down"},west:{up:"north",down:"south",north:"down",south:"up"},east:{up:"south",down:"north",north:"up",south:"down"}},C={north:[-1,0,0],east:[0,1,0],up:[0,0,1],south:[1,0,0],west:[0,-1,0],down:[0,0,-1]},S={},A={east:new n,north:new n,up:new n,west:new n,south:new n,down:new n},x=new n,w=new n,b=new n;E.localFrameToFixedFrameGenerator=function(e,t){if(!T.hasOwnProperty(e)||!T[e].hasOwnProperty(t))throw new c("firstAxis and secondAxis must be east, north, up, west, south or down.");var r,a=T[e][t],i=e+t;return s(S[i])?r=S[i]:(r=function(r,i,c){if(s(c)||(c=new v),h.equalsEpsilon(r.x,0,h.EPSILON14)&&h.equalsEpsilon(r.y,0,h.EPSILON14)){var u=h.sign(r.z);n.unpack(C[e],0,x),"east"!==e&&"west"!==e&&n.multiplyByScalar(x,u,x),n.unpack(C[t],0,w),"east"!==t&&"west"!==t&&n.multiplyByScalar(w,u,w),n.unpack(C[a],0,b),"east"!==a&&"west"!==a&&n.multiplyByScalar(b,u,b)}else{i=o(i,d.WGS84),i.geodeticSurfaceNormal(r,A.up);var l=A.up,f=A.east;f.x=-r.y,f.y=r.x,f.z=0,n.normalize(f,A.east),n.cross(l,f,A.north),n.multiplyByScalar(A.up,-1,A.down),n.multiplyByScalar(A.east,-1,A.west),n.multiplyByScalar(A.north,-1,A.south),x=A[e],w=A[t],b=A[a]}return c[0]=x.x,c[1]=x.y,c[2]=x.z,c[3]=0,c[4]=w.x,c[5]=w.y,c[6]=w.z,c[7]=0,c[8]=b.x,c[9]=b.y,c[10]=b.z,c[11]=0,c[12]=r.x,c[13]=r.y,c[14]=r.z,c[15]=1,c},S[i]=r),r},E.eastNorthUpToFixedFrame=E.localFrameToFixedFrameGenerator("east","north"),E.northEastDownToFixedFrame=E.localFrameToFixedFrameGenerator("north","east"),E.northUpEastToFixedFrame=E.localFrameToFixedFrameGenerator("north","up"),E.northWestUpToFixedFrame=E.localFrameToFixedFrameGenerator("north","west");var R=new g,I=new n(1,1,1),z=new v;E.headingPitchRollToFixedFrame=function(e,t,r,a,i){a=o(a,E.eastNorthUpToFixedFrame);var s=g.fromHeadingPitchRoll(t,R),c=v.fromTranslationQuaternionRotationScale(n.ZERO,s,I,z);return i=a(e,r,i),v.multiply(i,c,i)};var D=new v,O=new _;E.headingPitchRollQuaternion=function(e,t,n,r,a){var i=E.headingPitchRollToFixedFrame(e,t,n,r,D),o=v.getRotation(i,O);return g.fromRotationMatrix(o,a)};var P=h.TWO_PI/86400,M=new p;E.computeTemeToPseudoFixedMatrix=function(e,t){M=p.addSeconds(e,-p.computeTaiMinusUtc(e),M);var n,r=M.dayNumber,a=M.secondsOfDay,i=r-2451545;n=a>=43200?(i+.5)/y.DAYS_PER_JULIAN_CENTURY:(i-.5)/y.DAYS_PER_JULIAN_CENTURY;var o=24110.54841+n*(8640184.812866+n*(.093104+-62e-7*n)),c=o*P%h.TWO_PI,u=72921158553e-15+1.1772758384668e-19*(r-2451545.5),l=(a+.5*y.SECONDS_PER_DAY)%y.SECONDS_PER_DAY,d=c+u*l,f=Math.cos(d),m=Math.sin(d);return s(t)?(t[0]=f,t[1]=-m,t[2]=0,t[3]=m,t[4]=f,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t):new _(f,m,0,-m,f,0,0,0,1)},E.iau2006XysData=new f,E.earthOrientationParameters=u.NONE;E.preloadIcrfFixed=function(t){var n=t.start.dayNumber,r=t.start.secondsOfDay+32.184,a=t.stop.dayNumber,i=t.stop.secondsOfDay+32.184,o=E.iau2006XysData.preload(n,r,a,i),s=E.earthOrientationParameters.getPromiseToLoad();return e.all([o,s])},E.computeIcrfToFixedMatrix=function(e,t){s(t)||(t=new _);var n=E.computeFixedToIcrfMatrix(e,t);if(s(n))return _.transpose(n,t)}
;var N=new m(0,0,0),F=new l(0,0,0,0,0,0),L=new _,B=new _;E.computeFixedToIcrfMatrix=function(e,t){s(t)||(t=new _);var n=E.earthOrientationParameters.compute(e,F);if(s(n)){var r=e.dayNumber,a=e.secondsOfDay+32.184,i=E.iau2006XysData.computeXysRadians(r,a,N);if(s(i)){var o=i.x+n.xPoleOffset,c=i.y+n.yPoleOffset,u=1/(1+Math.sqrt(1-o*o-c*c)),l=L;l[0]=1-u*o*o,l[3]=-u*o*c,l[6]=o,l[1]=-u*o*c,l[4]=1-u*c*c,l[7]=c,l[2]=-o,l[5]=-c,l[8]=1-u*(o*o+c*c);var d=_.fromRotationZ(-i.s,B),f=_.multiply(l,d,L),m=e.dayNumber,v=e.secondsOfDay-p.computeTaiMinusUtc(e)+n.ut1MinusUtc,g=m-2451545,T=v/y.SECONDS_PER_DAY,C=.779057273264+T+.00273781191135448*(g+T);C=C%1*h.TWO_PI;var S=_.fromRotationZ(C,B),A=_.multiply(f,S,L),x=Math.cos(n.xPoleWander),w=Math.cos(n.yPoleWander),b=Math.sin(n.xPoleWander),R=Math.sin(n.yPoleWander),I=r-2451545+a/y.SECONDS_PER_DAY;I/=36525;var z=-47e-6*I*h.RADIANS_PER_DEGREE/3600,D=Math.cos(z),O=Math.sin(z),P=B;return P[0]=x*D,P[1]=x*O,P[2]=b,P[3]=-w*O+R*b*D,P[4]=w*D+R*b*O,P[5]=-R*x,P[6]=-R*O-w*b*D,P[7]=R*D-w*b*O,P[8]=w*x,_.multiply(A,P,t)}}};var U=new r;E.pointToWindowCoordinates=function(e,t,n,r){return r=E.pointToGLWindowCoordinates(e,t,n,r),r.y=2*t[5]-r.y,r},E.pointToGLWindowCoordinates=function(e,n,a,i){s(i)||(i=new t);var o=U;return v.multiplyByVector(e,r.fromElements(a.x,a.y,a.z,1,o),o),r.multiplyByScalar(o,1/o.w,o),v.multiplyByVector(n,o,o),t.fromCartesian4(o,i)};var G=new n,V=new n,k=new n;E.rotationMatrixFromPositionVelocity=function(e,t,r,a){var i=o(r,d.WGS84).geodeticSurfaceNormal(e,G),c=n.cross(t,i,V);n.equalsEpsilon(c,n.ZERO,h.EPSILON6)&&(c=n.clone(n.UNIT_X,c));var u=n.cross(c,t,k);return n.cross(t,u,c),n.negate(c,c),s(a)||(a=new _),a[0]=t.x,a[1]=t.y,a[2]=t.z,a[3]=c.x,a[4]=c.y,a[5]=c.z,a[6]=u.x,a[7]=u.y,a[8]=u.z,a};var q=new v(0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1),H=new a,W=new n,Y=new n,X=new _,j=new v,Z=new v;return E.basisTo2D=function(e,t,r){var a=v.getTranslation(t,Y),i=e.ellipsoid,o=i.cartesianToCartographic(a,H),s=e.project(o,W);n.fromElements(s.z,s.x,s.y,s);var c=E.eastNorthUpToFixedFrame(a,i,j),u=v.inverseTransformation(c,Z),l=v.getRotation(t,X),d=v.multiplyByMatrix3(u,l,r);return v.multiply(q,d,r),v.setTranslation(r,s,r),r},E.wgs84To2DModelMatrix=function(e,t,r){var a=e.ellipsoid,i=E.eastNorthUpToFixedFrame(t,a,j),o=v.inverseTransformation(i,Z),s=a.cartesianToCartographic(t,H),c=e.project(s,W);n.fromElements(c.z,c.x,c.y,c);var u=v.fromTranslation(c,j);return v.multiply(q,o,r),v.multiply(u,r,r),r},E}),define("Core/Geometry",["./Cartesian2","./Cartesian3","./Cartographic","./Check","./defaultValue","./defined","./DeveloperError","./GeometryOffsetAttribute","./GeometryType","./Matrix2","./Matrix3","./Matrix4","./PrimitiveType","./Quaternion","./Rectangle","./Transforms"],function(e,t,n,r,a,i,o,s,c,u,l,d,f,m,p,h){"use strict";function _(e){e=a(e,a.EMPTY_OBJECT),this.attributes=e.attributes,this.indices=e.indices,this.primitiveType=a(e.primitiveType,f.TRIANGLES),this.boundingSphere=e.boundingSphere,this.geometryType=a(e.geometryType,c.NONE),this.boundingSphereCV=e.boundingSphereCV,this.offsetAttribute=e.offsetAttribute}_.computeNumberOfVertices=function(e){var t=-1;for(var n in e.attributes)if(e.attributes.hasOwnProperty(n)&&i(e.attributes[n])&&i(e.attributes[n].values)){var r=e.attributes[n],a=r.values.length/r.componentsPerAttribute;t=a}return t};var v=new n,g=new t,y=new d,E=[new n,new n,new n],T=[new e,new e,new e],C=[new e,new e,new e],S=new t,A=new m,x=new d,w=new u;return _._textureCoordinateRotationPoints=function(r,a,i,o){var s,c=p.center(o,v),f=n.toCartesian(c,i,g),_=h.eastNorthUpToFixedFrame(f,i,y),b=d.inverse(_,y),R=T,I=E;I[0].longitude=o.west,I[0].latitude=o.south,I[1].longitude=o.west,I[1].latitude=o.north,I[2].longitude=o.east,I[2].latitude=o.south;var z=S;for(s=0;s<3;s++)n.toCartesian(I[s],i,z),z=d.multiplyByPointAsVector(b,z,z),R[s].x=z.x,R[s].y=z.y;var D=m.fromAxisAngle(t.UNIT_Z,-a,A),O=l.fromQuaternion(D,x),P=r.length,M=Number.POSITIVE_INFINITY,N=Number.POSITIVE_INFINITY,F=Number.NEGATIVE_INFINITY,L=Number.NEGATIVE_INFINITY;for(s=0;s<P;s++)z=d.multiplyByPointAsVector(b,r[s],z),z=l.multiplyByVector(O,z,z),M=Math.min(M,z.x),N=Math.min(N,z.y),F=Math.max(F,z.x),L=Math.max(L,z.y);var B=u.fromRotation(a,w),U=C;U[0].x=M,U[0].y=N,U[1].x=M,U[1].y=L,U[2].x=F,U[2].y=N;var G=R[0],V=R[2].x-G.x,k=R[1].y-G.y;for(s=0;s<3;s++){var q=U[s];u.multiplyByVector(B,q,q),q.x=(q.x-G.x)/V,q.y=(q.y-G.y)/k}var H=U[0],W=U[1],Y=U[2],X=new Array(6);return e.pack(H,X),e.pack(W,X,2),e.pack(Y,X,4),X},_}),define("Core/GeometryAttribute",["./defaultValue","./defined","./DeveloperError"],function(e,t,n){"use strict";function r(t){t=e(t,e.EMPTY_OBJECT),this.componentDatatype=t.componentDatatype,this.componentsPerAttribute=t.componentsPerAttribute,this.normalize=e(t.normalize,!1),this.values=t.values}return r}),define("Core/QuadraticRealPolynomial",["./DeveloperError","./Math"],function(e,t){"use strict";function n(e,n,r){var a=e+n;return t.sign(e)!==t.sign(n)&&Math.abs(a/Math.max(Math.abs(e),Math.abs(n)))<r?0:a}var r={};return r.computeDiscriminant=function(e,t,n){return t*t-4*e*n},r.computeRealRoots=function(e,r,a){var i;if(0===e)return 0===r?[]:[-a/r];if(0===r){if(0===a)return[0,0];var o=Math.abs(a),s=Math.abs(e);if(o<s&&o/s<t.EPSILON14)return[0,0];if(o>s&&s/o<t.EPSILON14)return[];if((i=-a/e)<0)return[];var c=Math.sqrt(i);return[-c,c]}if(0===a)return i=-r/e,i<0?[i,0]:[0,i];var u=r*r,l=4*e*a,d=n(u,-l,t.EPSILON14);if(d<0)return[];var f=-.5*n(r,t.sign(r)*Math.sqrt(d),t.EPSILON14);return r>0?[f/e,a/f]:[a/f,f/e]},r}),define("Core/CubicRealPolynomial",["./DeveloperError","./QuadraticRealPolynomial"],function(e,t){"use strict";function n(e,t,n,r){var a,i,o=e,s=t/3,c=n/3,u=r,l=o*c,d=s*u,f=s*s,m=c*c,p=o*c-f,h=o*u-s*c,_=s*u-m,v=4*p*_-h*h;if(v<0){var g,y,E;f*d>=l*m?(g=o,y=p,E=-2*s*p+o*h):(g=u,y=_,E=-u*h+2*c*_);var T=E<0?-1:1,C=-T*Math.abs(g)*Math.sqrt(-v);i=-E+C;var S=i/2,A=S<0?-Math.pow(-S,1/3):Math.pow(S,1/3),x=i===C?-A:-y/A;return a=y<=0?A+x:-E/(A*A+x*x+y),f*d>=l*m?[(a-s)/o]:[-u/(a+c)]}var w=p,b=-2*s*p+o*h,R=_,I=-u*h+2*c*_,z=Math.sqrt(v),D=Math.sqrt(3)/2,O=Math.abs(Math.atan2(o*z,-b)/3);a=2*Math.sqrt(-w);var P=Math.cos(O);i=a*P;var M=a*(-P/2-D*Math.sin(O)),N=i+M>2*s?i-s:M-s,F=o,L=N/F;O=Math.abs(Math.atan2(u*z,-I)/3),a=2*Math.sqrt(-R),P=Math.cos(O),i=a*P,M=a*(-P/2-D*Math.sin(O));var B=-u,U=i+M<2*c?i+c:M+c,G=B/U,V=F*U,k=-N*U-F*B,q=N*B,H=(c*k-s*q)/(-s*k+c*V);return L<=H?L<=G?H<=G?[L,H,G]:[L,G,H]:[G,L,H]:L<=G?[H,L,G]:H<=G?[H,G,L]:[G,H,L]}var r={};return r.computeDiscriminant=function(e,t,n,r){var a=e*e,i=t*t,o=n*n;return 18*e*t*n*r+i*o-27*a*(r*r)-4*(e*o*n+i*t*r)},r.computeRealRoots=function(e,r,a,i){var o,s;if(0===e)return t.computeRealRoots(r,a,i);if(0===r){if(0===a){if(0===i)return[0,0,0];s=-i/e;var c=s<0?-Math.pow(-s,1/3):Math.pow(s,1/3);return[c,c,c]}return 0===i?(o=t.computeRealRoots(e,0,a),0===o.Length?[0]:[o[0],0,o[1]]):n(e,0,a,i)}return 0===a?0===i?(s=-r/e,s<0?[s,0,0]:[0,0,s]):n(e,r,0,i):0===i?(o=t.computeRealRoots(e,r,a),0===o.length?[0]:o[1]<=0?[o[0],o[1],0]:o[0]>=0?[0,o[0],o[1]]:[o[0],0,o[1]]):n(e,r,a,i)},r}),define("Core/QuarticRealPolynomial",["./CubicRealPolynomial","./DeveloperError","./Math","./QuadraticRealPolynomial"],function(e,t,n,r){"use strict";function a(t,a,i,o){var s=t*t,c=a-3*s/8,u=i-a*t/2+s*t/8,l=o-i*t/4+a*s/16-3*s*s/256,d=e.computeRealRoots(1,2*c,c*c-4*l,-u*u);if(d.length>0){var f=-t/4,m=d[d.length-1];if(Math.abs(m)<n.EPSILON14){var p=r.computeRealRoots(1,c,l);if(2===p.length){var h,_=p[0],v=p[1];if(_>=0&&v>=0){var g=Math.sqrt(_),y=Math.sqrt(v);return[f-y,f-g,f+g,f+y]}if(_>=0&&v<0)return h=Math.sqrt(_),[f-h,f+h];if(_<0&&v>=0)return h=Math.sqrt(v),[f-h,f+h]}return[]}if(m>0){var E=Math.sqrt(m),T=(c+m-u/E)/2,C=(c+m+u/E)/2,S=r.computeRealRoots(1,E,T),A=r.computeRealRoots(1,-E,C);return 0!==S.length?(S[0]+=f,S[1]+=f,0!==A.length?(A[0]+=f,A[1]+=f,S[1]<=A[0]?[S[0],S[1],A[0],A[1]]:A[1]<=S[0]?[A[0],A[1],S[0],S[1]]:S[0]>=A[0]&&S[1]<=A[1]?[A[0],S[0],S[1],A[1]]:A[0]>=S[0]&&A[1]<=S[1]?[S[0],A[0],A[1],S[1]]:S[0]>A[0]&&S[0]<A[1]?[A[0],S[0],A[1],S[1]]:[S[0],A[0],S[1],A[1]]):S):0!==A.length?(A[0]+=f,A[1]+=f,A):[]}}return[]}function i(t,a,i,o){var s=i*i,c=a*a,u=t*t,l=-2*a,d=i*t+c-4*o,f=u*o-i*a*t+s,m=e.computeRealRoots(1,l,d,f);if(m.length>0){var p,h,_=m[0],v=a-_,g=v*v,y=t/2,E=v/2,T=g-4*o,C=g+4*Math.abs(o),S=u-4*_,A=u+4*Math.abs(_);if(_<0||T*A<S*C){var x=Math.sqrt(S);p=x/2,h=0===x?0:(t*E-i)/x}else{var w=Math.sqrt(T);p=0===w?0:(t*E-i)/w,h=w/2}var b,R;0===y&&0===p?(b=0,R=0):n.sign(y)===n.sign(p)?(b=y+p,R=_/b):(R=y-p,b=_/R);var I,z;0===E&&0===h?(I=0,z=0):n.sign(E)===n.sign(h)?(I=E+h,z=o/I):(z=E-h,I=o/z);var D=r.computeRealRoots(1,b,I),O=r.computeRealRoots(1,R,z);if(0!==D.length)return 0!==O.length?D[1]<=O[0]?[D[0],D[1],O[0],O[1]]:O[1]<=D[0]?[O[0],O[1],D[0],D[1]]:D[0]>=O[0]&&D[1]<=O[1]?[O[0],D[0],D[1],O[1]]:O[0]>=D[0]&&O[1]<=D[1]?[D[0],O[0],O[1],D[1]]:D[0]>O[0]&&D[0]<O[1]?[O[0],D[0],O[1],D[1]]:[D[0],O[0],D[1],O[1]]:D;if(0!==O.length)return O}return[]}var o={};return o.computeDiscriminant=function(e,t,n,r,a){var i=e*e,o=i*e,s=t*t,c=s*t,u=n*n,l=u*n,d=r*r,f=d*r,m=a*a;return s*u*d-4*c*f-4*e*l*d+18*e*t*n*f-27*i*d*d+256*o*(m*a)+a*(18*c*n*r-4*s*l+16*e*u*u-80*e*t*u*r-6*e*s*d+144*i*n*d)+m*(144*e*s*n-27*s*s-128*i*u-192*i*t*r)},o.computeRealRoots=function(t,r,o,s,c){if(Math.abs(t)<n.EPSILON15)return e.computeRealRoots(r,o,s,c);var u=r/t,l=o/t,d=s/t,f=c/t,m=u<0?1:0;switch(m+=l<0?m+1:m,m+=d<0?m+1:m,m+=f<0?m+1:m){case 0:return a(u,l,d,f);case 1:case 2:return i(u,l,d,f);case 3:case 4:return a(u,l,d,f);case 5:return i(u,l,d,f);case 6:case 7:return a(u,l,d,f);case 8:return i(u,l,d,f);case 9:case 10:return a(u,l,d,f);case 11:return i(u,l,d,f);case 12:case 13:case 14:case 15:return a(u,l,d,f);default:return}},o}),define("Core/Ray",["./Cartesian3","./defaultValue","./defined","./DeveloperError"],function(e,t,n,r){"use strict";function a(n,r){r=e.clone(t(r,e.ZERO)),e.equals(r,e.ZERO)||e.normalize(r,r),this.origin=e.clone(t(n,e.ZERO)),this.direction=r}return a.getPoint=function(t,r,a){return n(a)||(a=new e),a=e.multiplyByScalar(t.direction,r,a),e.add(t.origin,a,a)},a}),define("Core/IntersectionTests",["./Cartesian3","./Cartographic","./defaultValue","./defined","./DeveloperError","./Interval","./Math","./Matrix3","./QuadraticRealPolynomial","./QuarticRealPolynomial","./Ray"],function(e,t,n,r,a,i,o,s,c,u,l){"use strict";function d(e,t,n,r){var a=t*t-4*e*n;if(!(a<0)){if(a>0){var i=1/(2*e),o=Math.sqrt(a),s=(-t+o)*i,c=(-t-o)*i;return s<c?(r.root0=s,r.root1=c):(r.root0=c,r.root1=s),r}var u=-t/(2*e);if(0!==u)return r.root0=r.root1=u,r}}function f(t,n,a){r(a)||(a=new i);var o=t.origin,s=t.direction,c=n.center,u=n.radius*n.radius,l=e.subtract(o,c,g),f=e.dot(s,s),m=2*e.dot(s,l),p=e.magnitudeSquared(l)-u,h=d(f,m,p,C);if(r(h))return a.start=h.root0,a.stop=h.root1,a}function m(e,t,n){var r=e+t;return o.sign(e)!==o.sign(t)&&Math.abs(r/Math.max(Math.abs(e),Math.abs(t)))<n?0:r}function p(t,n,r,a,i){var l,d=a*a,f=i*i,p=(t[s.COLUMN1ROW1]-t[s.COLUMN2ROW2])*f,h=i*(a*m(t[s.COLUMN1ROW0],t[s.COLUMN0ROW1],o.EPSILON15)+n.y),_=t[s.COLUMN0ROW0]*d+t[s.COLUMN2ROW2]*f+a*n.x+r,v=f*m(t[s.COLUMN2ROW1],t[s.COLUMN1ROW2],o.EPSILON15),g=i*(a*m(t[s.COLUMN2ROW0],t[s.COLUMN0ROW2])+n.z),y=[];if(0===g&&0===v){if(l=c.computeRealRoots(p,h,_),0===l.length)return y;var E=l[0],T=Math.sqrt(Math.max(1-E*E,0));if(y.push(new e(a,i*E,i*-T)),y.push(new e(a,i*E,i*T)),2===l.length){var C=l[1],S=Math.sqrt(Math.max(1-C*C,0));y.push(new e(a,i*C,i*-S)),y.push(new e(a,i*C,i*S))}return y}var A=g*g,x=v*v,w=p*p,b=g*v,R=w+x,I=2*(h*p+b),z=2*_*p+h*h-x+A,D=2*(_*h-b),O=_*_-A;if(0===R&&0===I&&0===z&&0===D)return y;l=u.computeRealRoots(R,I,z,D,O);var P=l.length;if(0===P)return y;for(var M=0;M<P;++M){var N,F=l[M],L=F*F,B=Math.max(1-L,0),U=Math.sqrt(B);N=o.sign(p)===o.sign(_)?m(p*L+_,h*F,o.EPSILON12):o.sign(_)===o.sign(h*F)?m(p*L,h*F+_,o.EPSILON12):m(p*L+h*F,_,o.EPSILON12);var G=m(v*F,g,o.EPSILON15),V=N*G;V<0?y.push(new e(a,i*F,i*U)):V>0?y.push(new e(a,i*F,i*-U)):0!==U?(y.push(new e(a,i*F,i*-U)),y.push(new e(a,i*F,i*U)),++M):y.push(new e(a,i*F,i*U))}return y}var h={};h.rayPlane=function(t,n,a){r(a)||(a=new e);var i=t.origin,s=t.direction,c=n.normal,u=e.dot(c,s);if(!(Math.abs(u)<o.EPSILON15)){var l=(-n.distance-e.dot(c,i))/u;if(!(l<0))return a=e.multiplyByScalar(s,l,a),e.add(i,a,a)}};var _=new e,v=new e,g=new e,y=new e,E=new e;h.rayTriangleParametric=function(t,r,a,i,s){s=n(s,!1);var c,u,l,d,f,m=t.origin,p=t.direction,h=e.subtract(a,r,_),T=e.subtract(i,r,v),C=e.cross(p,T,g),S=e.dot(h,C);if(s){if(S<o.EPSILON6)return;if(c=e.subtract(m,r,y),(l=e.dot(c,C))<0||l>S)return;if(u=e.cross(c,h,E),(d=e.dot(p,u))<0||l+d>S)return;f=e.dot(T,u)/S}else{if(Math.abs(S)<o.EPSILON6)return;var A=1/S;if(c=e.subtract(m,r,y),(l=e.dot(c,C)*A)<0||l>1)return;if(u=e.cross(c,h,E),(d=e.dot(p,u)*A)<0||l+d>1)return;f=e.dot(T,u)*A}return f},h.rayTriangle=function(t,n,a,i,o,s){var c=h.rayTriangleParametric(t,n,a,i,o);if(r(c)&&!(c<0))return r(s)||(s=new e),e.multiplyByScalar(t.direction,c,s),e.add(t.origin,s,s)};var T=new l;h.lineSegmentTriangle=function(t,n,a,i,o,s,c){var u=T;e.clone(t,u.origin),e.subtract(n,t,u.direction),e.normalize(u.direction,u.direction);var l=h.rayTriangleParametric(u,a,i,o,s);if(!(!r(l)||l<0||l>e.distance(t,n)))return r(c)||(c=new e),e.multiplyByScalar(u.direction,l,c),e.add(u.origin,c,c)};var C={root0:0,root1:0};h.raySphere=function(e,t,n){if(n=f(e,t,n),r(n)&&!(n.stop<0))return n.start=Math.max(n.start,0),n};var S=new l;h.lineSegmentSphere=function(t,n,a,i){var o=S;e.clone(t,o.origin);var s=e.subtract(n,t,o.direction),c=e.magnitude(s);if(e.normalize(s,s),i=f(o,a,i),!(!r(i)||i.stop<0||i.start>c))return i.start=Math.max(i.start,0),i.stop=Math.min(i.stop,c),i};var A=new e,x=new e;h.rayEllipsoid=function(t,n){var r,a,o,s,c,u=n.oneOverRadii,l=e.multiplyComponents(u,t.origin,A),d=e.multiplyComponents(u,t.direction,x),f=e.magnitudeSquared(l),m=e.dot(l,d);if(f>1){if(m>=0)return;var p=m*m;if(r=f-1,a=e.magnitudeSquared(d),o=a*r,p<o)return;if(p>o){s=m*m-o,c=-m+Math.sqrt(s);var h=c/a,_=r/c;return h<_?new i(h,_):{start:_,stop:h}}var v=Math.sqrt(r/a);return new i(v,v)}return f<1?(r=f-1,a=e.magnitudeSquared(d),o=a*r,s=m*m-o,c=-m+Math.sqrt(s),new i(0,c/a)):m<0?(a=e.magnitudeSquared(d),new i(0,-m/a)):void 0};var w=new e,b=new e,R=new e,I=new e,z=new e,D=new s,O=new s,P=new s,M=new s,N=new s,F=new s,L=new s,B=new e,U=new e,G=new t;h.grazingAltitudeLocation=function(t,n){var a=t.origin,i=t.direction;if(!e.equals(a,e.ZERO)){var c=n.geodeticSurfaceNormal(a,w);if(e.dot(i,c)>=0)return a}var u=r(this.rayEllipsoid(t,n)),l=n.transformPositionToScaledSpace(i,w),d=e.normalize(l,l),f=e.mostOrthogonalAxis(l,I),m=e.normalize(e.cross(f,d,b),b),h=e.normalize(e.cross(d,m,R),R),_=D;_[0]=d.x,_[1]=d.y,_[2]=d.z,_[3]=m.x,_[4]=m.y,_[5]=m.z,_[6]=h.x,_[7]=h.y,_[8]=h.z;var v=s.transpose(_,O),g=s.fromScale(n.radii,P),y=s.fromScale(n.oneOverRadii,M),E=N;E[0]=0,E[1]=-i.z,E[2]=i.y,E[3]=i.z,E[4]=0,E[5]=-i.x,E[6]=-i.y,E[7]=i.x,E[8]=0;var T,C,S=s.multiply(s.multiply(v,y,F),E,F),A=s.multiply(s.multiply(S,g,L),_,L),x=s.multiplyByVector(S,a,z),V=p(A,e.negate(x,w),0,0,1),k=V.length;if(k>0){for(var q=e.clone(e.ZERO,U),H=Number.NEGATIVE_INFINITY,W=0;W<k;++W){T=s.multiplyByVector(g,s.multiplyByVector(_,V[W],B),B);var Y=e.normalize(e.subtract(T,a,I),I),X=e.dot(Y,i);X>H&&(H=X,q=e.clone(T,q))}var j=n.cartesianToCartographic(q,G);return H=o.clamp(H,0,1),C=e.magnitude(e.subtract(q,a,I))*Math.sqrt(1-H*H),C=u?-C:C,j.height=C,n.cartographicToCartesian(j,new e)}};var V=new e;return h.lineSegmentPlane=function(t,n,a,i){r(i)||(i=new e);var s=e.subtract(n,t,V),c=a.normal,u=e.dot(c,s);if(!(Math.abs(u)<o.EPSILON6)){var l=e.dot(c,t),d=-(a.distance+l)/u;if(!(d<0||d>1))return e.multiplyByScalar(s,d,i),e.add(t,i,i),i}},h.trianglePlaneIntersection=function(t,n,r,a){var i=a.normal,o=a.distance,s=e.dot(i,t)+o<0,c=e.dot(i,n)+o<0,u=e.dot(i,r)+o<0,l=0;l+=s?1:0,l+=c?1:0,l+=u?1:0;var d,f;if(1!==l&&2!==l||(d=new e,f=new e),1===l){if(s)return h.lineSegmentPlane(t,n,a,d),h.lineSegmentPlane(t,r,a,f),{positions:[t,n,r,d,f],indices:[0,3,4,1,2,4,1,4,3]};if(c)return h.lineSegmentPlane(n,r,a,d),h.lineSegmentPlane(n,t,a,f),{positions:[t,n,r,d,f],indices:[1,3,4,2,0,4,2,4,3]};if(u)return h.lineSegmentPlane(r,t,a,d),h.lineSegmentPlane(r,n,a,f),{positions:[t,n,r,d,f],indices:[2,3,4,0,1,4,0,4,3]}}else if(2===l){if(!s)return h.lineSegmentPlane(n,t,a,d),h.lineSegmentPlane(r,t,a,f),{positions:[t,n,r,d,f],indices:[1,2,4,1,4,3,0,3,4]};if(!c)return h.lineSegmentPlane(r,n,a,d),h.lineSegmentPlane(t,n,a,f),{positions:[t,n,r,d,f],indices:[2,0,4,2,4,3,1,3,4]};if(!u)return h.lineSegmentPlane(t,r,a,d),h.lineSegmentPlane(n,r,a,f),{positions:[t,n,r,d,f],indices:[0,1,4,0,4,3,2,3,4]}}},h}),define("Core/Plane",["./Cartesian3","./Check","./defined","./DeveloperError","./freezeObject","./Math","./Matrix4"],function(e,t,n,r,a,i,o){"use strict";function s(t,n){this.normal=e.clone(t),this.distance=n}s.fromPointNormal=function(t,r,a){var i=-e.dot(r,t);return n(a)?(e.clone(r,a.normal),a.distance=i,a):new s(r,i)};var c=new e;s.fromCartesian4=function(t,r){var a=e.fromCartesian4(t,c),i=t.w;return n(r)?(e.clone(a,r.normal),r.distance=i,r):new s(a,i)},s.getPointDistance=function(t,n){return e.dot(t.normal,n)+t.distance};var u=new e;s.projectPointOntoPlane=function(t,r,a){n(a)||(a=new e);var i=s.getPointDistance(t,r),o=e.multiplyByScalar(t.normal,i,u);return e.subtract(r,o,a)};var l=new e;return s.transform=function(t,n,r){return o.multiplyByPointAsVector(n,t.normal,c),e.normalize(c,c),e.multiplyByScalar(t.normal,-t.distance,l),o.multiplyByPoint(n,l,l),s.fromPointNormal(l,c,r)},s.clone=function(t,r){return n(r)?(e.clone(t.normal,r.normal),r.distance=t.distance,r):new s(t.normal,t.distance)},s.equals=function(t,n){return t.distance===n.distance&&e.equals(t.normal,n.normal)},s.ORIGIN_XY_PLANE=a(new s(e.UNIT_Z,0)),s.ORIGIN_YZ_PLANE=a(new s(e.UNIT_X,0)),s.ORIGIN_ZX_PLANE=a(new s(e.UNIT_Y,0)),s}),define("Core/WebMercatorProjection",["./Cartesian3","./Cartographic","./defaultValue","./defined","./defineProperties","./DeveloperError","./Ellipsoid","./Math"],function(e,t,n,r,a,i,o,s){"use strict";function c(e){this._ellipsoid=n(e,o.WGS84),this._semimajorAxis=this._ellipsoid.maximumRadius,this._oneOverSemimajorAxis=1/this._semimajorAxis}return a(c.prototype,{ellipsoid:{get:function(){return this._ellipsoid}}}),c.mercatorAngleToGeodeticLatitude=function(e){return s.PI_OVER_TWO-2*Math.atan(Math.exp(-e))},c.geodeticLatitudeToMercatorAngle=function(e){e>c.MaximumLatitude?e=c.MaximumLatitude:e<-c.MaximumLatitude&&(e=-c.MaximumLatitude);var t=Math.sin(e);return.5*Math.log((1+t)/(1-t))},c.MaximumLatitude=c.mercatorAngleToGeodeticLatitude(Math.PI),c.prototype.project=function(t,n){var a=this._semimajorAxis,i=t.longitude*a,o=c.geodeticLatitudeToMercatorAngle(t.latitude)*a,s=t.height;return r(n)?(n.x=i,n.y=o,n.z=s,n):new e(i,o,s)},c.prototype.unproject=function(e,n){var a=this._oneOverSemimajorAxis,i=e.x*a,o=c.mercatorAngleToGeodeticLatitude(e.y*a),s=e.z;return r(n)?(n.longitude=i,n.latitude=o,n.height=s,n):new t(i,o,s)},c}),define("Core/GroundPolylineGeometry",["./ApproximateTerrainHeights","./arrayRemoveDuplicates","./BoundingSphere","./Cartesian3","./Cartographic","./Check","./ComponentDatatype","./DeveloperError","./Math","./defaultValue","./defined","./defineProperties","./Ellipsoid","./EllipsoidGeodesic","./EncodedCartesian3","./GeographicProjection","./Geometry","./GeometryAttribute","./IntersectionTests","./Matrix3","./Plane","./Quaternion","./Rectangle","./WebMercatorProjection"],function(e,t,n,r,a,i,o,s,c,u,l,d,f,m,p,h,_,v,g,y,E,T,C,S){"use strict";function A(e){e=u(e,u.EMPTY_OBJECT);var t=e.positions;this.width=u(e.width,1),this._positions=t,this.granularity=u(e.granularity,9999),this.loop=u(e.loop,!1),this._ellipsoid=f.WGS84,this._projectionIndex=0,this._workerName="createGroundPolylineGeometry",this._scene3DOnly=!1}function x(e,t,n,a,i){var o=b(a,e,0,q),s=b(a,e,n,H),c=b(a,t,0,W),u=R(s,o,H),l=R(c,o,W);return r.cross(l,u,i),r.normalize(i,i)}function w(e,t,n,a,i,o,s,c,u,l){if(0!==i){var d=new m(e,t,o),f=d.surfaceDistance;if(!(f<i))for(var p=x(e,t,a,o,Z),h=Math.ceil(f/i),_=f/h,v=_,g=h-1,y=s.length,E=0;E<g;E++){var T=d.interpolateUsingSurfaceDistance(v,Y),C=b(o,T,n,X),S=b(o,T,a,j);r.pack(p,s,y),r.pack(C,c,y),r.pack(S,u,y),l.push(T.latitude),l.push(T.longitude),y+=3,v+=_}}}function b(e,t,n,r){return a.clone(t,K),K.height=n,a.toCartesian(K,e,r)}function R(e,t,n){return r.subtract(e,t,n),r.normalize(n,n),n}function I(e,t,n,a,i){var o=R(n,t,ne),s=R(e,t,J),u=R(a,t,Q),l=r.cross(o,s,ee);l=r.normalize(l,l);var d=E.fromPointNormal(t,l,te),f=E.getPointDistance(d,a);if(c.equalsEpsilon(f,0,c.EPSILON7))return r.clone(l,i),i;i=r.add(u,s,i),i=r.normalize(i,i);var m=r.cross(o,i,$);return r.normalize(m,m),r.cross(m,o,i),r.normalize(i,i),r.dot(u,m)<re&&(i=r.negate(i,i)),i}function z(e,t,n,a){var i=R(n,t,de),o=r.dot(i,e);if(o>U||o<G){var s=R(a,n,ne),u=o<G?c.PI_OVER_TWO:-c.PI_OVER_TWO,l=T.fromAxisAngle(s,u,me),d=y.fromQuaternion(l,fe);return y.multiplyByVector(d,e,e),!0}return!1}function D(e,t,n,i,o){var s=a.toCartesian(t,e._ellipsoid,he),u=r.add(s,n,_e),l=!1,d=e._ellipsoid,f=d.cartesianToCartographic(u,pe);Math.abs(t.longitude-f.longitude)>c.PI_OVER_TWO&&(l=!0,u=r.subtract(s,n,_e),f=d.cartesianToCartographic(u,pe)),f.height=0;var m=e.project(f,o);return o=r.subtract(m,i,o),o.z=0,o=r.normalize(o,o),l&&r.negate(o,o),o}function O(e,t,n,a,i,o){var s=r.subtract(t,e,ve);r.normalize(s,s);var c=n-V,u=r.multiplyByScalar(s,c,ge);r.add(e,u,i);var l=a-k;u=r.multiplyByScalar(s,l,ge),r.add(t,u,o)}function P(e,t){var n=E.getPointDistance(ae,e),a=E.getPointDistance(ae,t),i=ye;c.equalsEpsilon(n,0,c.EPSILON2)?(i=R(t,e,i),r.multiplyByScalar(i,c.EPSILON2,i),r.add(e,i,e)):c.equalsEpsilon(a,0,c.EPSILON2)&&(i=R(e,t,i),r.multiplyByScalar(i,c.EPSILON2,i),r.add(t,i,t))}function M(e,t){var n=Math.abs(e.longitude),r=Math.abs(t.longitude);if(c.equalsEpsilon(n,c.PI,c.EPSILON11)){var a=c.sign(t.longitude);return e.longitude=a*(n-c.EPSILON11),1}if(c.equalsEpsilon(r,c.PI,c.EPSILON11)){var i=c.sign(e.longitude);return t.longitude=i*(r-c.EPSILON11),2}return 0}function N(t,i,s,u,l,d,f){var m,h,g,y,E,T,S=i._ellipsoid,A=s.length/3-1,x=8*A,w=4*x,b=36*A,I=x>65535?new Uint32Array(b):new Uint16Array(b),N=new Float64Array(3*x),L=new Float32Array(w),B=new Float32Array(w),G=new Float32Array(w),V=new Float32Array(w),k=new Float32Array(w);f&&(g=new Float32Array(w),y=new Float32Array(w),E=new Float32Array(w),T=new Float32Array(2*x));var q=d.length/2,H=0,W=Ee;W.height=0;var Y=Te;Y.height=0;var X=Ce,j=Se;if(f)for(h=0,m=1;m<q;m++)W.latitude=d[h],W.longitude=d[h+1],Y.latitude=d[h+2],Y.longitude=d[h+3],X=i.project(W,X),j=i.project(Y,j),H+=r.distance(X,j),h+=2;var Z=u.length/3;j=r.unpack(u,0,j);var K=0;for(h=3,m=1;m<Z;m++)X=r.clone(j,X),j=r.unpack(u,h,j),K+=r.distance(X,j),h+=3;var J;h=3;var Q=0,$=0,ee=0,te=0,ne=!1,re=r.unpack(s,0,xe),ae=r.unpack(u,0,Se),ie=r.unpack(l,0,be);if(t){z(ie,r.unpack(s,s.length-6,Ae),re,ae)&&(ie=r.negate(ie,ie))}var oe=0,se=0,ce=0;for(m=0;m<A;m++){var ue=r.clone(re,Ae),le=r.clone(ae,Ce),de=r.clone(ie,we);ne&&(de=r.negate(de,de)),re=r.unpack(s,h,xe),ae=r.unpack(u,h,Se),ie=r.unpack(l,h,be),ne=z(ie,ue,re,ae),W.latitude=d[Q],W.longitude=d[Q+1],Y.latitude=d[Q+2],Y.longitude=d[Q+3];var fe,me,pe,he;if(f){var _e=M(W,Y);fe=i.project(W,Me),me=i.project(Y,Ne);var ve=R(me,fe,Ye);ve.y=Math.abs(ve.y),pe=Fe,he=Le,0===_e||r.dot(ve,r.UNIT_Y)>U?(pe=D(i,W,de,fe,Fe),he=D(i,Y,ie,me,Le)):1===_e?(he=D(i,Y,ie,me,Le),pe.x=0,pe.y=c.sign(W.longitude-Math.abs(Y.longitude)),pe.z=0):(pe=D(i,W,de,fe,Fe),he.x=0,he.y=c.sign(W.longitude-Y.longitude),he.z=0)}var ge=r.distance(le,ae),ye=p.fromCartesian(ue,He),$e=r.subtract(re,ue,Be),et=r.normalize($e,Ve),tt=r.subtract(le,ue,Ue);tt=r.normalize(tt,tt);var nt=r.cross(et,tt,Ve);nt=r.normalize(nt,nt);var rt=r.cross(tt,de,ke);rt=r.normalize(rt,rt);var at=r.subtract(ae,re,Ge);at=r.normalize(at,at);var it=r.cross(ie,at,qe);it=r.normalize(it,it);var ot,st,ct,ut=ge/K,lt=oe/K,dt=0,ft=0,mt=0;if(f){dt=r.distance(fe,me),ot=p.fromCartesian(fe,We),st=r.subtract(me,fe,Ye),ct=r.normalize(st,Xe);var pt=ct.x;ct.x=ct.y,ct.y=-pt,ft=dt/H,mt=se/H}for(J=0;J<8;J++){var ht=te+4*J,_t=$+2*J,vt=ht+3,gt=J<4?1:-1,yt=2===J||3===J||6===J||7===J?1:-1;r.pack(ye.high,L,ht),L[vt]=$e.x,r.pack(ye.low,B,ht),B[vt]=$e.y,r.pack(rt,G,ht),G[vt]=$e.z,r.pack(it,V,ht),V[vt]=ut*gt,r.pack(nt,k,ht);var Et=lt*yt;0===Et&&yt<0&&(Et=Number.POSITIVE_INFINITY),k[vt]=Et,f&&(g[ht]=ot.high.x,g[ht+1]=ot.high.y,g[ht+2]=ot.low.x,g[ht+3]=ot.low.y,E[ht]=-pe.y,E[ht+1]=pe.x,E[ht+2]=he.y,E[ht+3]=-he.x,y[ht]=st.x,y[ht+1]=st.y,y[ht+2]=ct.x,y[ht+3]=ct.y,T[_t]=ft*gt,Et=mt*yt,0===Et&&yt<0&&(Et=Number.POSITIVE_INFINITY),T[_t+1]=Et)}var Tt=Oe,Ct=Pe,St=ze,At=De,xt=C.fromCartographicArray(Re,Ie),wt=e.getApproximateTerrainHeights(xt,S),bt=wt.minimumTerrainHeight,Rt=wt.maximumTerrainHeight;ce+=bt,ce+=Rt,O(ue,le,bt,Rt,Tt,St),O(re,ae,bt,Rt,Ct,At);var It=r.multiplyByScalar(nt,c.EPSILON5,je);r.add(Tt,It,Tt),r.add(Ct,It,Ct),r.add(St,It,St),r.add(At,It,At),P(Tt,Ct),P(St,At),r.pack(Tt,N,ee),r.pack(Ct,N,ee+3),r.pack(At,N,ee+6),r.pack(St,N,ee+9),It=r.multiplyByScalar(nt,-2*c.EPSILON5,je),r.add(Tt,It,Tt),r.add(Ct,It,Ct),r.add(St,It,St),r.add(At,It,At),P(Tt,Ct),P(St,At),r.pack(Tt,N,ee+12),r.pack(Ct,N,ee+15),r.pack(At,N,ee+18),r.pack(St,N,ee+21),Q+=2,h+=3,$+=16,ee+=24,te+=32,oe+=ge,se+=dt}h=0;var zt=0;for(m=0;m<A;m++){for(J=0;J<Qe;J++)I[h+J]=Je[J]+zt;zt+=8,h+=Qe}var Dt=Ze;n.fromVertices(s,r.ZERO,3,Dt[0]),n.fromVertices(u,r.ZERO,3,Dt[1]);var Ot=n.fromBoundingSpheres(Dt),Pt=ce/(2*A),Mt=a.fromCartesian(Ot.center,S,Ke);Mt.height=Pt,Ot.center=a.toCartesian(Mt,S,Ot.center),Ot.radius=Math.max(Ot.radius,Pt);var Nt={position:new v({componentDatatype:o.DOUBLE,componentsPerAttribute:3,normalize:!1,values:N}),startHiAndForwardOffsetX:F(L),startLoAndForwardOffsetY:F(B),startNormalAndForwardOffsetZ:F(G),endNormalAndTextureCoordinateNormalizationX:F(V),rightNormalAndTextureCoordinateNormalizationY:F(k)};return f&&(Nt.startHiLo2D=F(g),Nt.offsetAndRight2D=F(y),Nt.startEndNormals2D=F(E),Nt.texcoordNormalization2D=new v({componentDatatype:o.FLOAT,componentsPerAttribute:2,normalize:!1,values:T})),new _({attributes:Nt,indices:I,boundingSphere:Ot})}function F(e){return new v({componentDatatype:o.FLOAT,componentsPerAttribute:4,normalize:!1,values:e})}var L=[h,S],B=L.length,U=Math.cos(c.toRadians(30)),G=Math.cos(c.toRadians(150)),V=0,k=1e3;d(A.prototype,{packedLength:{get:function(){return 1+3*this._positions.length+1+1+f.packedLength+1+1}}}),A.setProjectionAndEllipsoid=function(e,t){for(var n=0,r=0;r<B;r++)if(t instanceof L[r]){n=r;break}e._projectionIndex=n,e._ellipsoid=t.ellipsoid};var q=new r,H=new r,W=new r,Y=new a,X=new r,j=new r,Z=new r,K=new a;A.pack=function(e,t,n){var a=u(n,0),i=e._positions,o=i.length;t[a++]=o;for(var s=0;s<o;++s){var c=i[s];r.pack(c,t,a),a+=3}return t[a++]=e.granularity,t[a++]=e.loop?1:0,f.pack(e._ellipsoid,t,a),a+=f.packedLength,t[a++]=e._projectionIndex,t[a++]=e._scene3DOnly?1:0,t},A.unpack=function(e,t,n){for(var a=u(t,0),i=e[a++],o=new Array(i),s=0;s<i;s++)o[s]=r.unpack(e,a),a+=3;var c=e[a++],d=1===e[a++],m=f.unpack(e,a);a+=f.packedLength;var p=e[a++],h=1===e[a++];if(!l(n)){var _=new A({positions:o,granularity:c,loop:d,ellipsoid:m});return _._projectionIndex=p,_._scene3DOnly=h,_}return n._positions=o,n.granularity=c,n.loop=d,n._ellipsoid=m,n._projectionIndex=p,n._scene3DOnly=h,n};var J=new r,Q=new r,$=new r,ee=new r,te=new E(r.UNIT_X,0),ne=new r,re=0,ae=E.fromPointNormal(r.ZERO,r.UNIT_Y),ie=new r,oe=new r,se=new r,ce=new r,ue=new r,le=new r;A.createGeometry=function(e){var n,i,o=!e._scene3DOnly,s=e.loop,u=e._ellipsoid,d=e.granularity,f=new L[e._projectionIndex](u),m=V,p=k,h=e._positions,_=h.length;2===_&&(s=!1);var v,y,E,T=[h[0]];for(i=0;i<_-1;i++)v=h[i],y=h[i+1],E=g.lineSegmentPlane(v,y,ae,le),!l(E)||r.equalsEpsilon(E,v,c.EPSILON7)||r.equalsEpsilon(E,y,c.EPSILON7)||T.push(r.clone(E)),T.push(y);s&&(v=h[_-1],y=h[0],E=g.lineSegmentPlane(v,y,ae,le),!l(E)||r.equalsEpsilon(E,v,c.EPSILON7)||r.equalsEpsilon(E,y,c.EPSILON7)||T.push(r.clone(E)));var C=T.length,S=new Array(C);for(i=0;i<C;i++){var A=a.fromCartesian(T[i],u);A.height=0,S[i]=A}if(S=t(S,a.equalsEpsilon),!((C=S.length)<2)){var R=[],z=[],D=[],O=[],P=ie,M=oe,F=se,B=ce,U=ue,G=S[0],q=S[1],H=S[C-1];for(P=b(u,H,m,P),B=b(u,q,m,B),M=b(u,G,m,M),F=b(u,G,p,F),U=s?I(P,M,F,B,U):x(G,q,p,u,U),r.pack(U,z,0),r.pack(M,D,0),r.pack(F,O,0),R.push(G.latitude),R.push(G.longitude),w(G,q,m,p,d,u,z,D,O,R),i=1;i<C-1;++i){P=r.clone(M,P),M=r.clone(B,M);var W=S[i];b(u,W,p,F),b(u,S[i+1],m,B),I(P,M,F,B,U),n=z.length,r.pack(U,z,n),r.pack(M,D,n),r.pack(F,O,n),R.push(W.latitude),R.push(W.longitude),w(S[i],S[i+1],m,p,d,u,z,D,O,R)}var Y=S[C-1],X=S[C-2];if(M=b(u,Y,m,M),F=b(u,Y,p,F),s){var j=S[0];P=b(u,X,m,P),B=b(u,j,m,B),U=I(P,M,F,B,U)}else U=x(X,Y,p,u,U);if(n=z.length,r.pack(U,z,n),r.pack(M,D,n),r.pack(F,O,n),R.push(Y.latitude),R.push(Y.longitude),s){for(w(Y,G,m,p,d,u,z,D,O,R),n=z.length,i=0;i<3;++i)z[n+i]=z[i],D[n+i]=D[i],O[n+i]=O[i];R.push(G.latitude),R.push(G.longitude)}return N(s,f,D,O,z,R,o)}};var de=new r,fe=new y,me=new T,pe=new a,he=new r,_e=new r,ve=new r,ge=new r,ye=new r,Ee=new a,Te=new a,Ce=new r,Se=new r,Ae=new r,xe=new r,we=new r,be=new r,Re=[Ee,Te],Ie=new C,ze=new r,De=new r,Oe=new r,Pe=new r,Me=new r,Ne=new r,Fe=new r,Le=new r,Be=new r,Ue=new r,Ge=new r,Ve=new r,ke=new r,qe=new r,He=new p,We=new p,Ye=new r,Xe=new r,je=new r,Ze=[new n,new n],Ke=new a,Je=[0,2,1,0,3,2,0,7,3,0,4,7,0,5,4,0,1,5,5,7,4,5,6,7,5,2,6,5,1,2,3,6,2,3,7,6],Qe=Je.length;return A._projectNormal=D,A}),define("Core/destroyObject",["./defaultValue","./DeveloperError"],function(e,t){"use strict";function n(){return!0}function r(t,r){function a(){}r=e(r,"This object was destroyed, i.e., destroy() was called.");for(var i in t)"function"==typeof t[i]&&(t[i]=a);t.isDestroyed=n}return r}),define("Core/GeometryInstance",["./defaultValue","./defined","./DeveloperError","./Matrix4"],function(e,t,n,r){"use strict";function a(t){t=e(t,e.EMPTY_OBJECT),this.geometry=t.geometry,this.modelMatrix=r.clone(e(t.modelMatrix,r.IDENTITY)),this.id=t.id,this.pickPrimitive=t.pickPrimitive,this.attributes=e(t.attributes,{}),this.westHemisphereGeometry=void 0,this.eastHemisphereGeometry=void 0}return a}),define("Core/GeometryInstanceAttribute",["./defaultValue","./defined","./DeveloperError"],function(e,t,n){"use strict";function r(t){t=e(t,e.EMPTY_OBJECT),this.componentDatatype=t.componentDatatype,this.componentsPerAttribute=t.componentsPerAttribute,this.normalize=e(t.normalize,!1),this.value=t.value}return r}),define("Shaders/PolylineShadowVolumeVS",[],function(){"use strict"
;return'attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\n\n// In 2D and in 3D, texture coordinate normalization component signs encodes:\n// * X sign - sidedness relative to right plane\n// * Y sign - is negative OR magnitude is greater than 1.0 if vertex is on bottom of volume\n#ifndef COLUMBUS_VIEW_2D\nattribute vec4 startHiAndForwardOffsetX;\nattribute vec4 startLoAndForwardOffsetY;\nattribute vec4 startNormalAndForwardOffsetZ;\nattribute vec4 endNormalAndTextureCoordinateNormalizationX;\nattribute vec4 rightNormalAndTextureCoordinateNormalizationY;\n#else\nattribute vec4 startHiLo2D;\nattribute vec4 offsetAndRight2D;\nattribute vec4 startEndNormals2D;\nattribute vec2 texcoordNormalization2D;\n#endif\n\nattribute float batchId;\n\nvarying vec4 v_startPlaneNormalEcAndHalfWidth;\nvarying vec4 v_endPlaneNormalEcAndBatchId;\nvarying vec4 v_rightPlaneEC;\nvarying vec4 v_endEcAndStartEcX;\nvarying vec4 v_texcoordNormalizationAndStartEcYZ;\n\n// For materials\n#ifdef WIDTH_VARYING\nvarying float v_width;\n#endif\n#ifdef ANGLE_VARYING\nvarying float v_polylineAngle;\n#endif\n\n#ifdef PER_INSTANCE_COLOR\nvarying vec4 v_color;\n#endif\n\nvoid main()\n{\n#ifdef COLUMBUS_VIEW_2D\n    vec3 ecStart = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(vec3(0.0, startHiLo2D.xy), vec3(0.0, startHiLo2D.zw))).xyz;\n\n    vec3 forwardDirectionEC = czm_normal * vec3(0.0, offsetAndRight2D.xy);\n    vec3 ecEnd = forwardDirectionEC + ecStart;\n    forwardDirectionEC = normalize(forwardDirectionEC);\n\n    // Right plane\n    v_rightPlaneEC.xyz = czm_normal * vec3(0.0, offsetAndRight2D.zw);\n    v_rightPlaneEC.w = -dot(v_rightPlaneEC.xyz, ecStart);\n\n    // start plane\n    vec4 startPlaneEC;\n    startPlaneEC.xyz =  czm_normal * vec3(0.0, startEndNormals2D.xy);\n    startPlaneEC.w = -dot(startPlaneEC.xyz, ecStart);\n\n    // end plane\n    vec4 endPlaneEC;\n    endPlaneEC.xyz =  czm_normal * vec3(0.0, startEndNormals2D.zw);\n    endPlaneEC.w = -dot(endPlaneEC.xyz, ecEnd);\n\n    v_texcoordNormalizationAndStartEcYZ.x = abs(texcoordNormalization2D.x);\n    v_texcoordNormalizationAndStartEcYZ.y = texcoordNormalization2D.y;\n\n#else // COLUMBUS_VIEW_2D\n    vec3 ecStart = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(startHiAndForwardOffsetX.xyz, startLoAndForwardOffsetY.xyz)).xyz;\n    vec3 offset = czm_normal * vec3(startHiAndForwardOffsetX.w, startLoAndForwardOffsetY.w, startNormalAndForwardOffsetZ.w);\n    vec3 ecEnd = ecStart + offset;\n\n    vec3 forwardDirectionEC = normalize(offset);\n\n    // start plane\n    vec4 startPlaneEC;\n    startPlaneEC.xyz = czm_normal * startNormalAndForwardOffsetZ.xyz;\n    startPlaneEC.w = -dot(startPlaneEC.xyz, ecStart);\n\n    // end plane\n    vec4 endPlaneEC;\n    endPlaneEC.xyz = czm_normal * endNormalAndTextureCoordinateNormalizationX.xyz;\n    endPlaneEC.w = -dot(endPlaneEC.xyz, ecEnd);\n\n    // Right plane\n    v_rightPlaneEC.xyz = czm_normal * rightNormalAndTextureCoordinateNormalizationY.xyz;\n    v_rightPlaneEC.w = -dot(v_rightPlaneEC.xyz, ecStart);\n\n    v_texcoordNormalizationAndStartEcYZ.x = abs(endNormalAndTextureCoordinateNormalizationX.w);\n    v_texcoordNormalizationAndStartEcYZ.y = rightNormalAndTextureCoordinateNormalizationY.w;\n\n#endif // COLUMBUS_VIEW_2D\n\n    v_endEcAndStartEcX.xyz = ecEnd;\n    v_endEcAndStartEcX.w = ecStart.x;\n    v_texcoordNormalizationAndStartEcYZ.zw = ecStart.yz;\n\n#ifdef PER_INSTANCE_COLOR\n    v_color = czm_batchTable_color(batchId);\n#endif // PER_INSTANCE_COLOR\n\n    // Compute a normal along which to "push" the position out, extending the miter depending on view distance.\n    // Position has already been "pushed" by unit length along miter normal, and miter normals are encoded in the planes.\n    // Decode the normal to use at this specific vertex, push the position back, and then push to where it needs to be.\n    vec4 positionRelativeToEye = czm_computePosition();\n\n    // Check distance to the end plane and start plane, pick the plane that is closer\n    vec4 positionEC = czm_modelViewRelativeToEye * positionRelativeToEye; // w = 1.0, see czm_computePosition\n    float absStartPlaneDistance = abs(czm_planeDistance(startPlaneEC, positionEC.xyz));\n    float absEndPlaneDistance = abs(czm_planeDistance(endPlaneEC, positionEC.xyz));\n    vec3 planeDirection = czm_branchFreeTernary(absStartPlaneDistance < absEndPlaneDistance, startPlaneEC.xyz, endPlaneEC.xyz);\n    vec3 upOrDown = normalize(cross(v_rightPlaneEC.xyz, planeDirection)); // Points "up" for start plane, "down" at end plane.\n    vec3 normalEC = normalize(cross(planeDirection, upOrDown));           // In practice, the opposite seems to work too.\n\n    // Extrude bottom vertices downward for far view distances, like for GroundPrimitives\n    upOrDown = cross(forwardDirectionEC, normalEC);\n    upOrDown = float(czm_sceneMode == czm_sceneMode3D) * upOrDown;\n    upOrDown = float(v_texcoordNormalizationAndStartEcYZ.y > 1.0 || v_texcoordNormalizationAndStartEcYZ.y < 0.0) * upOrDown;\n    upOrDown = min(GLOBE_MINIMUM_ALTITUDE, czm_geometricToleranceOverMeter * length(positionRelativeToEye.xyz)) * upOrDown;\n    positionEC.xyz += upOrDown;\n\n    v_texcoordNormalizationAndStartEcYZ.y = czm_branchFreeTernary(v_texcoordNormalizationAndStartEcYZ.y > 1.0, 0.0, abs(v_texcoordNormalizationAndStartEcYZ.y));\n\n    // Determine distance along normalEC to push for a volume of appropriate width.\n    // Make volumes about double pixel width for a conservative fit - in practice the\n    // extra cost here is minimal compared to the loose volume heights.\n    //\n    // N = normalEC (guaranteed "right-facing")\n    // R = rightEC\n    // p = angle between N and R\n    // w = distance to push along R if R == N\n    // d = distance to push along N\n    //\n    //   N   R\n    //  {  p| }      * cos(p) = dot(N, R) = w / d\n    //  d  |  |w    * d = w / dot(N, R)\n    //    { | }\n    //       o---------- polyline segment ----\x3e\n    //\n    float width = czm_batchTable_width(batchId);\n#ifdef WIDTH_VARYING\n    v_width = width;\n#endif\n\n    v_startPlaneNormalEcAndHalfWidth.xyz = startPlaneEC.xyz;\n    v_startPlaneNormalEcAndHalfWidth.w = width * 0.5;\n\n    v_endPlaneNormalEcAndBatchId.xyz = endPlaneEC.xyz;\n    v_endPlaneNormalEcAndBatchId.w = batchId;\n\n    width = width * max(0.0, czm_metersPerPixel(positionEC)); // width = distance to push along R\n    width = width / dot(normalEC, v_rightPlaneEC.xyz); // width = distance to push along N\n\n    // Determine if this vertex is on the "left" or "right"\n#ifdef COLUMBUS_VIEW_2D\n        normalEC *= sign(texcoordNormalization2D.x);\n#else\n        normalEC *= sign(endNormalAndTextureCoordinateNormalizationX.w);\n#endif\n\n    positionEC.xyz += width * normalEC;\n    gl_Position = czm_depthClampFarPlane(czm_projection * positionEC);\n\n#ifdef ANGLE_VARYING\n    // Approximate relative screen space direction of the line.\n    vec2 approxLineDirection = normalize(vec2(forwardDirectionEC.x, -forwardDirectionEC.y));\n    approxLineDirection.y = czm_branchFreeTernary(approxLineDirection.x == 0.0 && approxLineDirection.y == 0.0, -1.0, approxLineDirection.y);\n    v_polylineAngle = czm_fastApproximateAtan(approxLineDirection.x, approxLineDirection.y);\n#endif\n}\n'}),define("Shaders/PolylineShadowVolumeFS",[],function(){"use strict";return'#ifdef GL_EXT_frag_depth\n#extension GL_EXT_frag_depth : enable\n#endif\n\nvarying vec4 v_startPlaneNormalEcAndHalfWidth;\nvarying vec4 v_endPlaneNormalEcAndBatchId;\nvarying vec4 v_rightPlaneEC; // Technically can compute distance for this here\nvarying vec4 v_endEcAndStartEcX;\nvarying vec4 v_texcoordNormalizationAndStartEcYZ;\n\n#ifdef PER_INSTANCE_COLOR\nvarying vec4 v_color;\n#endif\n\nvoid main(void)\n{\n    float logDepthOrDepth = czm_branchFreeTernary(czm_sceneMode == czm_sceneMode2D, gl_FragCoord.z, czm_unpackDepth(texture2D(czm_globeDepthTexture, gl_FragCoord.xy / czm_viewport.zw)));\n    vec3 ecStart = vec3(v_endEcAndStartEcX.w, v_texcoordNormalizationAndStartEcYZ.zw);\n\n    // Discard for sky\n    if (logDepthOrDepth == 0.0) {\n#ifdef DEBUG_SHOW_VOLUME\n        gl_FragColor = vec4(1.0, 0.0, 0.0, 0.5);\n        return;\n#else // DEBUG_SHOW_VOLUME\n        discard;\n#endif // DEBUG_SHOW_VOLUME\n    }\n\n    vec4 eyeCoordinate = czm_windowToEyeCoordinates(gl_FragCoord.xy, logDepthOrDepth);\n    eyeCoordinate /= eyeCoordinate.w;\n\n    float halfMaxWidth = v_startPlaneNormalEcAndHalfWidth.w * czm_metersPerPixel(eyeCoordinate);\n    // Check distance of the eye coordinate against the right-facing plane\n    float widthwiseDistance = czm_planeDistance(v_rightPlaneEC, eyeCoordinate.xyz);\n\n    // Check eye coordinate against the mitering planes\n    float distanceFromStart = czm_planeDistance(v_startPlaneNormalEcAndHalfWidth.xyz, -dot(ecStart, v_startPlaneNormalEcAndHalfWidth.xyz), eyeCoordinate.xyz);\n    float distanceFromEnd = czm_planeDistance(v_endPlaneNormalEcAndBatchId.xyz, -dot(v_endEcAndStartEcX.xyz, v_endPlaneNormalEcAndBatchId.xyz), eyeCoordinate.xyz);\n\n    if (abs(widthwiseDistance) > halfMaxWidth || distanceFromStart < 0.0 || distanceFromEnd < 0.0) {\n#ifdef DEBUG_SHOW_VOLUME\n        gl_FragColor = vec4(1.0, 0.0, 0.0, 0.5);\n        return;\n#else // DEBUG_SHOW_VOLUME\n        discard;\n#endif // DEBUG_SHOW_VOLUME\n    }\n\n    // Check distance of the eye coordinate against start and end planes with normals in the right plane.\n    // For computing unskewed lengthwise texture coordinate.\n    // Can also be used for clipping extremely pointy miters, but in practice unnecessary because of miter breaking.\n\n    // aligned plane: cross the right plane normal with miter plane normal, then cross the result with right again to point it more "forward"\n    vec3 alignedPlaneNormal;\n\n    // start aligned plane\n    alignedPlaneNormal = cross(v_rightPlaneEC.xyz, v_startPlaneNormalEcAndHalfWidth.xyz);\n    alignedPlaneNormal = normalize(cross(alignedPlaneNormal, v_rightPlaneEC.xyz));\n    distanceFromStart = czm_planeDistance(alignedPlaneNormal, -dot(alignedPlaneNormal, ecStart), eyeCoordinate.xyz);\n\n    // end aligned plane\n    alignedPlaneNormal = cross(v_rightPlaneEC.xyz, v_endPlaneNormalEcAndBatchId.xyz);\n    alignedPlaneNormal = normalize(cross(alignedPlaneNormal, v_rightPlaneEC.xyz));\n    distanceFromEnd = czm_planeDistance(alignedPlaneNormal, -dot(alignedPlaneNormal, v_endEcAndStartEcX.xyz), eyeCoordinate.xyz);\n\n#ifdef PER_INSTANCE_COLOR\n    gl_FragColor = v_color;\n#else // PER_INSTANCE_COLOR\n    // Clamp - distance to aligned planes may be negative due to mitering,\n    // so fragment texture coordinate might be out-of-bounds.\n    float s = clamp(distanceFromStart / (distanceFromStart + distanceFromEnd), 0.0, 1.0);\n    s = (s * v_texcoordNormalizationAndStartEcYZ.x) + v_texcoordNormalizationAndStartEcYZ.y;\n    float t = (widthwiseDistance + halfMaxWidth) / (2.0 * halfMaxWidth);\n\n    czm_materialInput materialInput;\n\n    materialInput.s = s;\n    materialInput.st = vec2(s, t);\n    materialInput.str = vec3(s, t, 0.0);\n\n    czm_material material = czm_getMaterial(materialInput);\n    gl_FragColor = vec4(material.diffuse + material.emission, material.alpha);\n#endif // PER_INSTANCE_COLOR\n\n    czm_writeDepthClampedToFarPlane();\n}\n'}),define("Shaders/PolylineShadowVolumeMorphVS",[],function(){"use strict";return'attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\n\nattribute vec4 startHiAndForwardOffsetX;\nattribute vec4 startLoAndForwardOffsetY;\nattribute vec4 startNormalAndForwardOffsetZ;\nattribute vec4 endNormalAndTextureCoordinateNormalizationX;\nattribute vec4 rightNormalAndTextureCoordinateNormalizationY;\nattribute vec4 startHiLo2D;\nattribute vec4 offsetAndRight2D;\nattribute vec4 startEndNormals2D;\nattribute vec2 texcoordNormalization2D;\n\nattribute float batchId;\n\nvarying vec3 v_forwardDirectionEC;\nvarying vec3 v_texcoordNormalizationAndHalfWidth;\nvarying float v_batchId;\n\n// For materials\n#ifdef WIDTH_VARYING\nvarying float v_width;\n#endif\n#ifdef ANGLE_VARYING\nvarying float v_polylineAngle;\n#endif\n\n#ifdef PER_INSTANCE_COLOR\nvarying vec4 v_color;\n#else\nvarying vec2 v_alignedPlaneDistances;\nvarying float v_texcoordT;\n#endif\n\n// Morphing planes using SLERP or NLERP doesn\'t seem to work, so instead draw the material directly on the shadow volume.\n// Morph views are from very far away and aren\'t meant to be used precisely, so this should be sufficient.\nvoid main()\n{\n    v_batchId = batchId;\n\n    // Start position\n    vec4 posRelativeToEye2D = czm_translateRelativeToEye(vec3(0.0, startHiLo2D.xy), vec3(0.0, startHiLo2D.zw));\n    vec4 posRelativeToEye3D = czm_translateRelativeToEye(startHiAndForwardOffsetX.xyz, startLoAndForwardOffsetY.xyz);\n    vec4 posRelativeToEye = czm_columbusViewMorph(posRelativeToEye2D, posRelativeToEye3D, czm_morphTime);\n    vec3 posEc2D = (czm_modelViewRelativeToEye * posRelativeToEye2D).xyz;\n    vec3 posEc3D = (czm_modelViewRelativeToEye * posRelativeToEye3D).xyz;\n    vec3 startEC = (czm_modelViewRelativeToEye * posRelativeToEye).xyz;\n\n    // Start plane\n    vec4 startPlane2D;\n    vec4 startPlane3D;\n    startPlane2D.xyz = czm_normal * vec3(0.0, startEndNormals2D.xy);\n    startPlane3D.xyz = czm_normal * startNormalAndForwardOffsetZ.xyz;\n    startPlane2D.w = -dot(startPlane2D.xyz, posEc2D);\n    startPlane3D.w = -dot(startPlane3D.xyz, posEc3D);\n\n    // Right plane\n    vec4 rightPlane2D;\n    vec4 rightPlane3D;\n    rightPlane2D.xyz = czm_normal * vec3(0.0, offsetAndRight2D.zw);\n    rightPlane3D.xyz = czm_normal * rightNormalAndTextureCoordinateNormalizationY.xyz;\n    rightPlane2D.w = -dot(rightPlane2D.xyz, posEc2D);\n    rightPlane3D.w = -dot(rightPlane3D.xyz, posEc3D);\n\n    // End position\n    posRelativeToEye2D = posRelativeToEye2D + vec4(0.0, offsetAndRight2D.xy, 0.0);\n    posRelativeToEye3D = posRelativeToEye3D + vec4(startHiAndForwardOffsetX.w, startLoAndForwardOffsetY.w, startNormalAndForwardOffsetZ.w, 0.0);\n    posRelativeToEye = czm_columbusViewMorph(posRelativeToEye2D, posRelativeToEye3D, czm_morphTime);\n    posEc2D = (czm_modelViewRelativeToEye * posRelativeToEye2D).xyz;\n    posEc3D = (czm_modelViewRelativeToEye * posRelativeToEye3D).xyz;\n    vec3 endEC = (czm_modelViewRelativeToEye * posRelativeToEye).xyz;\n    vec3 forwardEc3D = czm_normal * normalize(vec3(startHiAndForwardOffsetX.w, startLoAndForwardOffsetY.w, startNormalAndForwardOffsetZ.w));\n    vec3 forwardEc2D = czm_normal * normalize(vec3(0.0, offsetAndRight2D.xy));\n\n    // End plane\n    vec4 endPlane2D;\n    vec4 endPlane3D;\n    endPlane2D.xyz = czm_normal * vec3(0.0, startEndNormals2D.zw);\n    endPlane3D.xyz = czm_normal * endNormalAndTextureCoordinateNormalizationX.xyz;\n    endPlane2D.w = -dot(endPlane2D.xyz, posEc2D);\n    endPlane3D.w = -dot(endPlane3D.xyz, posEc3D);\n\n    // Forward direction\n    v_forwardDirectionEC = normalize(endEC - startEC);\n\n    vec2 cleanTexcoordNormalization2D;\n    cleanTexcoordNormalization2D.x = abs(texcoordNormalization2D.x);\n    cleanTexcoordNormalization2D.y = czm_branchFreeTernary(texcoordNormalization2D.y > 1.0, 0.0, abs(texcoordNormalization2D.y));\n    vec2 cleanTexcoordNormalization3D;\n    cleanTexcoordNormalization3D.x = abs(endNormalAndTextureCoordinateNormalizationX.w);\n    cleanTexcoordNormalization3D.y = rightNormalAndTextureCoordinateNormalizationY.w;\n    cleanTexcoordNormalization3D.y = czm_branchFreeTernary(cleanTexcoordNormalization3D.y > 1.0, 0.0, abs(cleanTexcoordNormalization3D.y));\n\n    v_texcoordNormalizationAndHalfWidth.xy = mix(cleanTexcoordNormalization2D, cleanTexcoordNormalization3D, czm_morphTime);\n\n#ifdef PER_INSTANCE_COLOR\n    v_color = czm_batchTable_color(batchId);\n#else // PER_INSTANCE_COLOR\n    // For computing texture coordinates\n\n    v_alignedPlaneDistances.x = -dot(v_forwardDirectionEC, startEC);\n    v_alignedPlaneDistances.y = -dot(-v_forwardDirectionEC, endEC);\n#endif // PER_INSTANCE_COLOR\n\n#ifdef WIDTH_VARYING\n    float width = czm_batchTable_width(batchId);\n    float halfWidth = width * 0.5;\n    v_width = width;\n    v_texcoordNormalizationAndHalfWidth.z = halfWidth;\n#else\n    float halfWidth = 0.5 * czm_batchTable_width(batchId);\n    v_texcoordNormalizationAndHalfWidth.z = halfWidth;\n#endif\n\n    // Compute a normal along which to "push" the position out, extending the miter depending on view distance.\n    // Position has already been "pushed" by unit length along miter normal, and miter normals are encoded in the planes.\n    // Decode the normal to use at this specific vertex, push the position back, and then push to where it needs to be.\n    // Since this is morphing, compute both 3D and 2D positions and then blend.\n\n    // ****** 3D ******\n    // Check distance to the end plane and start plane, pick the plane that is closer\n    vec4 positionEc3D = czm_modelViewRelativeToEye * czm_translateRelativeToEye(position3DHigh, position3DLow); // w = 1.0, see czm_computePosition\n    float absStartPlaneDistance = abs(czm_planeDistance(startPlane3D, positionEc3D.xyz));\n    float absEndPlaneDistance = abs(czm_planeDistance(endPlane3D, positionEc3D.xyz));\n    vec3 planeDirection = czm_branchFreeTernary(absStartPlaneDistance < absEndPlaneDistance, startPlane3D.xyz, endPlane3D.xyz);\n    vec3 upOrDown = normalize(cross(rightPlane3D.xyz, planeDirection)); // Points "up" for start plane, "down" at end plane.\n    vec3 normalEC = normalize(cross(planeDirection, upOrDown));         // In practice, the opposite seems to work too.\n\n    // Nudge the top vertex upwards to prevent flickering\n    vec3 geodeticSurfaceNormal = normalize(cross(normalEC, forwardEc3D));\n    geodeticSurfaceNormal *= float(0.0 <= rightNormalAndTextureCoordinateNormalizationY.w && rightNormalAndTextureCoordinateNormalizationY.w <= 1.0);\n    geodeticSurfaceNormal *= MAX_TERRAIN_HEIGHT;\n    positionEc3D.xyz += geodeticSurfaceNormal;\n\n    // Determine if this vertex is on the "left" or "right"\n    normalEC *= sign(endNormalAndTextureCoordinateNormalizationX.w);\n\n    // A "perfect" implementation would push along normals according to the angle against forward.\n    // In practice, just pushing the normal out by halfWidth is sufficient for morph views.\n    positionEc3D.xyz += halfWidth * max(0.0, czm_metersPerPixel(positionEc3D)) * normalEC; // prevent artifacts when czm_metersPerPixel is negative (behind camera)\n\n    // ****** 2D ******\n    // Check distance to the end plane and start plane, pick the plane that is closer\n    vec4 positionEc2D = czm_modelViewRelativeToEye * czm_translateRelativeToEye(position2DHigh.zxy, position2DLow.zxy); // w = 1.0, see czm_computePosition\n    absStartPlaneDistance = abs(czm_planeDistance(startPlane2D, positionEc2D.xyz));\n    absEndPlaneDistance = abs(czm_planeDistance(endPlane2D, positionEc2D.xyz));\n    planeDirection = czm_branchFreeTernary(absStartPlaneDistance < absEndPlaneDistance, startPlane2D.xyz, endPlane2D.xyz);\n    upOrDown = normalize(cross(rightPlane2D.xyz, planeDirection)); // Points "up" for start plane, "down" at end plane.\n    normalEC = normalize(cross(planeDirection, upOrDown));         // In practice, the opposite seems to work too.\n\n    // Nudge the top vertex upwards to prevent flickering\n    geodeticSurfaceNormal = normalize(cross(normalEC, forwardEc2D));\n    geodeticSurfaceNormal *= float(0.0 <= texcoordNormalization2D.y && texcoordNormalization2D.y <= 1.0);\n    geodeticSurfaceNormal *= MAX_TERRAIN_HEIGHT;\n    positionEc2D.xyz += geodeticSurfaceNormal;\n\n    // Determine if this vertex is on the "left" or "right"\n    normalEC *= sign(texcoordNormalization2D.x);\n#ifndef PER_INSTANCE_COLOR\n    // Use vertex\'s sidedness to compute its texture coordinate.\n    v_texcoordT = clamp(sign(texcoordNormalization2D.x), 0.0, 1.0);\n#endif\n\n    // A "perfect" implementation would push along normals according to the angle against forward.\n    // In practice, just pushing the normal out by halfWidth is sufficient for morph views.\n    positionEc2D.xyz += halfWidth * max(0.0, czm_metersPerPixel(positionEc2D)) * normalEC; // prevent artifacts when czm_metersPerPixel is negative (behind camera)\n\n    // Blend for actual position\n    gl_Position = czm_projection * mix(positionEc2D, positionEc3D, czm_morphTime);\n\n#ifdef ANGLE_VARYING\n    // Approximate relative screen space direction of the line.\n    vec2 approxLineDirection = normalize(vec2(v_forwardDirectionEC.x, -v_forwardDirectionEC.y));\n    approxLineDirection.y = czm_branchFreeTernary(approxLineDirection.x == 0.0 && approxLineDirection.y == 0.0, -1.0, approxLineDirection.y);\n    v_polylineAngle = czm_fastApproximateAtan(approxLineDirection.x, approxLineDirection.y);\n#endif\n}\n'}),define("Shaders/PolylineShadowVolumeMorphFS",[],function(){"use strict";return"varying vec3 v_forwardDirectionEC;\nvarying vec3 v_texcoordNormalizationAndHalfWidth;\nvarying float v_batchId;\n\n#ifdef PER_INSTANCE_COLOR\nvarying vec4 v_color;\n#else\nvarying vec2 v_alignedPlaneDistances;\nvarying float v_texcoordT;\n#endif\n\nfloat rayPlaneDistanceUnsafe(vec3 origin, vec3 direction, vec3 planeNormal, float planeDistance) {\n    // We don't expect the ray to ever be parallel to the plane\n    return (-planeDistance - dot(planeNormal, origin)) / dot(planeNormal, direction);\n}\n\nvoid main(void)\n{\n    vec4 eyeCoordinate = gl_FragCoord;\n    eyeCoordinate /= eyeCoordinate.w;\n\n#ifdef PER_INSTANCE_COLOR\n    gl_FragColor = v_color;\n#else // PER_INSTANCE_COLOR\n    // Use distances for planes aligned with segment to prevent skew in dashing\n    float distanceFromStart = rayPlaneDistanceUnsafe(eyeCoordinate.xyz, -v_forwardDirectionEC, v_forwardDirectionEC.xyz, v_alignedPlaneDistances.x);\n    float distanceFromEnd = rayPlaneDistanceUnsafe(eyeCoordinate.xyz, v_forwardDirectionEC, -v_forwardDirectionEC.xyz, v_alignedPlaneDistances.y);\n\n    // Clamp - distance to aligned planes may be negative due to mitering\n    distanceFromStart = max(0.0, distanceFromStart);\n    distanceFromEnd = max(0.0, distanceFromEnd);\n\n    float s = distanceFromStart / (distanceFromStart + distanceFromEnd);\n    s = (s * v_texcoordNormalizationAndHalfWidth.x) + v_texcoordNormalizationAndHalfWidth.y;\n\n    czm_materialInput materialInput;\n\n    materialInput.s = s;\n    materialInput.st = vec2(s, v_texcoordT);\n    materialInput.str = vec3(s, v_texcoordT, 0.0);\n\n    czm_material material = czm_getMaterial(materialInput);\n    gl_FragColor = vec4(material.diffuse + material.emission, material.alpha);\n#endif // PER_INSTANCE_COLOR\n}\n"}),define("Renderer/DrawCommand",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/PrimitiveType"],function(e,t,n,r){"use strict";function a(t){t=e(t,e.EMPTY_OBJECT),this._boundingVolume=t.boundingVolume,this._orientedBoundingBox=t.orientedBoundingBox,this._cull=e(t.cull,!0),this._modelMatrix=t.modelMatrix,this._primitiveType=e(t.primitiveType,r.TRIANGLES),this._vertexArray=t.vertexArray,this._count=t.count,this._offset=e(t.offset,0),this._instanceCount=e(t.instanceCount,0),this._shaderProgram=t.shaderProgram,this._uniformMap=t.uniformMap,this._renderState=t.renderState,this._framebuffer=t.framebuffer,this._pass=t.pass,this._executeInClosestFrustum=e(t.executeInClosestFrustum,!1),this._owner=t.owner,this._debugShowBoundingVolume=e(t.debugShowBoundingVolume,!1),this._debugOverlappingFrustums=0,this._castShadows=e(t.castShadows,!1),this._receiveShadows=e(t.receiveShadows,!1),this._pickId=t.pickId,this.dirty=!0,this.lastDirtyTime=0,this.derivedCommands={}}return n(a.prototype,{boundingVolume:{get:function(){return this._boundingVolume},set:function(e){this._boundingVolume!==e&&(this._boundingVolume=e,this.dirty=!0)}},orientedBoundingBox:{get:function(){return this._orientedBoundingBox},set:function(e){this._orientedBoundingBox!==e&&(this._orientedBoundingBox=e,this.dirty=!0)}},cull:{get:function(){return this._cull},set:function(e){this._cull!==e&&(this._cull=e,this.dirty=!0)}},modelMatrix:{get:function(){return this._modelMatrix},set:function(e){this._modelMatrix!==e&&(this._modelMatrix=e,this.dirty=!0)}},primitiveType:{get:function(){return this._primitiveType},set:function(e){this._primitiveType!==e&&(this._primitiveType=e,this.dirty=!0)}},vertexArray:{get:function(){return this._vertexArray},set:function(e){this._vertexArray!==e&&(this._vertexArray=e,this.dirty=!0)}},count:{get:function(){return this._count},set:function(e){this._count!==e&&(this._count=e,this.dirty=!0)}},offset:{get:function(){return this._offset},set:function(e){this._offset!==e&&(this._offset=e,this.dirty=!0)}},instanceCount:{get:function(){return this._instanceCount},set:function(e){this._instanceCount!==e&&(this._instanceCount=e,this.dirty=!0)}},shaderProgram:{get:function(){return this._shaderProgram},set:function(e){this._shaderProgram!==e&&(this._shaderProgram=e,this.dirty=!0)}},castShadows:{get:function(){return this._castShadows},set:function(e){this._castShadows!==e&&(this._castShadows=e,this.dirty=!0)}},receiveShadows:{get:function(){return this._receiveShadows},set:function(e){this._receiveShadows!==e&&(this._receiveShadows=e,this.dirty=!0)}},uniformMap:{get:function(){return this._uniformMap},set:function(e){this._uniformMap!==e&&(this._uniformMap=e,this.dirty=!0)}},renderState:{get:function(){return this._renderState},set:function(e){this._renderState!==e&&(this._renderState=e,this.dirty=!0)}},framebuffer:{get:function(){return this._framebuffer},set:function(e){this._framebuffer!==e&&(this._framebuffer=e,this.dirty=!0)}},pass:{get:function(){return this._pass},set:function(e){this._pass!==e&&(this._pass=e,this.dirty=!0)}},executeInClosestFrustum:{get:function(){return this._executeInClosestFrustum},set:function(e){this._executeInClosestFrustum!==e&&(this._executeInClosestFrustum=e,this.dirty=!0)}},owner:{get:function(){return this._owner},set:function(e){this._owner!==e&&(this._owner=e,this.dirty=!0)}},debugShowBoundingVolume:{get:function(){return this._debugShowBoundingVolume},set:function(e){this._debugShowBoundingVolume!==e&&(this._debugShowBoundingVolume=e,this.dirty=!0)}},debugOverlappingFrustums:{get:function(){return this._debugOverlappingFrustums},set:function(e){this._debugOverlappingFrustums!==e&&(this._debugOverlappingFrustums=e,this.dirty=!0)}},pickId:{get:function(){return this._pickId},set:function(e){this._pickId!==e&&(this._pickId=e,this.dirty=!0)}}}),a.shallowClone=function(e,n){if(t(e))return t(n)||(n=new a),n._boundingVolume=e._boundingVolume,n._orientedBoundingBox=e._orientedBoundingBox,n._cull=e._cull,n._modelMatrix=e._modelMatrix,n._primitiveType=e._primitiveType,n._vertexArray=e._vertexArray,n._count=e._count,n._offset=e._offset,n._instanceCount=e._instanceCount,n._shaderProgram=e._shaderProgram,n._uniformMap=e._uniformMap,n._renderState=e._renderState,n._framebuffer=e._framebuffer,n._pass=e._pass,n._executeInClosestFrustum=e._executeInClosestFrustum,n._owner=e._owner,n._debugShowBoundingVolume=e._debugShowBoundingVolume,n._debugOverlappingFrustums=e._debugOverlappingFrustums,n._castShadows=e._castShadows,n._receiveShadows=e._receiveShadows,n._pickId=e._pickId,n.dirty=!0,n.lastDirtyTime=0,n},a.prototype.execute=function(e,t){e.draw(this,t)},a}),define("Renderer/Pass",["../Core/freezeObject"],function(e){"use strict";return e({ENVIRONMENT:0,COMPUTE:1,GLOBE:2,TERRAIN_CLASSIFICATION:3,CESIUM_3D_TILE:4,CESIUM_3D_TILE_CLASSIFICATION:5,CESIUM_3D_TILE_CLASSIFICATION_IGNORE_SHOW:6,CLASSIFICATION:7,OPAQUE:8,TRANSLUCENT:9,OVERLAY:10,NUMBER_OF_PASSES:11})}),define("Core/BoundingRectangle",["./Cartesian2","./Cartographic","./Check","./defaultValue","./defined","./GeographicProjection","./Intersect","./Rectangle"],function(e,t,n,r,a,i,o,s){"use strict";function c(e,t,n,a){this.x=r(e,0),this.y=r(t,0),this.width=r(n,0),this.height=r(a,0)}c.packedLength=4,c.pack=function(e,t,n){return n=r(n,0),t[n++]=e.x,t[n++]=e.y,t[n++]=e.width,t[n]=e.height,t},c.unpack=function(e,t,n){return t=r(t,0),a(n)||(n=new c),n.x=e[t++],n.y=e[t++],n.width=e[t++],n.height=e[t],n},c.fromPoints=function(e,t){if(a(t)||(t=new c),!a(e)||0===e.length)return t.x=0,t.y=0,t.width=0,t.height=0,t;for(var n=e.length,r=e[0].x,i=e[0].y,o=e[0].x,s=e[0].y,u=1;u<n;u++){var l=e[u],d=l.x,f=l.y;r=Math.min(d,r),o=Math.max(d,o),i=Math.min(f,i),s=Math.max(f,s)}return t.x=r,t.y=i,t.width=o-r,t.height=s-i,t};var u=new i,l=new t,d=new t;return c.fromRectangle=function(t,n,i){if(a(i)||(i=new c),!a(t))return i.x=0,i.y=0,i.width=0,i.height=0,i;n=r(n,u);var o=n.project(s.southwest(t,l)),f=n.project(s.northeast(t,d));return e.subtract(f,o,f),i.x=o.x,i.y=o.y,i.width=f.x,i.height=f.y,i},c.clone=function(e,t){if(a(e))return a(t)?(t.x=e.x,t.y=e.y,t.width=e.width,t.height=e.height,t):new c(e.x,e.y,e.width,e.height)},c.union=function(e,t,n){a(n)||(n=new c);var r=Math.min(e.x,t.x),i=Math.min(e.y,t.y),o=Math.max(e.x+e.width,t.x+t.width),s=Math.max(e.y+e.height,t.y+t.height);return n.x=r,n.y=i,n.width=o-r,n.height=s-i,n},c.expand=function(e,t,n){n=c.clone(e,n);var r=t.x-n.x,a=t.y-n.y;return r>n.width?n.width=r:r<0&&(n.width-=r,n.x=t.x),a>n.height?n.height=a:a<0&&(n.height-=a,n.y=t.y),n},c.intersect=function(e,t){var n=e.x,r=e.y,a=t.x,i=t.y;return n>a+t.width||n+e.width<a||r+e.height<i||r>i+t.height?o.OUTSIDE:o.INTERSECTING},c.equals=function(e,t){return e===t||a(e)&&a(t)&&e.x===t.x&&e.y===t.y&&e.width===t.width&&e.height===t.height},c.prototype.clone=function(e){return c.clone(this,e)},c.prototype.intersect=function(e){return c.intersect(this,e)},c.prototype.equals=function(e){return c.equals(this,e)},c}),define("Core/Color",["./Check","./defaultValue","./defined","./FeatureDetection","./freezeObject","./Math"],function(e,t,n,r,a,i){"use strict";function o(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),6*n<1?e+6*(t-e)*n:2*n<1?t:3*n<2?e+(t-e)*(2/3-n)*6:e}function s(e,n,r,a){this.red=t(e,1),this.green=t(n,1),this.blue=t(r,1),this.alpha=t(a,1)}s.fromCartesian4=function(e,t){return n(t)?(t.red=e.x,t.green=e.y,t.blue=e.z,t.alpha=e.w,t):new s(e.x,e.y,e.z,e.w)},s.fromBytes=function(e,r,a,i,o){return e=s.byteToFloat(t(e,255)),r=s.byteToFloat(t(r,255)),a=s.byteToFloat(t(a,255)),i=s.byteToFloat(t(i,255)),n(o)?(o.red=e,o.green=r,o.blue=a,o.alpha=i,o):new s(e,r,a,i)},s.fromAlpha=function(e,t,r){return n(r)?(r.red=e.red,r.green=e.green,r.blue=e.blue,r.alpha=t,r):new s(e.red,e.green,e.blue,t)};var c,u,l;r.supportsTypedArrays()&&(c=new ArrayBuffer(4),u=new Uint32Array(c),l=new Uint8Array(c)),s.fromRgba=function(e,t){return u[0]=e,s.fromBytes(l[0],l[1],l[2],l[3],t)},s.fromHsl=function(e,r,a,i,c){e=t(e,0)%1,r=t(r,0),a=t(a,0),i=t(i,1);var u=a,l=a,d=a;if(0!==r){var f;f=a<.5?a*(1+r):a+r-a*r;var m=2*a-f;u=o(m,f,e+1/3),l=o(m,f,e),d=o(m,f,e-1/3)}return n(c)?(c.red=u,c.green=l,c.blue=d,c.alpha=i,c):new s(u,l,d,i)},s.fromRandom=function(e,r){e=t(e,t.EMPTY_OBJECT);var a=e.red;if(!n(a)){var o=t(e.minimumRed,0),c=t(e.maximumRed,1);a=o+i.nextRandomNumber()*(c-o)}var u=e.green;if(!n(u)){var l=t(e.minimumGreen,0),d=t(e.maximumGreen,1);u=l+i.nextRandomNumber()*(d-l)}var f=e.blue;if(!n(f)){var m=t(e.minimumBlue,0),p=t(e.maximumBlue,1);f=m+i.nextRandomNumber()*(p-m)}var h=e.alpha;if(!n(h)){var _=t(e.minimumAlpha,0),v=t(e.maximumAlpha,1);h=_+i.nextRandomNumber()*(v-_)}return n(r)?(r.red=a,r.green=u,r.blue=f,r.alpha=h,r):new s(a,u,f,h)};var d=/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i,f=/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i,m=/^rgba?\(\s*([0-9.]+%?)\s*,\s*([0-9.]+%?)\s*,\s*([0-9.]+%?)(?:\s*,\s*([0-9.]+))?\s*\)$/i,p=/^hsla?\(\s*([0-9.]+)\s*,\s*([0-9.]+%)\s*,\s*([0-9.]+%)(?:\s*,\s*([0-9.]+))?\s*\)$/i;return s.fromCssColorString=function(e,r){n(r)||(r=new s);var a=s[e.toUpperCase()];if(n(a))return s.clone(a,r),r;var i=d.exec(e);return null!==i?(r.red=parseInt(i[1],16)/15,r.green=parseInt(i[2],16)/15,r.blue=parseInt(i[3],16)/15,r.alpha=1,r):null!==(i=f.exec(e))?(r.red=parseInt(i[1],16)/255,r.green=parseInt(i[2],16)/255,r.blue=parseInt(i[3],16)/255,
r.alpha=1,r):null!==(i=m.exec(e))?(r.red=parseFloat(i[1])/("%"===i[1].substr(-1)?100:255),r.green=parseFloat(i[2])/("%"===i[2].substr(-1)?100:255),r.blue=parseFloat(i[3])/("%"===i[3].substr(-1)?100:255),r.alpha=parseFloat(t(i[4],"1.0")),r):null!==(i=p.exec(e))?s.fromHsl(parseFloat(i[1])/360,parseFloat(i[2])/100,parseFloat(i[3])/100,parseFloat(t(i[4],"1.0")),r):r=void 0},s.packedLength=4,s.pack=function(e,n,r){return r=t(r,0),n[r++]=e.red,n[r++]=e.green,n[r++]=e.blue,n[r]=e.alpha,n},s.unpack=function(e,r,a){return r=t(r,0),n(a)||(a=new s),a.red=e[r++],a.green=e[r++],a.blue=e[r++],a.alpha=e[r],a},s.byteToFloat=function(e){return e/255},s.floatToByte=function(e){return 1===e?255:256*e|0},s.clone=function(e,t){if(n(e))return n(t)?(t.red=e.red,t.green=e.green,t.blue=e.blue,t.alpha=e.alpha,t):new s(e.red,e.green,e.blue,e.alpha)},s.equals=function(e,t){return e===t||n(e)&&n(t)&&e.red===t.red&&e.green===t.green&&e.blue===t.blue&&e.alpha===t.alpha},s.equalsArray=function(e,t,n){return e.red===t[n]&&e.green===t[n+1]&&e.blue===t[n+2]&&e.alpha===t[n+3]},s.prototype.clone=function(e){return s.clone(this,e)},s.prototype.equals=function(e){return s.equals(this,e)},s.prototype.equalsEpsilon=function(e,t){return this===e||n(e)&&Math.abs(this.red-e.red)<=t&&Math.abs(this.green-e.green)<=t&&Math.abs(this.blue-e.blue)<=t&&Math.abs(this.alpha-e.alpha)<=t},s.prototype.toString=function(){return"("+this.red+", "+this.green+", "+this.blue+", "+this.alpha+")"},s.prototype.toCssColorString=function(){var e=s.floatToByte(this.red),t=s.floatToByte(this.green),n=s.floatToByte(this.blue);return 1===this.alpha?"rgb("+e+","+t+","+n+")":"rgba("+e+","+t+","+n+","+this.alpha+")"},s.prototype.toBytes=function(e){var t=s.floatToByte(this.red),r=s.floatToByte(this.green),a=s.floatToByte(this.blue),i=s.floatToByte(this.alpha);return n(e)?(e[0]=t,e[1]=r,e[2]=a,e[3]=i,e):[t,r,a,i]},s.prototype.toRgba=function(){return l[0]=s.floatToByte(this.red),l[1]=s.floatToByte(this.green),l[2]=s.floatToByte(this.blue),l[3]=s.floatToByte(this.alpha),u[0]},s.prototype.brighten=function(e,t){return e=1-e,t.red=1-(1-this.red)*e,t.green=1-(1-this.green)*e,t.blue=1-(1-this.blue)*e,t.alpha=this.alpha,t},s.prototype.darken=function(e,t){return e=1-e,t.red=this.red*e,t.green=this.green*e,t.blue=this.blue*e,t.alpha=this.alpha,t},s.prototype.withAlpha=function(e,t){return s.fromAlpha(this,e,t)},s.add=function(e,t,n){return n.red=e.red+t.red,n.green=e.green+t.green,n.blue=e.blue+t.blue,n.alpha=e.alpha+t.alpha,n},s.subtract=function(e,t,n){return n.red=e.red-t.red,n.green=e.green-t.green,n.blue=e.blue-t.blue,n.alpha=e.alpha-t.alpha,n},s.multiply=function(e,t,n){return n.red=e.red*t.red,n.green=e.green*t.green,n.blue=e.blue*t.blue,n.alpha=e.alpha*t.alpha,n},s.divide=function(e,t,n){return n.red=e.red/t.red,n.green=e.green/t.green,n.blue=e.blue/t.blue,n.alpha=e.alpha/t.alpha,n},s.mod=function(e,t,n){return n.red=e.red%t.red,n.green=e.green%t.green,n.blue=e.blue%t.blue,n.alpha=e.alpha%t.alpha,n},s.multiplyByScalar=function(e,t,n){return n.red=e.red*t,n.green=e.green*t,n.blue=e.blue*t,n.alpha=e.alpha*t,n},s.divideByScalar=function(e,t,n){return n.red=e.red/t,n.green=e.green/t,n.blue=e.blue/t,n.alpha=e.alpha/t,n},s.ALICEBLUE=a(s.fromCssColorString("#F0F8FF")),s.ANTIQUEWHITE=a(s.fromCssColorString("#FAEBD7")),s.AQUA=a(s.fromCssColorString("#00FFFF")),s.AQUAMARINE=a(s.fromCssColorString("#7FFFD4")),s.AZURE=a(s.fromCssColorString("#F0FFFF")),s.BEIGE=a(s.fromCssColorString("#F5F5DC")),s.BISQUE=a(s.fromCssColorString("#FFE4C4")),s.BLACK=a(s.fromCssColorString("#000000")),s.BLANCHEDALMOND=a(s.fromCssColorString("#FFEBCD")),s.BLUE=a(s.fromCssColorString("#0000FF")),s.BLUEVIOLET=a(s.fromCssColorString("#8A2BE2")),s.BROWN=a(s.fromCssColorString("#A52A2A")),s.BURLYWOOD=a(s.fromCssColorString("#DEB887")),s.CADETBLUE=a(s.fromCssColorString("#5F9EA0")),s.CHARTREUSE=a(s.fromCssColorString("#7FFF00")),s.CHOCOLATE=a(s.fromCssColorString("#D2691E")),s.CORAL=a(s.fromCssColorString("#FF7F50")),s.CORNFLOWERBLUE=a(s.fromCssColorString("#6495ED")),s.CORNSILK=a(s.fromCssColorString("#FFF8DC")),s.CRIMSON=a(s.fromCssColorString("#DC143C")),s.CYAN=a(s.fromCssColorString("#00FFFF")),s.DARKBLUE=a(s.fromCssColorString("#00008B")),s.DARKCYAN=a(s.fromCssColorString("#008B8B")),s.DARKGOLDENROD=a(s.fromCssColorString("#B8860B")),s.DARKGRAY=a(s.fromCssColorString("#A9A9A9")),s.DARKGREEN=a(s.fromCssColorString("#006400")),s.DARKGREY=s.DARKGRAY,s.DARKKHAKI=a(s.fromCssColorString("#BDB76B")),s.DARKMAGENTA=a(s.fromCssColorString("#8B008B")),s.DARKOLIVEGREEN=a(s.fromCssColorString("#556B2F")),s.DARKORANGE=a(s.fromCssColorString("#FF8C00")),s.DARKORCHID=a(s.fromCssColorString("#9932CC")),s.DARKRED=a(s.fromCssColorString("#8B0000")),s.DARKSALMON=a(s.fromCssColorString("#E9967A")),s.DARKSEAGREEN=a(s.fromCssColorString("#8FBC8F")),s.DARKSLATEBLUE=a(s.fromCssColorString("#483D8B")),s.DARKSLATEGRAY=a(s.fromCssColorString("#2F4F4F")),s.DARKSLATEGREY=s.DARKSLATEGRAY,s.DARKTURQUOISE=a(s.fromCssColorString("#00CED1")),s.DARKVIOLET=a(s.fromCssColorString("#9400D3")),s.DEEPPINK=a(s.fromCssColorString("#FF1493")),s.DEEPSKYBLUE=a(s.fromCssColorString("#00BFFF")),s.DIMGRAY=a(s.fromCssColorString("#696969")),s.DIMGREY=s.DIMGRAY,s.DODGERBLUE=a(s.fromCssColorString("#1E90FF")),s.FIREBRICK=a(s.fromCssColorString("#B22222")),s.FLORALWHITE=a(s.fromCssColorString("#FFFAF0")),s.FORESTGREEN=a(s.fromCssColorString("#228B22")),s.FUCHSIA=a(s.fromCssColorString("#FF00FF")),s.GAINSBORO=a(s.fromCssColorString("#DCDCDC")),s.GHOSTWHITE=a(s.fromCssColorString("#F8F8FF")),s.GOLD=a(s.fromCssColorString("#FFD700")),s.GOLDENROD=a(s.fromCssColorString("#DAA520")),s.GRAY=a(s.fromCssColorString("#808080")),s.GREEN=a(s.fromCssColorString("#008000")),s.GREENYELLOW=a(s.fromCssColorString("#ADFF2F")),s.GREY=s.GRAY,s.HONEYDEW=a(s.fromCssColorString("#F0FFF0")),s.HOTPINK=a(s.fromCssColorString("#FF69B4")),s.INDIANRED=a(s.fromCssColorString("#CD5C5C")),s.INDIGO=a(s.fromCssColorString("#4B0082")),s.IVORY=a(s.fromCssColorString("#FFFFF0")),s.KHAKI=a(s.fromCssColorString("#F0E68C")),s.LAVENDER=a(s.fromCssColorString("#E6E6FA")),s.LAVENDAR_BLUSH=a(s.fromCssColorString("#FFF0F5")),s.LAWNGREEN=a(s.fromCssColorString("#7CFC00")),s.LEMONCHIFFON=a(s.fromCssColorString("#FFFACD")),s.LIGHTBLUE=a(s.fromCssColorString("#ADD8E6")),s.LIGHTCORAL=a(s.fromCssColorString("#F08080")),s.LIGHTCYAN=a(s.fromCssColorString("#E0FFFF")),s.LIGHTGOLDENRODYELLOW=a(s.fromCssColorString("#FAFAD2")),s.LIGHTGRAY=a(s.fromCssColorString("#D3D3D3")),s.LIGHTGREEN=a(s.fromCssColorString("#90EE90")),s.LIGHTGREY=s.LIGHTGRAY,s.LIGHTPINK=a(s.fromCssColorString("#FFB6C1")),s.LIGHTSEAGREEN=a(s.fromCssColorString("#20B2AA")),s.LIGHTSKYBLUE=a(s.fromCssColorString("#87CEFA")),s.LIGHTSLATEGRAY=a(s.fromCssColorString("#778899")),s.LIGHTSLATEGREY=s.LIGHTSLATEGRAY,s.LIGHTSTEELBLUE=a(s.fromCssColorString("#B0C4DE")),s.LIGHTYELLOW=a(s.fromCssColorString("#FFFFE0")),s.LIME=a(s.fromCssColorString("#00FF00")),s.LIMEGREEN=a(s.fromCssColorString("#32CD32")),s.LINEN=a(s.fromCssColorString("#FAF0E6")),s.MAGENTA=a(s.fromCssColorString("#FF00FF")),s.MAROON=a(s.fromCssColorString("#800000")),s.MEDIUMAQUAMARINE=a(s.fromCssColorString("#66CDAA")),s.MEDIUMBLUE=a(s.fromCssColorString("#0000CD")),s.MEDIUMORCHID=a(s.fromCssColorString("#BA55D3")),s.MEDIUMPURPLE=a(s.fromCssColorString("#9370DB")),s.MEDIUMSEAGREEN=a(s.fromCssColorString("#3CB371")),s.MEDIUMSLATEBLUE=a(s.fromCssColorString("#7B68EE")),s.MEDIUMSPRINGGREEN=a(s.fromCssColorString("#00FA9A")),s.MEDIUMTURQUOISE=a(s.fromCssColorString("#48D1CC")),s.MEDIUMVIOLETRED=a(s.fromCssColorString("#C71585")),s.MIDNIGHTBLUE=a(s.fromCssColorString("#191970")),s.MINTCREAM=a(s.fromCssColorString("#F5FFFA")),s.MISTYROSE=a(s.fromCssColorString("#FFE4E1")),s.MOCCASIN=a(s.fromCssColorString("#FFE4B5")),s.NAVAJOWHITE=a(s.fromCssColorString("#FFDEAD")),s.NAVY=a(s.fromCssColorString("#000080")),s.OLDLACE=a(s.fromCssColorString("#FDF5E6")),s.OLIVE=a(s.fromCssColorString("#808000")),s.OLIVEDRAB=a(s.fromCssColorString("#6B8E23")),s.ORANGE=a(s.fromCssColorString("#FFA500")),s.ORANGERED=a(s.fromCssColorString("#FF4500")),s.ORCHID=a(s.fromCssColorString("#DA70D6")),s.PALEGOLDENROD=a(s.fromCssColorString("#EEE8AA")),s.PALEGREEN=a(s.fromCssColorString("#98FB98")),s.PALETURQUOISE=a(s.fromCssColorString("#AFEEEE")),s.PALEVIOLETRED=a(s.fromCssColorString("#DB7093")),s.PAPAYAWHIP=a(s.fromCssColorString("#FFEFD5")),s.PEACHPUFF=a(s.fromCssColorString("#FFDAB9")),s.PERU=a(s.fromCssColorString("#CD853F")),s.PINK=a(s.fromCssColorString("#FFC0CB")),s.PLUM=a(s.fromCssColorString("#DDA0DD")),s.POWDERBLUE=a(s.fromCssColorString("#B0E0E6")),s.PURPLE=a(s.fromCssColorString("#800080")),s.RED=a(s.fromCssColorString("#FF0000")),s.ROSYBROWN=a(s.fromCssColorString("#BC8F8F")),s.ROYALBLUE=a(s.fromCssColorString("#4169E1")),s.SADDLEBROWN=a(s.fromCssColorString("#8B4513")),s.SALMON=a(s.fromCssColorString("#FA8072")),s.SANDYBROWN=a(s.fromCssColorString("#F4A460")),s.SEAGREEN=a(s.fromCssColorString("#2E8B57")),s.SEASHELL=a(s.fromCssColorString("#FFF5EE")),s.SIENNA=a(s.fromCssColorString("#A0522D")),s.SILVER=a(s.fromCssColorString("#C0C0C0")),s.SKYBLUE=a(s.fromCssColorString("#87CEEB")),s.SLATEBLUE=a(s.fromCssColorString("#6A5ACD")),s.SLATEGRAY=a(s.fromCssColorString("#708090")),s.SLATEGREY=s.SLATEGRAY,s.SNOW=a(s.fromCssColorString("#FFFAFA")),s.SPRINGGREEN=a(s.fromCssColorString("#00FF7F")),s.STEELBLUE=a(s.fromCssColorString("#4682B4")),s.TAN=a(s.fromCssColorString("#D2B48C")),s.TEAL=a(s.fromCssColorString("#008080")),s.THISTLE=a(s.fromCssColorString("#D8BFD8")),s.TOMATO=a(s.fromCssColorString("#FF6347")),s.TURQUOISE=a(s.fromCssColorString("#40E0D0")),s.VIOLET=a(s.fromCssColorString("#EE82EE")),s.WHEAT=a(s.fromCssColorString("#F5DEB3")),s.WHITE=a(s.fromCssColorString("#FFFFFF")),s.WHITESMOKE=a(s.fromCssColorString("#F5F5F5")),s.YELLOW=a(s.fromCssColorString("#FFFF00")),s.YELLOWGREEN=a(s.fromCssColorString("#9ACD32")),s.TRANSPARENT=a(new s(0,0,0,0)),s}),define("Core/WindingOrder",["./freezeObject","./WebGLConstants"],function(e,t){"use strict";var n={CLOCKWISE:t.CW,COUNTER_CLOCKWISE:t.CCW,validate:function(e){return e===n.CLOCKWISE||e===n.COUNTER_CLOCKWISE}};return e(n)}),define("Renderer/ContextLimits",["../Core/defineProperties"],function(e){"use strict";var t={_maximumCombinedTextureImageUnits:0,_maximumCubeMapSize:0,_maximumFragmentUniformVectors:0,_maximumTextureImageUnits:0,_maximumRenderbufferSize:0,_maximumTextureSize:0,_maximumVaryingVectors:0,_maximumVertexAttributes:0,_maximumVertexTextureImageUnits:0,_maximumVertexUniformVectors:0,_minimumAliasedLineWidth:0,_maximumAliasedLineWidth:0,_minimumAliasedPointSize:0,_maximumAliasedPointSize:0,_maximumViewportWidth:0,_maximumViewportHeight:0,_maximumTextureFilterAnisotropy:0,_maximumDrawBuffers:0,_maximumColorAttachments:0,_highpFloatSupported:!1,_highpIntSupported:!1};return e(t,{maximumCombinedTextureImageUnits:{get:function(){return t._maximumCombinedTextureImageUnits}},maximumCubeMapSize:{get:function(){return t._maximumCubeMapSize}},maximumFragmentUniformVectors:{get:function(){return t._maximumFragmentUniformVectors}},maximumTextureImageUnits:{get:function(){return t._maximumTextureImageUnits}},maximumRenderbufferSize:{get:function(){return t._maximumRenderbufferSize}},maximumTextureSize:{get:function(){return t._maximumTextureSize}},maximumVaryingVectors:{get:function(){return t._maximumVaryingVectors}},maximumVertexAttributes:{get:function(){return t._maximumVertexAttributes}},maximumVertexTextureImageUnits:{get:function(){return t._maximumVertexTextureImageUnits}},maximumVertexUniformVectors:{get:function(){return t._maximumVertexUniformVectors}},minimumAliasedLineWidth:{get:function(){return t._minimumAliasedLineWidth}},maximumAliasedLineWidth:{get:function(){return t._maximumAliasedLineWidth}},minimumAliasedPointSize:{get:function(){return t._minimumAliasedPointSize}},maximumAliasedPointSize:{get:function(){return t._maximumAliasedPointSize}},maximumViewportWidth:{get:function(){return t._maximumViewportWidth}},maximumViewportHeight:{get:function(){return t._maximumViewportHeight}},maximumTextureFilterAnisotropy:{get:function(){return t._maximumTextureFilterAnisotropy}},maximumDrawBuffers:{get:function(){return t._maximumDrawBuffers}},maximumColorAttachments:{get:function(){return t._maximumColorAttachments}},highpFloatSupported:{get:function(){return t._highpFloatSupported}},highpIntSupported:{get:function(){return t._highpIntSupported}}}),t}),define("Renderer/freezeRenderState",["../Core/freezeObject"],function(e){"use strict";function t(n){if("object"!=typeof n||null===n)return n;for(var r,a=Object.keys(n),i=0;i<a.length;i++)r=a[i],n.hasOwnProperty(r)&&"_applyFunctions"!==r&&(n[r]=t(n[r]));return e(n)}return t}),define("Renderer/RenderState",["../Core/BoundingRectangle","../Core/Color","../Core/defaultValue","../Core/defined","../Core/DeveloperError","../Core/WebGLConstants","../Core/WindingOrder","./ContextLimits","./freezeRenderState"],function(e,t,n,r,a,i,o,s,c){"use strict";function u(a){var s=n(a,{}),c=n(s.cull,{}),u=n(s.polygonOffset,{}),l=n(s.scissorTest,{}),d=n(l.rectangle,{}),f=n(s.depthRange,{}),m=n(s.depthTest,{}),p=n(s.colorMask,{}),h=n(s.blending,{}),_=n(h.color,{}),v=n(s.stencilTest,{}),g=n(v.frontOperation,{}),y=n(v.backOperation,{}),E=n(s.sampleCoverage,{}),T=s.viewport;this.frontFace=n(s.frontFace,o.COUNTER_CLOCKWISE),this.cull={enabled:n(c.enabled,!1),face:n(c.face,i.BACK)},this.lineWidth=n(s.lineWidth,1),this.polygonOffset={enabled:n(u.enabled,!1),factor:n(u.factor,0),units:n(u.units,0)},this.scissorTest={enabled:n(l.enabled,!1),rectangle:e.clone(d)},this.depthRange={near:n(f.near,0),far:n(f.far,1)},this.depthTest={enabled:n(m.enabled,!1),func:n(m.func,i.LESS)},this.colorMask={red:n(p.red,!0),green:n(p.green,!0),blue:n(p.blue,!0),alpha:n(p.alpha,!0)},this.depthMask=n(s.depthMask,!0),this.stencilMask=n(s.stencilMask,-1),this.blending={enabled:n(h.enabled,!1),color:new t(n(_.red,0),n(_.green,0),n(_.blue,0),n(_.alpha,0)),equationRgb:n(h.equationRgb,i.FUNC_ADD),equationAlpha:n(h.equationAlpha,i.FUNC_ADD),functionSourceRgb:n(h.functionSourceRgb,i.ONE),functionSourceAlpha:n(h.functionSourceAlpha,i.ONE),functionDestinationRgb:n(h.functionDestinationRgb,i.ZERO),functionDestinationAlpha:n(h.functionDestinationAlpha,i.ZERO)},this.stencilTest={enabled:n(v.enabled,!1),frontFunction:n(v.frontFunction,i.ALWAYS),backFunction:n(v.backFunction,i.ALWAYS),reference:n(v.reference,0),mask:n(v.mask,-1),frontOperation:{fail:n(g.fail,i.KEEP),zFail:n(g.zFail,i.KEEP),zPass:n(g.zPass,i.KEEP)},backOperation:{fail:n(y.fail,i.KEEP),zFail:n(y.zFail,i.KEEP),zPass:n(y.zPass,i.KEEP)}},this.sampleCoverage={enabled:n(E.enabled,!1),value:n(E.value,1),invert:n(E.invert,!1)},this.viewport=r(T)?new e(T.x,T.y,T.width,T.height):void 0,this.id=0,this._applyFunctions=[]}function l(e,t,n){n?e.enable(t):e.disable(t)}function d(e,t){e.frontFace(t.frontFace)}function f(e,t){var n=t.cull,r=n.enabled;l(e,e.CULL_FACE,r),r&&e.cullFace(n.face)}function m(e,t){e.lineWidth(t.lineWidth)}function p(e,t){var n=t.polygonOffset,r=n.enabled;l(e,e.POLYGON_OFFSET_FILL,r),r&&e.polygonOffset(n.factor,n.units)}function h(e,t,n){var a=t.scissorTest,i=r(n.scissorTest)?n.scissorTest.enabled:a.enabled;if(l(e,e.SCISSOR_TEST,i),i){var o=r(n.scissorTest)?n.scissorTest.rectangle:a.rectangle;e.scissor(o.x,o.y,o.width,o.height)}}function _(e,t){var n=t.depthRange;e.depthRange(n.near,n.far)}function v(e,t){var n=t.depthTest,r=n.enabled;l(e,e.DEPTH_TEST,r),r&&e.depthFunc(n.func)}function g(e,t){var n=t.colorMask;e.colorMask(n.red,n.green,n.blue,n.alpha)}function y(e,t){e.depthMask(t.depthMask)}function E(e,t){e.stencilMask(t.stencilMask)}function T(e,t){e.blendColor(t.red,t.green,t.blue,t.alpha)}function C(e,t,n){var a=t.blending,i=r(n.blendingEnabled)?n.blendingEnabled:a.enabled;l(e,e.BLEND,i),i&&(T(e,a.color),e.blendEquationSeparate(a.equationRgb,a.equationAlpha),e.blendFuncSeparate(a.functionSourceRgb,a.functionDestinationRgb,a.functionSourceAlpha,a.functionDestinationAlpha))}function S(e,t){var n=t.stencilTest,r=n.enabled;if(l(e,e.STENCIL_TEST,r),r){var a=n.frontFunction,i=n.backFunction,o=n.reference,s=n.mask;e.stencilFunc(a,o,s),e.stencilFuncSeparate(e.BACK,i,o,s),e.stencilFuncSeparate(e.FRONT,a,o,s);var c=n.frontOperation,u=c.fail,d=c.zFail,f=c.zPass;e.stencilOpSeparate(e.FRONT,u,d,f);var m=n.backOperation,p=m.fail,h=m.zFail,_=m.zPass;e.stencilOpSeparate(e.BACK,p,h,_)}}function A(e,t){var n=t.sampleCoverage,r=n.enabled;l(e,e.SAMPLE_COVERAGE,r),r&&e.sampleCoverage(n.value,n.invert)}function x(e,t,a){var i=n(t.viewport,a.viewport);r(i)||(i=I,i.width=a.context.drawingBufferWidth,i.height=a.context.drawingBufferHeight),a.context.uniformState.viewport=i,e.viewport(i.x,i.y,i.width,i.height)}function w(e,t){var n=[];return e.frontFace!==t.frontFace&&n.push(d),e.cull.enabled===t.cull.enabled&&e.cull.face===t.cull.face||n.push(f),e.lineWidth!==t.lineWidth&&n.push(m),e.polygonOffset.enabled===t.polygonOffset.enabled&&e.polygonOffset.factor===t.polygonOffset.factor&&e.polygonOffset.units===t.polygonOffset.units||n.push(p),e.depthRange.near===t.depthRange.near&&e.depthRange.far===t.depthRange.far||n.push(_),e.depthTest.enabled===t.depthTest.enabled&&e.depthTest.func===t.depthTest.func||n.push(v),e.colorMask.red===t.colorMask.red&&e.colorMask.green===t.colorMask.green&&e.colorMask.blue===t.colorMask.blue&&e.colorMask.alpha===t.colorMask.alpha||n.push(g),e.depthMask!==t.depthMask&&n.push(y),e.stencilMask!==t.stencilMask&&n.push(E),e.stencilTest.enabled===t.stencilTest.enabled&&e.stencilTest.frontFunction===t.stencilTest.frontFunction&&e.stencilTest.backFunction===t.stencilTest.backFunction&&e.stencilTest.reference===t.stencilTest.reference&&e.stencilTest.mask===t.stencilTest.mask&&e.stencilTest.frontOperation.fail===t.stencilTest.frontOperation.fail&&e.stencilTest.frontOperation.zFail===t.stencilTest.frontOperation.zFail&&e.stencilTest.backOperation.fail===t.stencilTest.backOperation.fail&&e.stencilTest.backOperation.zFail===t.stencilTest.backOperation.zFail&&e.stencilTest.backOperation.zPass===t.stencilTest.backOperation.zPass||n.push(S),e.sampleCoverage.enabled===t.sampleCoverage.enabled&&e.sampleCoverage.value===t.sampleCoverage.value&&e.sampleCoverage.invert===t.sampleCoverage.invert||n.push(A),n}var b=0,R={};u.fromCache=function(e){var t=JSON.stringify(e),n=R[t];if(r(n))return++n.referenceCount,n.state;var a=new u(e),i=JSON.stringify(a);return n=R[i],r(n)||(a.id=b++,n={referenceCount:0,state:a},R[i]=n),++n.referenceCount,R[t]={referenceCount:1,state:n.state},n.state},u.removeFromCache=function(e){var t=new u(e),n=JSON.stringify(t),a=R[n],i=JSON.stringify(e),o=R[i];r(o)&&0===--o.referenceCount&&(delete R[i],r(a)&&--a.referenceCount),r(a)&&0===a.referenceCount&&delete R[n]},u.getCache=function(){return R},u.clearCache=function(){R={}};var I=new e;return u.apply=function(e,t,n){d(e,t),f(e,t),m(e,t),p(e,t),_(e,t),v(e,t),g(e,t),y(e,t),E(e,t),S(e,t),A(e,t),h(e,t,n),C(e,t,n),x(e,t,n)},u.partialApply=function(e,t,n,a,i,o){if(t!==n){var s=n._applyFunctions[t.id];r(s)||(s=w(t,n),n._applyFunctions[t.id]=s);for(var c=s.length,u=0;u<c;++u)s[u](e,n)}((r(a.scissorTest)?a.scissorTest:t.scissorTest)!==(r(i.scissorTest)?i.scissorTest:n.scissorTest)||o)&&h(e,n,i);var l=r(a.blendingEnabled)?a.blendingEnabled:t.blending.enabled,d=r(i.blendingEnabled)?i.blendingEnabled:n.blending.enabled;(l!==d||d&&t.blending!==n.blending)&&C(e,n,i),t===n&&a===i&&a.context===i.context||x(e,n,i)},u.getState=function(n){return{frontFace:n.frontFace,cull:{enabled:n.cull.enabled,face:n.cull.face},lineWidth:n.lineWidth,polygonOffset:{enabled:n.polygonOffset.enabled,factor:n.polygonOffset.factor,units:n.polygonOffset.units},scissorTest:{enabled:n.scissorTest.enabled,rectangle:e.clone(n.scissorTest.rectangle)},depthRange:{near:n.depthRange.near,far:n.depthRange.far},depthTest:{enabled:n.depthTest.enabled,func:n.depthTest.func},colorMask:{red:n.colorMask.red,green:n.colorMask.green,blue:n.colorMask.blue,alpha:n.colorMask.alpha},depthMask:n.depthMask,stencilMask:n.stencilMask,blending:{enabled:n.blending.enabled,color:t.clone(n.blending.color),equationRgb:n.blending.equationRgb,equationAlpha:n.blending.equationAlpha,functionSourceRgb:n.blending.functionSourceRgb,functionSourceAlpha:n.blending.functionSourceAlpha,functionDestinationRgb:n.blending.functionDestinationRgb,functionDestinationAlpha:n.blending.functionDestinationAlpha},stencilTest:{enabled:n.stencilTest.enabled,frontFunction:n.stencilTest.frontFunction,backFunction:n.stencilTest.backFunction,reference:n.stencilTest.reference,mask:n.stencilTest.mask,frontOperation:{fail:n.stencilTest.frontOperation.fail,zFail:n.stencilTest.frontOperation.zFail,zPass:n.stencilTest.frontOperation.zPass},backOperation:{fail:n.stencilTest.backOperation.fail,zFail:n.stencilTest.backOperation.zFail,zPass:n.stencilTest.backOperation.zPass}},sampleCoverage:{enabled:n.sampleCoverage.enabled,value:n.sampleCoverage.value,invert:n.sampleCoverage.invert},viewport:r(n.viewport)?e.clone(n.viewport):void 0}},u}),define("Renderer/AutomaticUniforms",["../Core/Cartesian3","../Core/Math","../Core/Matrix4","../Core/WebGLConstants"],function(e,t,n,r){"use strict";function a(e){this._size=e.size,this._datatype=e.datatype,this.getValue=e.getValue}var i=new e;if("undefined"==typeof WebGLRenderingContext)return{};var o={};return o[r.FLOAT]="float",o[r.FLOAT_VEC2]="vec2",o[r.FLOAT_VEC3]="vec3",o[r.FLOAT_VEC4]="vec4",o[r.INT]="int",o[r.INT_VEC2]="ivec2",o[r.INT_VEC3]="ivec3",o[r.INT_VEC4]="ivec4",o[r.BOOL]="bool",o[r.BOOL_VEC2]="bvec2",o[r.BOOL_VEC3]="bvec3",o[r.BOOL_VEC4]="bvec4",o[r.FLOAT_MAT2]="mat2",o[r.FLOAT_MAT3]="mat3",o[r.FLOAT_MAT4]="mat4",o[r.SAMPLER_2D]="sampler2D",o[r.SAMPLER_CUBE]="samplerCube",a.prototype.getDeclaration=function(e){var t="uniform "+o[this._datatype]+" "+e,n=this._size;return t+=1===n?";":"["+n.toString()+"];"},{czm_viewport:new a({size:1,datatype:r.FLOAT_VEC4,getValue:function(e){return e.viewportCartesian4}}),czm_viewportOrthographic:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.viewportOrthographic}}),czm_viewportTransformation:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.viewportTransformation}}),czm_globeDepthTexture:new a({size:1,datatype:r.SAMPLER_2D,getValue:function(e){return e.globeDepthTexture}}),czm_model:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.model}}),czm_inverseModel:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.inverseModel}}),czm_view:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.view}}),czm_view3D:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.view3D}}),czm_viewRotation:new a({size:1,datatype:r.FLOAT_MAT3,getValue:function(e){return e.viewRotation}}),czm_viewRotation3D:new a({size:1,datatype:r.FLOAT_MAT3,getValue:function(e){return e.viewRotation3D}}),czm_inverseView:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.inverseView}}),czm_inverseView3D:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.inverseView3D}}),czm_inverseViewRotation:new a({size:1,datatype:r.FLOAT_MAT3,getValue:function(e){return e.inverseViewRotation}}),czm_inverseViewRotation3D:new a({size:1,datatype:r.FLOAT_MAT3,getValue:function(e){return e.inverseViewRotation3D}}),czm_projection:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.projection}}),czm_inverseProjection:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.inverseProjection}}),czm_infiniteProjection:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.infiniteProjection}}),czm_modelView:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.modelView}}),czm_modelView3D:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.modelView3D}}),czm_modelViewRelativeToEye:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.modelViewRelativeToEye}}),czm_inverseModelView:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.inverseModelView}}),czm_inverseModelView3D:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.inverseModelView3D}}),czm_viewProjection:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.viewProjection}}),czm_inverseViewProjection:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.inverseViewProjection}}),czm_modelViewProjection:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.modelViewProjection}}),czm_inverseModelViewProjection:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.inverseModelViewProjection}}),czm_modelViewProjectionRelativeToEye:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.modelViewProjectionRelativeToEye}}),czm_modelViewInfiniteProjection:new a({size:1,datatype:r.FLOAT_MAT4,getValue:function(e){return e.modelViewInfiniteProjection}}),czm_orthographicIn3D:new a({size:1,datatype:r.FLOAT,getValue:function(e){return e.orthographicIn3D?1:0}}),czm_normal:new a({size:1,datatype:r.FLOAT_MAT3,getValue:function(e){return e.normal}}),czm_normal3D:new a({size:1,datatype:r.FLOAT_MAT3,getValue:function(e){return e.normal3D}}),czm_inverseNormal:new a({size:1,datatype:r.FLOAT_MAT3,getValue:function(e){return e.inverseNormal}}),czm_inverseNormal3D:new a({size:1,datatype:r.FLOAT_MAT3,getValue:function(e){return e.inverseNormal3D}}),czm_eyeHeight2D:new a({size:1,datatype:r.FLOAT_VEC2,getValue:function(e){return e.eyeHeight2D}}),czm_entireFrustum:new a({size:1,datatype:r.FLOAT_VEC2,getValue:function(e){return e.entireFrustum}}),czm_currentFrustum:new a({size:1,datatype:r.FLOAT_VEC2,getValue:function(e){return e.currentFrustum}}),czm_frustumPlanes:new a({size:1,datatype:r.FLOAT_VEC4,getValue:function(e){return e.frustumPlanes}}),czm_log2FarDistance:new a({size:1,datatype:r.FLOAT,getValue:function(e){return e.log2FarDistance}}),czm_log2FarPlusOne:new a({size:1,datatype:r.FLOAT,getValue:function(e){return e.log2FarPlusOne}}),czm_log2NearDistance:new a({size:1,datatype:r.FLOAT,getValue:function(e){return e.log2NearDistance}}),czm_sunPositionWC:new a({size:1,datatype:r.FLOAT_VEC3,getValue:function(e){return e.sunPositionWC}}),czm_sunPositionColumbusView:new a({size:1,datatype:r.FLOAT_VEC3,getValue:function(e){return e.sunPositionColumbusView}}),czm_sunDirectionEC:new a({size:1,datatype:r.FLOAT_VEC3,getValue:function(e){return e.sunDirectionEC}}),czm_sunDirectionWC:new a({size:1,datatype:r.FLOAT_VEC3,getValue:function(e){return e.sunDirectionWC}}),czm_moonDirectionEC:new a({size:1,datatype:r.FLOAT_VEC3,getValue:function(e){return e.moonDirectionEC}}),czm_encodedCameraPositionMCHigh:new a({size:1,datatype:r.FLOAT_VEC3,getValue:function(e){return e.encodedCameraPositionMCHigh}}),czm_encodedCameraPositionMCLow:new a({size:1,datatype:r.FLOAT_VEC3,getValue:function(e){return e.encodedCameraPositionMCLow}}),czm_viewerPositionWC:new a({size:1,datatype:r.FLOAT_VEC3,getValue:function(e){return n.getTranslation(e.inverseView,i)}}),czm_frameNumber:new a({size:1,datatype:r.FLOAT,getValue:function(e){return e.frameState.frameNumber}}),czm_morphTime:new a({size:1,datatype:r.FLOAT,getValue:function(e){return e.frameState.morphTime}}),czm_sceneMode:new a({size:1,datatype:r.FLOAT,getValue:function(e){return e.frameState.mode}}),czm_pass:new a({size:1,datatype:r.FLOAT,getValue:function(e){return e.pass}}),czm_backgroundColor:new a({size:1,datatype:r.FLOAT_VEC4,getValue:function(e){return e.backgroundColor}}),czm_brdfLut:new a({size:1,datatype:r.SAMPLER_2D,getValue:function(e){return e.brdfLut}}),czm_environmentMap:new a({size:1,datatype:r.SAMPLER_CUBE,getValue:function(e){return e.environmentMap}}),czm_temeToPseudoFixed:new a({size:1,datatype:r.FLOAT_MAT3,getValue:function(e){return e.temeToPseudoFixedMatrix}}),czm_resolutionScale:new a({size:1,datatype:r.FLOAT,getValue:function(e){return e.resolutionScale}}),czm_fogDensity:new a({size:1,datatype:r.FLOAT,getValue:function(e){return e.fogDensity}}),czm_imagerySplitPosition:new a({size:1,datatype:r.FLOAT,getValue:function(e){return e.imagerySplitPosition}}),czm_geometricToleranceOverMeter:new a({size:1,datatype:r.FLOAT,getValue:function(e){return e.geometricToleranceOverMeter}}),czm_minimumDisableDepthTestDistance:new a({size:1,datatype:r.FLOAT,getValue:function(e){return e.minimumDisableDepthTestDistance}}),czm_invertClassificationColor:new a({size:1,datatype:r.FLOAT_VEC4,getValue:function(e){return e.invertClassificationColor}})}}),define("Renderer/createUniform",["../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/Color","../Core/defined","../Core/DeveloperError","../Core/FeatureDetection","../Core/Matrix2","../Core/Matrix3","../Core/Matrix4","../Core/RuntimeError"],function(e,t,n,r,a,i,o,s,c,u,l){"use strict";function d(e,t,n,r){switch(t.type){case e.FLOAT:return new f(e,t,n,r);case e.FLOAT_VEC2:return new m(e,t,n,r);case e.FLOAT_VEC3:return new p(e,t,n,r);case e.FLOAT_VEC4:return new h(e,t,n,r);case e.SAMPLER_2D:case e.SAMPLER_CUBE:return new _(e,t,n,r);case e.INT:case e.BOOL:return new v(e,t,n,r);case e.INT_VEC2:case e.BOOL_VEC2:return new g(e,t,n,r);case e.INT_VEC3:case e.BOOL_VEC3:return new y(e,t,n,r);case e.INT_VEC4:case e.BOOL_VEC4:return new E(e,t,n,r);case e.FLOAT_MAT2:return new T(e,t,n,r);case e.FLOAT_MAT3:return new C(e,t,n,r);case e.FLOAT_MAT4:return new S(e,t,n,r);default:throw new l("Unrecognized uniform type: "+t.type+' for uniform "'+n+'".')}}function f(e,t,n,r){this.name=n,this.value=void 0,this._value=0,this._gl=e,this._location=r}function m(t,n,r,a){this.name=r,this.value=void 0,this._value=new e,this._gl=t,this._location=a}function p(e,t,n,r){this.name=n,this.value=void 0,this._value=void 0,this._gl=e,this._location=r}function h(e,t,n,r){this.name=n,this.value=void 0,this._value=void 0,this._gl=e,this._location=r}function _(e,t,n,r){this.name=n,this.value=void 0,this._gl=e,this._location=r,this.textureUnitIndex=void 0}function v(e,t,n,r){this.name=n,this.value=void 0,this._value=0,this._gl=e,this._location=r}function g(t,n,r,a){this.name=r,this.value=void 0,this._value=new e,this._gl=t,this._location=a}function y(e,n,r,a){this.name=r,this.value=void 0,this._value=new t,this._gl=e,this._location=a}function E(e,t,r,a){this.name=r,this.value=void 0,this._value=new n,this._gl=e,this._location=a}function T(e,t,n,r){this.name=n,this.value=void 0,this._value=new s,this._gl=e,this._location=r}function C(e,t,n,r){this.name=n,this.value=void 0,this._value=new c,this._gl=e,this._location=r}function S(e,t,n,r){this.name=n,this.value=void 0,this._value=new u,this._gl=e,this._location=r}if(!o.supportsTypedArrays())return{};f.prototype.set=function(){this.value!==this._value&&(this._value=this.value,this._gl.uniform1f(this._location,this.value))},m.prototype.set=function(){var t=this.value;e.equals(t,this._value)||(e.clone(t,this._value),this._gl.uniform2f(this._location,t.x,t.y))},p.prototype.set=function(){var e=this.value;a(e.red)?r.equals(e,this._value)||(this._value=r.clone(e,this._value),this._gl.uniform3f(this._location,e.red,e.green,e.blue)):a(e.x)&&(t.equals(e,this._value)||(this._value=t.clone(e,this._value),this._gl.uniform3f(this._location,e.x,e.y,e.z)))},h.prototype.set=function(){var e=this.value;a(e.red)?r.equals(e,this._value)||(this._value=r.clone(e,this._value),this._gl.uniform4f(this._location,e.red,e.green,e.blue,e.alpha)):a(e.x)&&(n.equals(e,this._value)||(this._value=n.clone(e,this._value),this._gl.uniform4f(this._location,e.x,e.y,e.z,e.w)))},_.prototype.set=function(){var e=this._gl;e.activeTexture(e.TEXTURE0+this.textureUnitIndex);var t=this.value;e.bindTexture(t._target,t._texture)},_.prototype._setSampler=function(e){return this.textureUnitIndex=e,this._gl.uniform1i(this._location,e),e+1},v.prototype.set=function(){this.value!==this._value&&(this._value=this.value,this._gl.uniform1i(this._location,this.value))},g.prototype.set=function(){var t=this.value;e.equals(t,this._value)||(e.clone(t,this._value),this._gl.uniform2i(this._location,t.x,t.y))},y.prototype.set=function(){var e=this.value
;t.equals(e,this._value)||(t.clone(e,this._value),this._gl.uniform3i(this._location,e.x,e.y,e.z))},E.prototype.set=function(){var e=this.value;n.equals(e,this._value)||(n.clone(e,this._value),this._gl.uniform4i(this._location,e.x,e.y,e.z,e.w))};var A=new Float32Array(4);T.prototype.set=function(){if(!s.equalsArray(this.value,this._value,0)){s.clone(this.value,this._value);var e=s.toArray(this.value,A);this._gl.uniformMatrix2fv(this._location,!1,e)}};var x=new Float32Array(9);C.prototype.set=function(){if(!c.equalsArray(this.value,this._value,0)){c.clone(this.value,this._value);var e=c.toArray(this.value,x);this._gl.uniformMatrix3fv(this._location,!1,e)}};var w=new Float32Array(16);return S.prototype.set=function(){if(!u.equalsArray(this.value,this._value,0)){u.clone(this.value,this._value);var e=u.toArray(this.value,w);this._gl.uniformMatrix4fv(this._location,!1,e)}},d}),define("Renderer/createUniformArray",["../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/Color","../Core/defined","../Core/DeveloperError","../Core/Matrix2","../Core/Matrix3","../Core/Matrix4","../Core/RuntimeError"],function(e,t,n,r,a,i,o,s,c,u){"use strict";function l(e,t,n,r){switch(t.type){case e.FLOAT:return new d(e,t,n,r);case e.FLOAT_VEC2:return new f(e,t,n,r);case e.FLOAT_VEC3:return new m(e,t,n,r);case e.FLOAT_VEC4:return new p(e,t,n,r);case e.SAMPLER_2D:case e.SAMPLER_CUBE:return new h(e,t,n,r);case e.INT:case e.BOOL:return new _(e,t,n,r);case e.INT_VEC2:case e.BOOL_VEC2:return new v(e,t,n,r);case e.INT_VEC3:case e.BOOL_VEC3:return new g(e,t,n,r);case e.INT_VEC4:case e.BOOL_VEC4:return new y(e,t,n,r);case e.FLOAT_MAT2:return new E(e,t,n,r);case e.FLOAT_MAT3:return new T(e,t,n,r);case e.FLOAT_MAT4:return new C(e,t,n,r);default:throw new u("Unrecognized uniform type: "+t.type+' for uniform "'+n+'".')}}function d(e,t,n,r){var a=r.length;this.name=n,this.value=new Array(a),this._value=new Float32Array(a),this._gl=e,this._location=r[0]}function f(e,t,n,r){var a=r.length;this.name=n,this.value=new Array(a),this._value=new Float32Array(2*a),this._gl=e,this._location=r[0]}function m(e,t,n,r){var a=r.length;this.name=n,this.value=new Array(a),this._value=new Float32Array(3*a),this._gl=e,this._location=r[0]}function p(e,t,n,r){var a=r.length;this.name=n,this.value=new Array(a),this._value=new Float32Array(4*a),this._gl=e,this._location=r[0]}function h(e,t,n,r){var a=r.length;this.name=n,this.value=new Array(a),this._value=new Float32Array(a),this._gl=e,this._locations=r,this.textureUnitIndex=void 0}function _(e,t,n,r){var a=r.length;this.name=n,this.value=new Array(a),this._value=new Int32Array(a),this._gl=e,this._location=r[0]}function v(e,t,n,r){var a=r.length;this.name=n,this.value=new Array(a),this._value=new Int32Array(2*a),this._gl=e,this._location=r[0]}function g(e,t,n,r){var a=r.length;this.name=n,this.value=new Array(a),this._value=new Int32Array(3*a),this._gl=e,this._location=r[0]}function y(e,t,n,r){var a=r.length;this.name=n,this.value=new Array(a),this._value=new Int32Array(4*a),this._gl=e,this._location=r[0]}function E(e,t,n,r){var a=r.length;this.name=n,this.value=new Array(a),this._value=new Float32Array(4*a),this._gl=e,this._location=r[0]}function T(e,t,n,r){var a=r.length;this.name=n,this.value=new Array(a),this._value=new Float32Array(9*a),this._gl=e,this._location=r[0]}function C(e,t,n,r){var a=r.length;this.name=n,this.value=new Array(a),this._value=new Float32Array(16*a),this._gl=e,this._location=r[0]}return d.prototype.set=function(){for(var e=this.value,t=e.length,n=this._value,r=!1,a=0;a<t;++a){var i=e[a];i!==n[a]&&(n[a]=i,r=!0)}r&&this._gl.uniform1fv(this._location,n)},f.prototype.set=function(){for(var t=this.value,n=t.length,r=this._value,a=!1,i=0,o=0;o<n;++o){var s=t[o];e.equalsArray(s,r,i)||(e.pack(s,r,i),a=!0),i+=2}a&&this._gl.uniform2fv(this._location,r)},m.prototype.set=function(){for(var e=this.value,n=e.length,r=this._value,i=!1,o=0,s=0;s<n;++s){var c=e[s];a(c.red)?c.red===r[o]&&c.green===r[o+1]&&c.blue===r[o+2]||(r[o]=c.red,r[o+1]=c.green,r[o+2]=c.blue,i=!0):a(c.x)&&(t.equalsArray(c,r,o)||(t.pack(c,r,o),i=!0)),o+=3}i&&this._gl.uniform3fv(this._location,r)},p.prototype.set=function(){for(var e=this.value,t=e.length,i=this._value,o=!1,s=0,c=0;c<t;++c){var u=e[c];a(u.red)?r.equalsArray(u,i,s)||(r.pack(u,i,s),o=!0):a(u.x)&&(n.equalsArray(u,i,s)||(n.pack(u,i,s),o=!0)),s+=4}o&&this._gl.uniform4fv(this._location,i)},h.prototype.set=function(){for(var e=this._gl,t=e.TEXTURE0+this.textureUnitIndex,n=this.value,r=n.length,a=0;a<r;++a){var i=n[a];e.activeTexture(t+a),e.bindTexture(i._target,i._texture)}},h.prototype._setSampler=function(e){this.textureUnitIndex=e;for(var t=this._locations,n=t.length,r=0;r<n;++r){var a=e+r;this._gl.uniform1i(t[r],a)}return e+n},_.prototype.set=function(){for(var e=this.value,t=e.length,n=this._value,r=!1,a=0;a<t;++a){var i=e[a];i!==n[a]&&(n[a]=i,r=!0)}r&&this._gl.uniform1iv(this._location,n)},v.prototype.set=function(){for(var t=this.value,n=t.length,r=this._value,a=!1,i=0,o=0;o<n;++o){var s=t[o];e.equalsArray(s,r,i)||(e.pack(s,r,i),a=!0),i+=2}a&&this._gl.uniform2iv(this._location,r)},g.prototype.set=function(){for(var e=this.value,n=e.length,r=this._value,a=!1,i=0,o=0;o<n;++o){var s=e[o];t.equalsArray(s,r,i)||(t.pack(s,r,i),a=!0),i+=3}a&&this._gl.uniform3iv(this._location,r)},y.prototype.set=function(){for(var e=this.value,t=e.length,r=this._value,a=!1,i=0,o=0;o<t;++o){var s=e[o];n.equalsArray(s,r,i)||(n.pack(s,r,i),a=!0),i+=4}a&&this._gl.uniform4iv(this._location,r)},E.prototype.set=function(){for(var e=this.value,t=e.length,n=this._value,r=!1,a=0,i=0;i<t;++i){var s=e[i];o.equalsArray(s,n,a)||(o.pack(s,n,a),r=!0),a+=4}r&&this._gl.uniformMatrix2fv(this._location,!1,n)},T.prototype.set=function(){for(var e=this.value,t=e.length,n=this._value,r=!1,a=0,i=0;i<t;++i){var o=e[i];s.equalsArray(o,n,a)||(s.pack(o,n,a),r=!0),a+=9}r&&this._gl.uniformMatrix3fv(this._location,!1,n)},C.prototype.set=function(){for(var e=this.value,t=e.length,n=this._value,r=!1,a=0,i=0;i<t;++i){var o=e[i];c.equalsArray(o,n,a)||(c.pack(o,n,a),r=!0),a+=16}r&&this._gl.uniformMatrix4fv(this._location,!1,n)},l}),define("Renderer/ShaderProgram",["../Core/Check","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/RuntimeError","./AutomaticUniforms","./ContextLimits","./createUniform","./createUniformArray"],function(e,t,n,r,a,i,o,s,c,u,l){"use strict";function d(e){var t=m(e.vertexShaderText,e.fragmentShaderText);this._gl=e.gl,this._logShaderCompilation=e.logShaderCompilation,this._debugShaders=e.debugShaders,this._attributeLocations=e.attributeLocations,this._program=void 0,this._numberOfVertexAttributes=void 0,this._vertexAttributes=void 0,this._uniformsByName=void 0,this._uniforms=void 0,this._automaticUniforms=void 0,this._manualUniforms=void 0,this._duplicateUniformNames=t.duplicateUniformNames,this._cachedShader=void 0,this.maximumTextureUnitIndex=void 0,this._vertexShaderSource=e.vertexShaderSource,this._vertexShaderText=e.vertexShaderText,this._fragmentShaderSource=e.fragmentShaderSource,this._fragmentShaderText=t.fragmentShaderText,this.id=E++}function f(e){var t=[],r=e.match(/uniform.*?(?![^{]*})(?=[=\[;])/g);if(n(r))for(var a=r.length,i=0;i<a;i++){var o=r[i].trim(),s=o.slice(o.lastIndexOf(" ")+1);t.push(s)}return t}function m(e,t){var n={};if(!c.highpFloatSupported||!c.highpIntSupported){var r,a,i,o,s=f(e),u=f(t),l=s.length,d=u.length;for(r=0;r<l;r++)for(a=0;a<d;a++)if(s[r]===u[a]){i=s[r],o="czm_mediump_"+i;var m=new RegExp(i+"\\b","g");t=t.replace(m,o),n[o]=i}}return{fragmentShaderText:t,duplicateUniformNames:n}}function p(e,t){var r=t._vertexShaderText,a=t._fragmentShaderText,i=e.createShader(e.VERTEX_SHADER);e.shaderSource(i,r),e.compileShader(i);var s=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(s,a),e.compileShader(s);var c=e.createProgram();e.attachShader(c,i),e.attachShader(c,s),e.deleteShader(i),e.deleteShader(s);var u=t._attributeLocations;if(n(u))for(var l in u)u.hasOwnProperty(l)&&e.bindAttribLocation(c,u[l],l);e.linkProgram(c);var d;if(!e.getProgramParameter(c,e.LINK_STATUS)){var f=t._debugShaders;if(!e.getShaderParameter(s,e.COMPILE_STATUS)){if(d=e.getShaderInfoLog(s),console.error(T+"Fragment shader compile log: "+d),n(f)){var m=f.getTranslatedShaderSource(s);""!==m?console.error(T+"Translated fragment shader source:\n"+m):console.error(T+"Fragment shader translation failed.")}throw e.deleteProgram(c),new o("Fragment shader failed to compile.  Compile log: "+d)}if(!e.getShaderParameter(i,e.COMPILE_STATUS)){if(d=e.getShaderInfoLog(i),console.error(T+"Vertex shader compile log: "+d),n(f)){var p=f.getTranslatedShaderSource(i);""!==p?console.error(T+"Translated vertex shader source:\n"+p):console.error(T+"Vertex shader translation failed.")}throw e.deleteProgram(c),new o("Vertex shader failed to compile.  Compile log: "+d)}throw d=e.getProgramInfoLog(c),console.error(T+"Shader program link log: "+d),n(f)&&(console.error(T+"Translated vertex shader source:\n"+f.getTranslatedShaderSource(i)),console.error(T+"Translated fragment shader source:\n"+f.getTranslatedShaderSource(s))),e.deleteProgram(c),new o("Program failed to link.  Link log: "+d)}var h=t._logShaderCompilation;return h&&(d=e.getShaderInfoLog(i),n(d)&&d.length>0&&console.log(T+"Vertex shader compile log: "+d)),h&&(d=e.getShaderInfoLog(s),n(d)&&d.length>0&&console.log(T+"Fragment shader compile log: "+d)),h&&(d=e.getProgramInfoLog(c),n(d)&&d.length>0&&console.log(T+"Shader program link log: "+d)),c}function h(e,t,n){for(var r={},a=0;a<n;++a){var i=e.getActiveAttrib(t,a),o=e.getAttribLocation(t,i.name);r[i.name]={name:i.name,type:i.type,index:o}}return r}function _(e,t){for(var r={},a=[],i=[],o=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),s=0;s<o;++s){var c=e.getActiveUniform(t,s),d=-1!==c.name.indexOf("[0]",c.name.length-"[0]".length)?c.name.slice(0,c.name.length-3):c.name;if(0!==d.indexOf("gl_"))if(c.name.indexOf("[")<0){var f=e.getUniformLocation(t,d);if(null!==f){var m=u(e,c,d,f);r[d]=m,a.push(m),m._setSampler&&i.push(m)}}else{var p,h,_,v,g=d.indexOf("[");if(g>=0){if(p=r[d.slice(0,g)],!n(p))continue;h=p._locations,h.length<=1&&(_=p.value,null!==(v=e.getUniformLocation(t,d))&&(h.push(v),_.push(e.getUniform(t,v))))}else{h=[];for(var y=0;y<c.size;++y)null!==(v=e.getUniformLocation(t,d+"["+y+"]"))&&h.push(v);p=l(e,c,d,h),r[d]=p,a.push(p),p._setSampler&&i.push(p)}}}return{uniformsByName:r,uniforms:a,samplerUniforms:i}}function v(e,t){var r=[],a=[];for(var i in t)if(t.hasOwnProperty(i)){var o=t[i],c=i,u=e._duplicateUniformNames[c];n(u)&&(o.name=u,c=u);var l=s[c];n(l)?r.push({uniform:o,automaticUniform:l}):a.push(o)}return{automaticUniforms:r,manualUniforms:a}}function g(e,t,n){e.useProgram(t);for(var r=0,a=n.length,i=0;i<a;++i)r=n[i]._setSampler(r);return e.useProgram(null),r}function y(e){if(!n(e._program)){var t=e._gl,r=p(t,e,e._debugShaders),a=t.getProgramParameter(r,t.ACTIVE_ATTRIBUTES),i=_(t,r),o=v(e,i.uniformsByName);e._program=r,e._numberOfVertexAttributes=a,e._vertexAttributes=h(t,r,a),e._uniformsByName=i.uniformsByName,e._uniforms=i.uniforms,e._automaticUniforms=o.automaticUniforms,e._manualUniforms=o.manualUniforms,e.maximumTextureUnitIndex=g(t,r,i.samplerUniforms)}}var E=0;d.fromCache=function(e){return e=t(e,t.EMPTY_OBJECT),e.context.shaderCache.getShaderProgram(e)},d.replaceCache=function(e){return e=t(e,t.EMPTY_OBJECT),e.context.shaderCache.replaceShaderProgram(e)},r(d.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},vertexAttributes:{get:function(){return y(this),this._vertexAttributes}},numberOfVertexAttributes:{get:function(){return y(this),this._numberOfVertexAttributes}},allUniforms:{get:function(){return y(this),this._uniformsByName}}});var T="[Cesium WebGL] ";return d.prototype._bind=function(){y(this),this._gl.useProgram(this._program)},d.prototype._setUniforms=function(e,t,r){var a,i;if(n(e)){var o=this._manualUniforms;for(a=o.length,i=0;i<a;++i){var s=o[i];s.value=e[s.name]()}}var c=this._automaticUniforms;for(a=c.length,i=0;i<a;++i){var u=c[i];u.uniform.value=u.automaticUniform.getValue(t)}var l=this._uniforms;for(a=l.length,i=0;i<a;++i)l[i].set();if(r){var d=this._gl,f=this._program;d.validateProgram(f)}},d.prototype.isDestroyed=function(){return!1},d.prototype.destroy=function(){this._cachedShader.cache.releaseShaderProgram(this)},d.prototype.finalDestroy=function(){return this._gl.deleteProgram(this._program),a(this)},d}),define("Renderer/modernizeShader",["../Core/defined","../Core/DeveloperError"],function(e,t){"use strict";function n(e,n){var a=/#define OUTPUT_DECLARATION/,l=e.split("\n");if(/#version 300 es/g.test(e))return e;var d,f,m=-1;for(d=0;d<l.length;++d)if(f=l[d],a.test(f)){m=d;break}if(-1===m)throw new t("Could not find a #define OUTPUT_DECLARATION!");var p=[];for(d=0;d<10;d++){var h="gl_FragData\\["+d+"\\]",_="czm_out"+d;new RegExp(h,"g").test(e)&&(s(_,p),r(h,_,l),l.splice(m,0,"layout(location = "+d+") out vec4 "+_+";"),m+=1)}i("gl_FragColor",l)&&(s("czm_fragColor",p),r("gl_FragColor","czm_fragColor",l),l.splice(m,0,"layout(location = 0) out vec4 czm_fragColor;"),m+=1);var v=c(p,l),g={};for(d=0;d<l.length;d++){f=l[d];for(var y in v)if(v.hasOwnProperty(y)){var E=new RegExp("(layout)[^]+(out)[^]+("+y+")[^]+","g");E.test(f)&&(g[f]=y)}}for(var T in g)if(g.hasOwnProperty(T)){var C,S=g[T],A=l.indexOf(T),x=v[S],w=x.length;for(C=0;C<w;C++)l.splice(A,0,x[C]);for(A+=w+1,C=w-1;C>=0;C--)l.splice(A,0,"#endif //"+x[C])}var b=!1;for(d=0;d<l.length;d++)/#version/.test(l[d])&&(l[d]="#version 300 es",b=!0);return b||l.splice(0,0,"#version 300 es"),u("EXT_draw_buffers",l),u("EXT_frag_depth",l),r("texture2D","texture",l),r("texture3D","texture",l),r("textureCube","texture",l),r("gl_FragDepthEXT","gl_FragDepth",l),n?r("varying","in",l):(r("attribute","in",l),r("varying","out",l)),o(l)}function r(e,t,n){for(var r="(^|[^\\w])("+e+")($|[^\\w])",a=new RegExp(r,"g"),i=n.length,o=0;o<i;++o){var s=n[o];n[o]=s.replace(a,"$1"+t+"$3")}}function a(e,t,n){for(var r=n.length,a=0;a<r;++a){var i=n[a];n[a]=i.replace(e,t)}}function i(e,t){for(var n="(^|[^\\w])("+e+")($|[^\\w])",r=new RegExp(n,"g"),a=t.length,i=0;i<a;++i){var o=t[i];if(r.test(o))return!0}return!1}function o(e){for(var t="",n=e.length,r=0;r<n;++r)t+=e[r]+"\n";return t}function s(e,t){-1===t.indexOf(e)&&t.push(e)}function c(t,n){for(var r={},a=t.length,i=[],o=0;o<n.length;++o){var s=n[o],c=/(#ifdef|#if)/g.test(s),u=/#else/g.test(s),l=/#endif/g.test(s);if(c)i.push(s);else if(u){var d=i[i.length-1],f=d.replace("ifdef","ifndef");/if/g.test(f)&&(f=f.replace(/(#if\s+)(\S*)([^]*)/,"$1!($2)$3")),i.pop(),i.push(f)}else if(l)i.pop();else if(!/layout/g.test(s))for(var m=0;m<a;++m){var p=t[m];-1!==s.indexOf(p)&&(e(r[p])?r[p]=r[p].filter(function(e){return i.indexOf(e)>=0}):r[p]=i.slice())}}return r}function u(e,t){var n="#extension\\s+GL_"+e+"\\s+:\\s+[a-zA-Z0-9]+\\s*$";a(new RegExp(n,"g"),"",t)}return n}),define("Shaders/Builtin/Constants/degreesPerRadian",[],function(){"use strict";return"/**\n * A built-in GLSL floating-point constant for converting radians to degrees.\n *\n * @alias czm_degreesPerRadian\n * @glslConstant\n *\n * @see CesiumMath.DEGREES_PER_RADIAN\n *\n * @example\n * // GLSL declaration\n * const float czm_degreesPerRadian = ...;\n *\n * // Example\n * float deg = czm_degreesPerRadian * rad;\n */\nconst float czm_degreesPerRadian = 57.29577951308232;\n"}),define("Shaders/Builtin/Constants/depthRange",[],function(){"use strict";return"/**\n * A built-in GLSL vec2 constant for defining the depth range.\n * This is a workaround to a bug where IE11 does not implement gl_DepthRange.\n *\n * @alias czm_depthRange\n * @glslConstant\n *\n * @example\n * // GLSL declaration\n * float depthRangeNear = czm_depthRange.near;\n * float depthRangeFar = czm_depthRange.far;\n *\n */\nconst czm_depthRangeStruct czm_depthRange = czm_depthRangeStruct(0.0, 1.0);\n"}),define("Shaders/Builtin/Constants/epsilon1",[],function(){"use strict";return"/**\n * 0.1\n *\n * @name czm_epsilon1\n * @glslConstant\n */\nconst float czm_epsilon1 = 0.1;\n"}),define("Shaders/Builtin/Constants/epsilon2",[],function(){"use strict";return"/**\n * 0.01\n *\n * @name czm_epsilon2\n * @glslConstant\n */\nconst float czm_epsilon2 = 0.01;\n"}),define("Shaders/Builtin/Constants/epsilon3",[],function(){"use strict";return"/**\n * 0.001\n *\n * @name czm_epsilon3\n * @glslConstant\n */\nconst float czm_epsilon3 = 0.001;\n"}),define("Shaders/Builtin/Constants/epsilon4",[],function(){"use strict";return"/**\n * 0.0001\n *\n * @name czm_epsilon4\n * @glslConstant\n */\nconst float czm_epsilon4 = 0.0001;\n"}),define("Shaders/Builtin/Constants/epsilon5",[],function(){"use strict";return"/**\n * 0.00001\n *\n * @name czm_epsilon5\n * @glslConstant\n */\nconst float czm_epsilon5 = 0.00001;\n"}),define("Shaders/Builtin/Constants/epsilon6",[],function(){"use strict";return"/**\n * 0.000001\n *\n * @name czm_epsilon6\n * @glslConstant\n */\nconst float czm_epsilon6 = 0.000001;\n"}),define("Shaders/Builtin/Constants/epsilon7",[],function(){"use strict";return"/**\n * 0.0000001\n *\n * @name czm_epsilon7\n * @glslConstant\n */\nconst float czm_epsilon7 = 0.0000001;\n"}),define("Shaders/Builtin/Constants/infinity",[],function(){"use strict";return"/**\n * DOC_TBA\n *\n * @name czm_infinity\n * @glslConstant\n */\nconst float czm_infinity = 5906376272000.0;  // Distance from the Sun to Pluto in meters.  TODO: What is best given lowp, mediump, and highp?\n"}),define("Shaders/Builtin/Constants/oneOverPi",[],function(){"use strict";return"/**\n * A built-in GLSL floating-point constant for <code>1/pi</code>.\n *\n * @alias czm_oneOverPi\n * @glslConstant\n *\n * @see CesiumMath.ONE_OVER_PI\n *\n * @example\n * // GLSL declaration\n * const float czm_oneOverPi = ...;\n *\n * // Example\n * float pi = 1.0 / czm_oneOverPi;\n */\nconst float czm_oneOverPi = 0.3183098861837907;\n"}),define("Shaders/Builtin/Constants/oneOverTwoPi",[],function(){"use strict";return"/**\n * A built-in GLSL floating-point constant for <code>1/2pi</code>.\n *\n * @alias czm_oneOverTwoPi\n * @glslConstant\n *\n * @see CesiumMath.ONE_OVER_TWO_PI\n *\n * @example\n * // GLSL declaration\n * const float czm_oneOverTwoPi = ...;\n *\n * // Example\n * float pi = 2.0 * czm_oneOverTwoPi;\n */\nconst float czm_oneOverTwoPi = 0.15915494309189535;\n"}),define("Shaders/Builtin/Constants/passCesium3DTile",[],function(){"use strict";return"/**\n * The automatic GLSL constant for {@link Pass#CESIUM_3D_TILE}\n *\n * @name czm_passCesium3DTile\n * @glslConstant\n *\n * @see czm_pass\n */\nconst float czm_passCesium3DTile = 4.0;\n"}),define("Shaders/Builtin/Constants/passCesium3DTileClassification",[],function(){"use strict";return"/**\n * The automatic GLSL constant for {@link Pass#CESIUM_3D_TILE_CLASSIFICATION}\n *\n * @name czm_passCesium3DTileClassification\n * @glslConstant\n *\n * @see czm_pass\n */\nconst float czm_passCesium3DTileClassification = 5.0;\n"}),define("Shaders/Builtin/Constants/passCesium3DTileClassificationIgnoreShow",[],function(){"use strict";return"/**\n * The automatic GLSL constant for {@link Pass#CESIUM_3D_TILE_CLASSIFICATION_IGNORE_SHOW}\n *\n * @name czm_passCesium3DTileClassificationIgnoreShow\n * @glslConstant\n *\n * @see czm_pass\n */\nconst float czm_passCesium3DTileClassificationIgnoreShow = 6.0;\n"}),define("Shaders/Builtin/Constants/passClassification",[],function(){"use strict";return"/**\n * The automatic GLSL constant for {@link Pass#CLASSIFICATION}\n *\n * @name czm_passClassification\n * @glslConstant\n *\n * @see czm_pass\n */\nconst float czm_passClassification = 7.0;\n"}),define("Shaders/Builtin/Constants/passCompute",[],function(){"use strict";return"/**\n * The automatic GLSL constant for {@link Pass#COMPUTE}\n *\n * @name czm_passCompute\n * @glslConstant\n *\n * @see czm_pass\n */\nconst float czm_passCompute = 1.0;\n"}),define("Shaders/Builtin/Constants/passEnvironment",[],function(){"use strict";return"/**\n * The automatic GLSL constant for {@link Pass#ENVIRONMENT}\n *\n * @name czm_passEnvironment\n * @glslConstant\n *\n * @see czm_pass\n */\nconst float czm_passEnvironment = 0.0;\n"}),define("Shaders/Builtin/Constants/passGlobe",[],function(){"use strict";return"/**\n * The automatic GLSL constant for {@link Pass#GLOBE}\n *\n * @name czm_passGlobe\n * @glslConstant\n *\n * @see czm_pass\n */\nconst float czm_passGlobe = 2.0;\n"}),define("Shaders/Builtin/Constants/passOpaque",[],function(){"use strict";return"/**\n * The automatic GLSL constant for {@link Pass#OPAQUE}\n *\n * @name czm_passOpaque\n * @glslConstant\n *\n * @see czm_pass\n */\nconst float czm_passOpaque = 8.0;\n"}),define("Shaders/Builtin/Constants/passOverlay",[],function(){"use strict";return"/**\n * The automatic GLSL constant for {@link Pass#OVERLAY}\n *\n * @name czm_passOverlay\n * @glslConstant\n *\n * @see czm_pass\n */\nconst float czm_passOverlay = 10.0;\n"}),define("Shaders/Builtin/Constants/passTerrainClassification",[],function(){"use strict";return"/**\n * The automatic GLSL constant for {@link Pass#TERRAIN_CLASSIFICATION}\n *\n * @name czm_passTerrainClassification\n * @glslConstant\n *\n * @see czm_pass\n */\nconst float czm_passTerrainClassification = 3.0;\n"}),define("Shaders/Builtin/Constants/passTranslucent",[],function(){"use strict";return"/**\n * The automatic GLSL constant for {@link Pass#TRANSLUCENT}\n *\n * @name czm_passTranslucent\n * @glslConstant\n *\n * @see czm_pass\n */\nconst float czm_passTranslucent = 9.0;\n"}),define("Shaders/Builtin/Constants/pi",[],function(){"use strict";return"/**\n * A built-in GLSL floating-point constant for <code>Math.PI</code>.\n *\n * @alias czm_pi\n * @glslConstant\n *\n * @see CesiumMath.PI\n *\n * @example\n * // GLSL declaration\n * const float czm_pi = ...;\n *\n * // Example\n * float twoPi = 2.0 * czm_pi;\n */\nconst float czm_pi = 3.141592653589793;\n"}),define("Shaders/Builtin/Constants/piOverFour",[],function(){"use strict";return"/**\n * A built-in GLSL floating-point constant for <code>pi/4</code>.\n *\n * @alias czm_piOverFour\n * @glslConstant\n *\n * @see CesiumMath.PI_OVER_FOUR\n *\n * @example\n * // GLSL declaration\n * const float czm_piOverFour = ...;\n *\n * // Example\n * float pi = 4.0 * czm_piOverFour;\n */\nconst float czm_piOverFour = 0.7853981633974483;\n"}),define("Shaders/Builtin/Constants/piOverSix",[],function(){"use strict";return"/**\n * A built-in GLSL floating-point constant for <code>pi/6</code>.\n *\n * @alias czm_piOverSix\n * @glslConstant\n *\n * @see CesiumMath.PI_OVER_SIX\n *\n * @example\n * // GLSL declaration\n * const float czm_piOverSix = ...;\n *\n * // Example\n * float pi = 6.0 * czm_piOverSix;\n */\nconst float czm_piOverSix = 0.5235987755982988;\n"}),define("Shaders/Builtin/Constants/piOverThree",[],function(){"use strict";return"/**\n * A built-in GLSL floating-point constant for <code>pi/3</code>.\n *\n * @alias czm_piOverThree\n * @glslConstant\n *\n * @see CesiumMath.PI_OVER_THREE\n *\n * @example\n * // GLSL declaration\n * const float czm_piOverThree = ...;\n *\n * // Example\n * float pi = 3.0 * czm_piOverThree;\n */\nconst float czm_piOverThree = 1.0471975511965976;\n"}),define("Shaders/Builtin/Constants/piOverTwo",[],function(){"use strict";return"/**\n * A built-in GLSL floating-point constant for <code>pi/2</code>.\n *\n * @alias czm_piOverTwo\n * @glslConstant\n *\n * @see CesiumMath.PI_OVER_TWO\n *\n * @example\n * // GLSL declaration\n * const float czm_piOverTwo = ...;\n *\n * // Example\n * float pi = 2.0 * czm_piOverTwo;\n */\nconst float czm_piOverTwo = 1.5707963267948966;\n"}),define("Shaders/Builtin/Constants/radiansPerDegree",[],function(){"use strict";return"/**\n * A built-in GLSL floating-point constant for converting degrees to radians.\n *\n * @alias czm_radiansPerDegree\n * @glslConstant\n *\n * @see CesiumMath.RADIANS_PER_DEGREE\n *\n * @example\n * // GLSL declaration\n * const float czm_radiansPerDegree = ...;\n *\n * // Example\n * float rad = czm_radiansPerDegree * deg;\n */\nconst float czm_radiansPerDegree = 0.017453292519943295;\n"}),define("Shaders/Builtin/Constants/sceneMode2D",[],function(){"use strict";return"/**\n * The constant identifier for the 2D {@link SceneMode}\n *\n * @name czm_sceneMode2D\n * @glslConstant\n * @see czm_sceneMode\n * @see czm_sceneModeColumbusView\n * @see czm_sceneMode3D\n * @see czm_sceneModeMorphing\n */\nconst float czm_sceneMode2D = 2.0;\n"}),define("Shaders/Builtin/Constants/sceneMode3D",[],function(){"use strict";return"/**\n * The constant identifier for the 3D {@link SceneMode}\n *\n * @name czm_sceneMode3D\n * @glslConstant\n * @see czm_sceneMode\n * @see czm_sceneMode2D\n * @see czm_sceneModeColumbusView\n * @see czm_sceneModeMorphing\n */\nconst float czm_sceneMode3D = 3.0;\n"}),define("Shaders/Builtin/Constants/sceneModeColumbusView",[],function(){"use strict";return"/**\n * The constant identifier for the Columbus View {@link SceneMode}\n *\n * @name czm_sceneModeColumbusView\n * @glslConstant\n * @see czm_sceneMode\n * @see czm_sceneMode2D\n * @see czm_sceneMode3D\n * @see czm_sceneModeMorphing\n */\nconst float czm_sceneModeColumbusView = 1.0;\n"}),define("Shaders/Builtin/Constants/sceneModeMorphing",[],function(){"use strict";return"/**\n * The constant identifier for the Morphing {@link SceneMode}\n *\n * @name czm_sceneModeMorphing\n * @glslConstant\n * @see czm_sceneMode\n * @see czm_sceneMode2D\n * @see czm_sceneModeColumbusView\n * @see czm_sceneMode3D\n */\nconst float czm_sceneModeMorphing = 0.0;\n"}),define("Shaders/Builtin/Constants/solarRadius",[],function(){"use strict";return"/**\n * A built-in GLSL floating-point constant for one solar radius.\n *\n * @alias czm_solarRadius\n * @glslConstant\n *\n * @see CesiumMath.SOLAR_RADIUS\n *\n * @example\n * // GLSL declaration\n * const float czm_solarRadius = ...;\n */\nconst float czm_solarRadius = 695500000.0;\n"}),define("Shaders/Builtin/Constants/threePiOver2",[],function(){"use strict";return"/**\n * A built-in GLSL floating-point constant for <code>3pi/2</code>.\n *\n * @alias czm_threePiOver2\n * @glslConstant\n *\n * @see CesiumMath.THREE_PI_OVER_TWO\n *\n * @example\n * // GLSL declaration\n * const float czm_threePiOver2 = ...;\n *\n * // Example\n * float pi = (2.0 / 3.0) * czm_threePiOver2;\n */\nconst float czm_threePiOver2 = 4.71238898038469;\n"}),define("Shaders/Builtin/Constants/twoPi",[],function(){"use strict";return"/**\n * A built-in GLSL floating-point constant for <code>2pi</code>.\n *\n * @alias czm_twoPi\n * @glslConstant\n *\n * @see CesiumMath.TWO_PI\n *\n * @example\n * // GLSL declaration\n * const float czm_twoPi = ...;\n *\n * // Example\n * float pi = czm_twoPi / 2.0;\n */\nconst float czm_twoPi = 6.283185307179586;\n"}),define("Shaders/Builtin/Constants/webMercatorMaxLatitude",[],function(){"use strict";return"/**\n * The maximum latitude, in radians, both North and South, supported by a Web Mercator\n * (EPSG:3857) projection.  Technically, the Mercator projection is defined\n * for any latitude up to (but not including) 90 degrees, but it makes sense\n * to cut it off sooner because it grows exponentially with increasing latitude.\n * The logic behind this particular cutoff value, which is the one used by\n * Google Maps, Bing Maps, and Esri, is that it makes the projection\n * square.  That is, the rectangle is equal in the X and Y directions.\n *\n * The constant value is computed as follows:\n *   czm_pi * 0.5 - (2.0 * atan(exp(-czm_pi)))\n *\n * @name czm_webMercatorMaxLatitude\n * @glslConstant\n */\nconst float czm_webMercatorMaxLatitude = 1.4844222297453324;\n"}),define("Shaders/Builtin/Structs/depthRangeStruct",[],function(){"use strict";return"/**\n * @name czm_depthRangeStruct\n * @glslStruct\n */\nstruct czm_depthRangeStruct\n{\n    float near;\n    float far;\n};\n"}),define("Shaders/Builtin/Structs/ellipsoid",[],function(){"use strict";return"/** DOC_TBA\n *\n * @name czm_ellipsoid\n * @glslStruct\n */\nstruct czm_ellipsoid\n{\n    vec3 center;\n    vec3 radii;\n    vec3 inverseRadii;\n    vec3 inverseRadiiSquared;\n};\n"}),define("Shaders/Builtin/Structs/material",[],function(){"use strict";return"/**\n * Holds material information that can be used for lighting. Returned by all czm_getMaterial functions.\n *\n * @name czm_material\n * @glslStruct\n *\n * @property {vec3} diffuse Incoming light that scatters evenly in all directions.\n * @property {float} specular Intensity of incoming light reflecting in a single direction.\n * @property {float} shininess The sharpness of the specular reflection.  Higher values create a smaller, more focused specular highlight.\n * @property {vec3} normal Surface's normal in eye coordinates. It is used for effects such as normal mapping. The default is the surface's unmodified normal.\n * @property {vec3} emission Light emitted by the material equally in all directions. The default is vec3(0.0), which emits no light.\n * @property {float} alpha Opacity of this material. 0.0 is completely transparent; 1.0 is completely opaque.\n */\nstruct czm_material\n{\n    vec3 diffuse;\n    float specular;\n    float shininess;\n    vec3 normal;\n    vec3 emission;\n    float alpha;\n};\n"}),define("Shaders/Builtin/Structs/materialInput",[],function(){"use strict";return"/**\n * Used as input to every material's czm_getMaterial function.\n *\n * @name czm_materialInput\n * @glslStruct\n *\n * @property {float} s 1D texture coordinates.\n * @property {vec2} st 2D texture coordinates.\n * @property {vec3} str 3D texture coordinates.\n * @property {vec3} normalEC Unperturbed surface normal in eye coordinates.\n * @property {mat3} tangentToEyeMatrix Matrix for converting a tangent space normal to eye space.\n * @property {vec3} positionToEyeEC Vector from the fragment to the eye in eye coordinates.  The magnitude is the distance in meters from the fragment to the eye.\n * @property {float} height The height of the terrain in meters above or below the WGS84 ellipsoid.  Only available for globe materials.\n * @property {float} slope The slope of the terrain normalized from 0 to 1.  0 is completely vertical, 1 is completely flat.  Only available for globe materials.\n */\nstruct czm_materialInput\n{\n    float s;\n    vec2 st;\n    vec3 str;\n    vec3 normalEC;\n    mat3 tangentToEyeMatrix;\n    vec3 positionToEyeEC;\n    float height;\n    float slope;\n};\n"}),define("Shaders/Builtin/Structs/ray",[],function(){"use strict";return"/**\n * DOC_TBA\n *\n * @name czm_ray\n * @glslStruct\n */\nstruct czm_ray\n{\n    vec3 origin;\n    vec3 direction;\n};\n"}),define("Shaders/Builtin/Structs/raySegment",[],function(){"use strict";return"/**\n * DOC_TBA\n *\n * @name czm_raySegment\n * @glslStruct\n */\nstruct czm_raySegment\n{\n    float start;\n    float stop;\n};\n\n/**\n * DOC_TBA\n *\n * @name czm_emptyRaySegment\n * @glslConstant \n */\nconst czm_raySegment czm_emptyRaySegment = czm_raySegment(-czm_infinity, -czm_infinity);\n\n/**\n * DOC_TBA\n *\n * @name czm_fullRaySegment\n * @glslConstant \n */\nconst czm_raySegment czm_fullRaySegment = czm_raySegment(0.0, czm_infinity);\n"}),define("Shaders/Builtin/Structs/shadowParameters",[],function(){"use strict";return"struct czm_shadowParameters\n{\n#ifdef USE_CUBE_MAP_SHADOW\n    vec3 texCoords;\n#else\n    vec2 texCoords;\n#endif\n\n    float depthBias;\n    float depth;\n    float nDotL;\n    vec2 texelStepSize;\n    float normalShadingSmooth;\n    float darkness;\n};\n"}),define("Shaders/Builtin/Functions/alphaWeight",[],function(){"use strict"
;return"/**\n * @private\n */\nfloat czm_alphaWeight(float a)\n{\n    float z = (gl_FragCoord.z - czm_viewportTransformation[3][2]) / czm_viewportTransformation[2][2];\n\n    // See Weighted Blended Order-Independent Transparency for examples of different weighting functions:\n    // http://jcgt.org/published/0002/02/09/\n    return pow(a + 0.01, 4.0) + max(1e-2, min(3.0 * 1e3, 0.003 / (1e-5 + pow(abs(z) / 200.0, 4.0))));\n}\n"}),define("Shaders/Builtin/Functions/antialias",[],function(){"use strict";return"/**\n * Procedural anti-aliasing by blurring two colors that meet at a sharp edge.\n *\n * @name czm_antialias\n * @glslFunction\n *\n * @param {vec4} color1 The color on one side of the edge.\n * @param {vec4} color2 The color on the other side of the edge.\n * @param {vec4} currentcolor The current color, either <code>color1</code> or <code>color2</code>.\n * @param {float} dist The distance to the edge in texture coordinates.\n * @param {float} [fuzzFactor=0.1] Controls the blurriness between the two colors.\n * @returns {vec4} The anti-aliased color.\n *\n * @example\n * // GLSL declarations\n * vec4 czm_antialias(vec4 color1, vec4 color2, vec4 currentColor, float dist, float fuzzFactor);\n * vec4 czm_antialias(vec4 color1, vec4 color2, vec4 currentColor, float dist);\n *\n * // get the color for a material that has a sharp edge at the line y = 0.5 in texture space\n * float dist = abs(textureCoordinates.t - 0.5);\n * vec4 currentColor = mix(bottomColor, topColor, step(0.5, textureCoordinates.t));\n * vec4 color = czm_antialias(bottomColor, topColor, currentColor, dist, 0.1);\n */\nvec4 czm_antialias(vec4 color1, vec4 color2, vec4 currentColor, float dist, float fuzzFactor)\n{\n    float val1 = clamp(dist / fuzzFactor, 0.0, 1.0);\n    float val2 = clamp((dist - 0.5) / fuzzFactor, 0.0, 1.0);\n    val1 = val1 * (1.0 - val2);\n    val1 = val1 * val1 * (3.0 - (2.0 * val1));\n    val1 = pow(val1, 0.5); //makes the transition nicer\n    \n    vec4 midColor = (color1 + color2) * 0.5;\n    return mix(midColor, currentColor, val1);\n}\n\nvec4 czm_antialias(vec4 color1, vec4 color2, vec4 currentColor, float dist)\n{\n    return czm_antialias(color1, color2, currentColor, dist, 0.1);\n}\n"}),define("Shaders/Builtin/Functions/approximateSphericalCoordinates",[],function(){"use strict";return"/**\n * Approximately computes spherical coordinates given a normal.\n * Uses approximate inverse trigonometry for speed and consistency,\n * since inverse trigonometry can differ from vendor-to-vendor and when compared with the CPU.\n *\n * @name czm_approximateSphericalCoordinates\n * @glslFunction\n *\n * @param {vec3} normal arbitrary-length normal.\n *\n * @returns {vec2} Approximate latitude and longitude spherical coordinates.\n */\nvec2 czm_approximateSphericalCoordinates(vec3 normal) {\n    // Project into plane with vertical for latitude\n    float latitudeApproximation = czm_fastApproximateAtan(sqrt(normal.x * normal.x + normal.y * normal.y), normal.z);\n    float longitudeApproximation = czm_fastApproximateAtan(normal.x, normal.y);\n    return vec2(latitudeApproximation, longitudeApproximation);\n}\n"}),define("Shaders/Builtin/Functions/branchFreeTernary",[],function(){"use strict";return"/**\n * Branchless ternary operator to be used when it's inexpensive to explicitly\n * evaluate both possibilities for a float expression.\n *\n * @name czm_branchFreeTernary\n * @glslFunction\n *\n * @param {bool} comparison A comparison statement\n * @param {float} a Value to return if the comparison is true.\n * @param {float} b Value to return if the comparison is false.\n *\n * @returns {float} equivalent of comparison ? a : b\n */\nfloat czm_branchFreeTernary(bool comparison, float a, float b) {\n    float useA = float(comparison);\n    return a * useA + b * (1.0 - useA);\n}\n\n/**\n * Branchless ternary operator to be used when it's inexpensive to explicitly\n * evaluate both possibilities for a vec2 expression.\n *\n * @name czm_branchFreeTernary\n * @glslFunction\n *\n * @param {bool} comparison A comparison statement\n * @param {vec2} a Value to return if the comparison is true.\n * @param {vec2} b Value to return if the comparison is false.\n *\n * @returns {vec2} equivalent of comparison ? a : b\n */\nvec2 czm_branchFreeTernary(bool comparison, vec2 a, vec2 b) {\n    float useA = float(comparison);\n    return a * useA + b * (1.0 - useA);\n}\n\n/**\n * Branchless ternary operator to be used when it's inexpensive to explicitly\n * evaluate both possibilities for a vec3 expression.\n *\n * @name czm_branchFreeTernary\n * @glslFunction\n *\n * @param {bool} comparison A comparison statement\n * @param {vec3} a Value to return if the comparison is true.\n * @param {vec3} b Value to return if the comparison is false.\n *\n * @returns {vec3} equivalent of comparison ? a : b\n */\nvec3 czm_branchFreeTernary(bool comparison, vec3 a, vec3 b) {\n    float useA = float(comparison);\n    return a * useA + b * (1.0 - useA);\n}\n\n/**\n * Branchless ternary operator to be used when it's inexpensive to explicitly\n * evaluate both possibilities for a vec4 expression.\n *\n * @name czm_branchFreeTernary\n * @glslFunction\n *\n * @param {bool} comparison A comparison statement\n * @param {vec3} a Value to return if the comparison is true.\n * @param {vec3} b Value to return if the comparison is false.\n *\n * @returns {vec3} equivalent of comparison ? a : b\n */\nvec4 czm_branchFreeTernary(bool comparison, vec4 a, vec4 b) {\n    float useA = float(comparison);\n    return a * useA + b * (1.0 - useA);\n}\n"}),define("Shaders/Builtin/Functions/cascadeColor",[],function(){"use strict";return"\nvec4 czm_cascadeColor(vec4 weights)\n{\n    return vec4(1.0, 0.0, 0.0, 1.0) * weights.x +\n           vec4(0.0, 1.0, 0.0, 1.0) * weights.y +\n           vec4(0.0, 0.0, 1.0, 1.0) * weights.z +\n           vec4(1.0, 0.0, 1.0, 1.0) * weights.w;\n}\n"}),define("Shaders/Builtin/Functions/cascadeDistance",[],function(){"use strict";return"\nuniform vec4 shadowMap_cascadeDistances;\n\nfloat czm_cascadeDistance(vec4 weights)\n{\n    return dot(shadowMap_cascadeDistances, weights);\n}\n"}),define("Shaders/Builtin/Functions/cascadeMatrix",[],function(){"use strict";return"\nuniform mat4 shadowMap_cascadeMatrices[4];\n\nmat4 czm_cascadeMatrix(vec4 weights)\n{\n    return shadowMap_cascadeMatrices[0] * weights.x +\n           shadowMap_cascadeMatrices[1] * weights.y +\n           shadowMap_cascadeMatrices[2] * weights.z +\n           shadowMap_cascadeMatrices[3] * weights.w;\n}\n"}),define("Shaders/Builtin/Functions/cascadeWeights",[],function(){"use strict";return"\nuniform vec4 shadowMap_cascadeSplits[2];\n\nvec4 czm_cascadeWeights(float depthEye)\n{\n    // One component is set to 1.0 and all others set to 0.0.\n    vec4 near = step(shadowMap_cascadeSplits[0], vec4(depthEye));\n    vec4 far = step(depthEye, shadowMap_cascadeSplits[1]);\n    return near * far;\n}\n"}),define("Shaders/Builtin/Functions/columbusViewMorph",[],function(){"use strict";return"/**\n * DOC_TBA\n *\n * @name czm_columbusViewMorph\n * @glslFunction\n */\nvec4 czm_columbusViewMorph(vec4 position2D, vec4 position3D, float time)\n{\n    // Just linear for now.\n    vec3 p = mix(position2D.xyz, position3D.xyz, time);\n    return vec4(p, 1.0);\n}\n"}),define("Shaders/Builtin/Functions/computePosition",[],function(){"use strict";return"/**\n * Returns a position in model coordinates relative to eye taking into\n * account the current scene mode: 3D, 2D, or Columbus view.\n * <p>\n * This uses standard position attributes, <code>position3DHigh</code>, \n * <code>position3DLow</code>, <code>position2DHigh</code>, and <code>position2DLow</code>, \n * and should be used when writing a vertex shader for an {@link Appearance}.\n * </p>\n *\n * @name czm_computePosition\n * @glslFunction\n *\n * @returns {vec4} The position relative to eye.\n *\n * @example\n * vec4 p = czm_computePosition();\n * v_positionEC = (czm_modelViewRelativeToEye * p).xyz;\n * gl_Position = czm_modelViewProjectionRelativeToEye * p;\n *\n * @see czm_translateRelativeToEye\n */\nvec4 czm_computePosition();\n"}),define("Shaders/Builtin/Functions/cosineAndSine",[],function(){"use strict";return"/**\n * @private\n */\nvec2 cordic(float angle)\n{\n// Scale the vector by the appropriate factor for the 24 iterations to follow.\n    vec2 vector = vec2(6.0725293500888267e-1, 0.0);\n// Iteration 1\n    float sense = (angle < 0.0) ? -1.0 : 1.0;\n //   float factor = sense * 1.0;  // 2^-0\n    mat2 rotation = mat2(1.0, sense, -sense, 1.0);\n    vector = rotation * vector;\n    angle -= sense * 7.8539816339744828e-1;  // atan(2^-0)\n// Iteration 2\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    float factor = sense * 5.0e-1;  // 2^-1\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 4.6364760900080609e-1;  // atan(2^-1)\n// Iteration 3\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 2.5e-1;  // 2^-2\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 2.4497866312686414e-1;  // atan(2^-2)\n// Iteration 4\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 1.25e-1;  // 2^-3\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 1.2435499454676144e-1;  // atan(2^-3)\n// Iteration 5\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 6.25e-2;  // 2^-4\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 6.2418809995957350e-2;  // atan(2^-4)\n// Iteration 6\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 3.125e-2;  // 2^-5\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 3.1239833430268277e-2;  // atan(2^-5)\n// Iteration 7\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 1.5625e-2;  // 2^-6\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 1.5623728620476831e-2;  // atan(2^-6)\n// Iteration 8\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 7.8125e-3;  // 2^-7\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 7.8123410601011111e-3;  // atan(2^-7)\n// Iteration 9\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 3.90625e-3;  // 2^-8\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 3.9062301319669718e-3;  // atan(2^-8)\n// Iteration 10\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 1.953125e-3;  // 2^-9\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 1.9531225164788188e-3;  // atan(2^-9)\n// Iteration 11\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 9.765625e-4;  // 2^-10\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 9.7656218955931946e-4;  // atan(2^-10)\n// Iteration 12\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 4.8828125e-4;  // 2^-11\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 4.8828121119489829e-4;  // atan(2^-11)\n// Iteration 13\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 2.44140625e-4;  // 2^-12\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 2.4414062014936177e-4;  // atan(2^-12)\n// Iteration 14\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 1.220703125e-4;  // 2^-13\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 1.2207031189367021e-4;  // atan(2^-13)\n// Iteration 15\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 6.103515625e-5;  // 2^-14\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 6.1035156174208773e-5;  // atan(2^-14)\n// Iteration 16\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 3.0517578125e-5;  // 2^-15\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 3.0517578115526096e-5;  // atan(2^-15)\n// Iteration 17\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 1.52587890625e-5;  // 2^-16\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 1.5258789061315762e-5;  // atan(2^-16)\n// Iteration 18\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 7.62939453125e-6;  // 2^-17\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 7.6293945311019700e-6;  // atan(2^-17)\n// Iteration 19\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 3.814697265625e-6;  // 2^-18\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 3.8146972656064961e-6;  // atan(2^-18)\n// Iteration 20\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 1.9073486328125e-6;  // 2^-19\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 1.9073486328101870e-6;  // atan(2^-19)\n// Iteration 21\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 9.5367431640625e-7;  // 2^-20\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 9.5367431640596084e-7;  // atan(2^-20)\n// Iteration 22\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 4.76837158203125e-7;  // 2^-21\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 4.7683715820308884e-7;  // atan(2^-21)\n// Iteration 23\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 2.384185791015625e-7;  // 2^-22\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n    angle -= sense * 2.3841857910155797e-7;  // atan(2^-22)\n// Iteration 24\n    sense = (angle < 0.0) ? -1.0 : 1.0;\n    factor = sense * 1.1920928955078125e-7;  // 2^-23\n    rotation[0][1] = factor;\n    rotation[1][0] = -factor;\n    vector = rotation * vector;\n//    angle -= sense * 1.1920928955078068e-7;  // atan(2^-23)\n\n    return vector;\n}\n\n/**\n * Computes the cosine and sine of the provided angle using the CORDIC algorithm.\n *\n * @name czm_cosineAndSine\n * @glslFunction\n *\n * @param {float} angle The angle in radians.\n *\n * @returns {vec2} The resulting cosine of the angle (as the x coordinate) and sine of the angle (as the y coordinate).\n *\n * @example\n * vec2 v = czm_cosineAndSine(czm_piOverSix);\n * float cosine = v.x;\n * float sine = v.y;\n */\nvec2 czm_cosineAndSine(float angle)\n{\n    if (angle < -czm_piOverTwo || angle > czm_piOverTwo)\n    {\n        if (angle < 0.0)\n        {\n            return -cordic(angle + czm_pi);\n        }\n        else\n        {\n            return -cordic(angle - czm_pi);\n        }\n    }\n    else\n    {\n        return cordic(angle);\n    }\n}\n"}),define("Shaders/Builtin/Functions/decompressTextureCoordinates",[],function(){"use strict";return"/**\n * Decompresses texture coordinates that were packed into a single float.\n *\n * @name czm_decompressTextureCoordinates\n * @glslFunction\n *\n * @param {float} encoded The compressed texture coordinates.\n * @returns {vec2} The decompressed texture coordinates.\n */\n vec2 czm_decompressTextureCoordinates(float encoded)\n {\n    float temp = encoded / 4096.0;\n    float xZeroTo4095 = floor(temp);\n    float stx = xZeroTo4095 / 4095.0;\n    float sty = (encoded - xZeroTo4095 * 4096.0) / 4095.0;\n    return vec2(stx, sty);\n }\n"}),define("Shaders/Builtin/Functions/depthClampFarPlane",[],function(){"use strict";return"// emulated noperspective\n#ifndef LOG_DEPTH\nvarying float v_WindowZ;\n#endif\n\n/**\n * Clamps a vertex to the far plane.\n *\n * @name czm_depthClampFarPlane\n * @glslFunction\n *\n * @param {vec4} coords The vertex in clip coordinates.\n * @returns {vec4} The vertex clipped to the far plane.\n *\n * @example\n * gl_Position = czm_depthClampFarPlane(czm_modelViewProjection * vec4(position, 1.0));\n *\n * @see czm_writeDepthClampedToFarPlane\n */\nvec4 czm_depthClampFarPlane(vec4 coords)\n{\n#ifndef LOG_DEPTH\n    v_WindowZ = (0.5 * (coords.z / coords.w) + 0.5) * coords.w;\n    coords.z = min(coords.z, coords.w);\n#endif\n    return coords;\n}\n"}),define("Shaders/Builtin/Functions/eastNorthUpToEyeCoordinates",[],function(){"use strict";return"/**\n * Computes a 3x3 rotation matrix that transforms vectors from an ellipsoid's east-north-up coordinate system \n * to eye coordinates.  In east-north-up coordinates, x points east, y points north, and z points along the \n * surface normal.  East-north-up can be used as an ellipsoid's tangent space for operations such as bump mapping.\n * <br /><br />\n * The ellipsoid is assumed to be centered at the model coordinate's origin.\n *\n * @name czm_eastNorthUpToEyeCoordinates\n * @glslFunction\n *\n * @param {vec3} positionMC The position on the ellipsoid in model coordinates.\n * @param {vec3} normalEC The normalized ellipsoid surface normal, at <code>positionMC</code>, in eye coordinates.\n *\n * @returns {mat3} A 3x3 rotation matrix that transforms vectors from the east-north-up coordinate system to eye coordinates.\n *\n * @example\n * // Transform a vector defined in the east-north-up coordinate \n * // system, (0, 0, 1) which is the surface normal, to eye \n * // coordinates.\n * mat3 m = czm_eastNorthUpToEyeCoordinates(positionMC, normalEC);\n * vec3 normalEC = m * vec3(0.0, 0.0, 1.0);\n */\nmat3 czm_eastNorthUpToEyeCoordinates(vec3 positionMC, vec3 normalEC)\n{\n    vec3 tangentMC = normalize(vec3(-positionMC.y, positionMC.x, 0.0));  // normalized surface tangent in model coordinates\n    vec3 tangentEC = normalize(czm_normal3D * tangentMC);                // normalized surface tangent in eye coordiantes\n    vec3 bitangentEC = normalize(cross(normalEC, tangentEC));            // normalized surface bitangent in eye coordinates\n\n    return mat3(\n        tangentEC.x,   tangentEC.y,   tangentEC.z,\n        bitangentEC.x, bitangentEC.y, bitangentEC.z,\n        normalEC.x,    normalEC.y,    normalEC.z);\n}\n"}),define("Shaders/Builtin/Functions/ellipsoidContainsPoint",[],function(){"use strict";return"/**\n * DOC_TBA\n *\n * @name czm_ellipsoidContainsPoint\n * @glslFunction\n *\n */\nbool czm_ellipsoidContainsPoint(czm_ellipsoid ellipsoid, vec3 point)\n{\n    vec3 scaled = ellipsoid.inverseRadii * (czm_inverseModelView * vec4(point, 1.0)).xyz;\n    return (dot(scaled, scaled) <= 1.0);\n}\n"}),define("Shaders/Builtin/Functions/ellipsoidNew",[],function(){"use strict";return"/**\n * DOC_TBA\n *\n * @name czm_ellipsoidNew\n * @glslFunction\n *\n */\nczm_ellipsoid czm_ellipsoidNew(vec3 center, vec3 radii)\n{\n    vec3 inverseRadii = vec3(1.0 / radii.x, 1.0 / radii.y, 1.0 / radii.z);\n    vec3 inverseRadiiSquared = inverseRadii * inverseRadii;\n    czm_ellipsoid temp = czm_ellipsoid(center, radii, inverseRadii, inverseRadiiSquared);\n    return temp;\n}\n"}),define("Shaders/Builtin/Functions/ellipsoidWgs84TextureCoordinates",[],function(){"use strict";return"/**\n * DOC_TBA\n *\n * @name czm_ellipsoidWgs84TextureCoordinates\n * @glslFunction\n */\nvec2 czm_ellipsoidWgs84TextureCoordinates(vec3 normal)\n{\n    return vec2(atan(normal.y, normal.x) * czm_oneOverTwoPi + 0.5, asin(normal.z) * czm_oneOverPi + 0.5);\n}\n"}),define("Shaders/Builtin/Functions/equalsEpsilon",[],function(){"use strict";return"/**\n * Compares <code>left</code> and <code>right</code> componentwise. Returns <code>true</code>\n * if they are within <code>epsilon</code> and <code>false</code> otherwise. The inputs\n * <code>left</code> and <code>right</code> can be <code>float</code>s, <code>vec2</code>s,\n * <code>vec3</code>s, or <code>vec4</code>s.\n *\n * @name czm_equalsEpsilon\n * @glslFunction\n *\n * @param {} left The first vector.\n * @param {} right The second vector.\n * @param {float} epsilon The epsilon to use for equality testing.\n * @returns {bool} <code>true</code> if the components are within <code>epsilon</code> and <code>false</code> otherwise.\n *\n * @example\n * // GLSL declarations\n * bool czm_equalsEpsilon(float left, float right, float epsilon);\n * bool czm_equalsEpsilon(vec2 left, vec2 right, float epsilon);\n * bool czm_equalsEpsilon(vec3 left, vec3 right, float epsilon);\n * bool czm_equalsEpsilon(vec4 left, vec4 right, float epsilon);\n */\nbool czm_equalsEpsilon(vec4 left, vec4 right, float epsilon) {\n    return all(lessThanEqual(abs(left - right), vec4(epsilon)));\n}\n\nbool czm_equalsEpsilon(vec3 left, vec3 right, float epsilon) {\n    return all(lessThanEqual(abs(left - right), vec3(epsilon)));\n}\n\nbool czm_equalsEpsilon(vec2 left, vec2 right, float epsilon) {\n    return all(lessThanEqual(abs(left - right), vec2(epsilon)));\n}\n\nbool czm_equalsEpsilon(float left, float right, float epsilon) {\n    return (abs(left - right) <= epsilon);\n}\n"}),define("Shaders/Builtin/Functions/eyeOffset",[],function(){"use strict";return"/**\n * DOC_TBA\n *\n * @name czm_eyeOffset\n * @glslFunction\n *\n * @param {vec4} positionEC DOC_TBA.\n * @param {vec3} eyeOffset DOC_TBA.\n *\n * @returns {vec4} DOC_TBA.\n */\nvec4 czm_eyeOffset(vec4 positionEC, vec3 eyeOffset)\n{\n    // This equation is approximate in x and y.\n    vec4 p = positionEC;\n    vec4 zEyeOffset = normalize(p) * eyeOffset.z;\n    p.xy += eyeOffset.xy + zEyeOffset.xy;\n    p.z += zEyeOffset.z;\n    return p;\n}\n"}),define("Shaders/Builtin/Functions/eyeToWindowCoordinates",[],function(){"use strict";return"/**\n * Transforms a position from eye to window coordinates.  The transformation\n * from eye to clip coordinates is done using {@link czm_projection}.\n * The transform from normalized device coordinates to window coordinates is\n * done using {@link czm_viewportTransformation}, which assumes a depth range\n * of <code>near = 0</code> and <code>far = 1</code>.\n * <br /><br />\n * This transform is useful when there is a need to manipulate window coordinates\n * in a vertex shader as done by {@link BillboardCollection}.\n *\n * @name czm_eyeToWindowCoordinates\n * @glslFunction\n *\n * @param {vec4} position The position in eye coordinates to transform.\n *\n * @returns {vec4} The transformed position in window coordinates.\n *\n * @see czm_modelToWindowCoordinates\n * @see czm_projection\n * @see czm_viewportTransformation\n * @see BillboardCollection\n *\n * @example\n * vec4 positionWC = czm_eyeToWindowCoordinates(positionEC);\n */\nvec4 czm_eyeToWindowCoordinates(vec4 positionEC)\n{\n    vec4 q = czm_projection * positionEC;                        // clip coordinates\n    q.xyz /= q.w;                                                // normalized device coordinates\n    q.xyz = (czm_viewportTransformation * vec4(q.xyz, 1.0)).xyz; // window coordinates\n    return q;\n}\n"}),define("Shaders/Builtin/Functions/fastApproximateAtan",[],function(){"use strict";return"/**\n * Approxiamtes atan over the range [0, 1]. Safe to flip output for negative input.\n *\n * Based on Michal Drobot's approximation from ShaderFastLibs, which in turn is based on\n * \"Efficient approximations for the arctangent function,\" Rajan, S. Sichun Wang Inkol, R. Joyal, A., May 2006.\n * Adapted from ShaderFastLibs under MIT License.\n *\n * Chosen for the following characteristics over range [0, 1]:\n * - basically no error at 0 and 1, important for getting around range limit (naive atan2 via atan requires infinite range atan)\n * - no visible artifacts from first-derivative discontinuities, unlike latitude via range-reduced sqrt asin approximations (at equator)\n *\n * The original code is x * (-0.1784 * abs(x) - 0.0663 * x * x + 1.0301);\n * Removed the abs() in here because it isn't needed, the input range is guaranteed as [0, 1] by how we're approximating atan2.\n *\n * @name czm_fastApproximateAtan\n * @glslFunction\n *\n * @param {float} x Value between 0 and 1 inclusive.\n *\n * @returns {float} Approximation of atan(x)\n */\nfloat czm_fastApproximateAtan(float x) {\n    return x * (-0.1784 * x - 0.0663 * x * x + 1.0301);\n}\n\n/**\n * Approximation of atan2.\n *\n * Range reduction math based on nvidia's cg reference implementation for atan2: http://developer.download.nvidia.com/cg/atan2.html\n * However, we replaced their atan curve with Michael Drobot's (see above).\n *\n * @name czm_fastApproximateAtan\n * @glslFunction\n *\n * @param {float} x Value between -1 and 1 inclusive.\n * @param {float} y Value between -1 and 1 inclusive.\n *\n * @returns {float} Approximation of atan2(x, y)\n */\nfloat czm_fastApproximateAtan(float x, float y) {\n    // atan approximations are usually only reliable over [-1, 1], or, in our case, [0, 1] due to modifications.\n    // So range-reduce using abs and by flipping whether x or y is on top.\n    float t = abs(x); // t used as swap and atan result.\n    float opposite = abs(y);\n    float adjacent = max(t, opposite);\n    opposite = min(t, opposite);\n\n    t = czm_fastApproximateAtan(opposite / adjacent);\n\n    // Undo range reduction\n    t = czm_branchFreeTernary(abs(y) > abs(x), czm_piOverTwo - t, t);\n    t = czm_branchFreeTernary(x < 0.0, czm_pi - t, t);\n    t = czm_branchFreeTernary(y < 0.0, -t, t);\n    return t;\n}\n"}),define("Shaders/Builtin/Functions/fog",[],function(){"use strict";return"/**\n * Gets the color with fog at a distance from the camera.\n * \n * @name czm_fog\n * @glslFunction\n * \n * @param {float} distanceToCamera The distance to the camera in meters.\n * @param {vec3} color The original color.\n * @param {vec3} fogColor The color of the fog.\n *\n * @returns {vec3} The color adjusted for fog at the distance from the camera.\n */\nvec3 czm_fog(float distanceToCamera, vec3 color, vec3 fogColor)\n{\n    float scalar = distanceToCamera * czm_fogDensity;\n    float fog = 1.0 - exp(-(scalar * scalar));\n    \n    return mix(color, fogColor, fog);\n}\n"}),define("Shaders/Builtin/Functions/geodeticSurfaceNormal",[],function(){"use strict";return"/**\n * DOC_TBA\n *\n * @name czm_geodeticSurfaceNormal\n * @glslFunction\n *\n * @param {vec3} positionOnEllipsoid DOC_TBA\n * @param {vec3} ellipsoidCenter DOC_TBA\n * @param {vec3} oneOverEllipsoidRadiiSquared DOC_TBA\n * \n * @returns {vec3} DOC_TBA.\n */\nvec3 czm_geodeticSurfaceNormal(vec3 positionOnEllipsoid, vec3 ellipsoidCenter, vec3 oneOverEllipsoidRadiiSquared)\n{\n    return normalize((positionOnEllipsoid - ellipsoidCenter) * oneOverEllipsoidRadiiSquared);\n}\n"}),define("Shaders/Builtin/Functions/getDefaultMaterial",[],function(){"use strict";return"/**\n * An czm_material with default values. Every material's czm_getMaterial\n * should use this default material as a base for the material it returns.\n * The default normal value is given by materialInput.normalEC.\n *\n * @name czm_getDefaultMaterial\n * @glslFunction\n *\n * @param {czm_materialInput} input The input used to construct the default material.\n *\n * @returns {czm_material} The default material.\n *\n * @see czm_materialInput\n * @see czm_material\n * @see czm_getMaterial\n */\nczm_material czm_getDefaultMaterial(czm_materialInput materialInput)\n{\n    czm_material material;\n    material.diffuse = vec3(0.0);\n    material.specular = 0.0;\n    material.shininess = 1.0;\n    material.normal = materialInput.normalEC;\n    material.emission = vec3(0.0);\n    material.alpha = 1.0;\n    return material;\n}\n"}),define("Shaders/Builtin/Functions/getLambertDiffuse",[],function(){"use strict";return"/**\n * Calculates the intensity of diffusely reflected light.\n *\n * @name czm_getLambertDiffuse\n * @glslFunction\n *\n * @param {vec3} lightDirectionEC Unit vector pointing to the light source in eye coordinates.\n * @param {vec3} normalEC The surface normal in eye coordinates.\n *\n * @returns {float} The intensity of the diffuse reflection.\n *\n * @see czm_phong\n *\n * @example\n * float diffuseIntensity = czm_getLambertDiffuse(lightDirectionEC, normalEC);\n * float specularIntensity = czm_getSpecular(lightDirectionEC, toEyeEC, normalEC, 200);\n * vec3 color = (diffuseColor * diffuseIntensity) + (specularColor * specularIntensity);\n */\nfloat czm_getLambertDiffuse(vec3 lightDirectionEC, vec3 normalEC)\n{\n    return max(dot(lightDirectionEC, normalEC), 0.0);\n}\n"}),define("Shaders/Builtin/Functions/getSpecular",[],function(){"use strict";return"/**\n * Calculates the specular intensity of reflected light.\n *\n * @name czm_getSpecular\n * @glslFunction\n *\n * @param {vec3} lightDirectionEC Unit vector pointing to the light source in eye coordinates.\n * @param {vec3} toEyeEC Unit vector pointing to the eye position in eye coordinates.\n * @param {vec3} normalEC The surface normal in eye coordinates.\n * @param {float} shininess The sharpness of the specular reflection.  Higher values create a smaller, more focused specular highlight.\n *\n * @returns {float} The intensity of the specular highlight.\n *\n * @see czm_phong\n *\n * @example\n * float diffuseIntensity = czm_getLambertDiffuse(lightDirectionEC, normalEC);\n * float specularIntensity = czm_getSpecular(lightDirectionEC, toEyeEC, normalEC, 200);\n * vec3 color = (diffuseColor * diffuseIntensity) + (specularColor * specularIntensity);\n */\nfloat czm_getSpecular(vec3 lightDirectionEC, vec3 toEyeEC, vec3 normalEC, float shininess)\n{\n    vec3 toReflectedLight = reflect(-lightDirectionEC, normalEC);\n    float specular = max(dot(toReflectedLight, toEyeEC), 0.0);\n\n    // pow has undefined behavior if both parameters <= 0.\n    // Prevent this by making sure shininess is at least czm_epsilon2.\n    return pow(specular, max(shininess, czm_epsilon2));\n}\n"}),define("Shaders/Builtin/Functions/getWaterNoise",[],function(){"use strict";return"/**\n * @private\n */\nvec4 czm_getWaterNoise(sampler2D normalMap, vec2 uv, float time, float angleInRadians)\n{\n    float cosAngle = cos(angleInRadians);\n    float sinAngle = sin(angleInRadians);\n\n    // time dependent sampling directions\n    vec2 s0 = vec2(1.0/17.0, 0.0);\n    vec2 s1 = vec2(-1.0/29.0, 0.0);\n    vec2 s2 = vec2(1.0/101.0, 1.0/59.0);\n    vec2 s3 = vec2(-1.0/109.0, -1.0/57.0);\n\n    // rotate sampling direction by specified angle\n    s0 = vec2((cosAngle * s0.x) - (sinAngle * s0.y), (sinAngle * s0.x) + (cosAngle * s0.y));\n    s1 = vec2((cosAngle * s1.x) - (sinAngle * s1.y), (sinAngle * s1.x) + (cosAngle * s1.y));\n    s2 = vec2((cosAngle * s2.x) - (sinAngle * s2.y), (sinAngle * s2.x) + (cosAngle * s2.y));\n    s3 = vec2((cosAngle * s3.x) - (sinAngle * s3.y), (sinAngle * s3.x) + (cosAngle * s3.y));\n\n    vec2 uv0 = (uv/103.0) + (time * s0);\n    vec2 uv1 = uv/107.0 + (time * s1) + vec2(0.23);\n    vec2 uv2 = uv/vec2(897.0, 983.0) + (time * s2) + vec2(0.51);\n    vec2 uv3 = uv/vec2(991.0, 877.0) + (time * s3) + vec2(0.71);\n\n    uv0 = fract(uv0);\n    uv1 = fract(uv1);\n    uv2 = fract(uv2);\n    uv3 = fract(uv3);\n    vec4 noise = (texture2D(normalMap, uv0)) +\n                 (texture2D(normalMap, uv1)) +\n                 (texture2D(normalMap, uv2)) +\n                 (texture2D(normalMap, uv3));\n\n    // average and scale to between -1 and 1\n    return ((noise / 4.0) - 0.5) * 2.0;\n}\n"}),define("Shaders/Builtin/Functions/getWgs84EllipsoidEC",[],function(){"use strict"
;return"/**\n * Returns the WGS84 ellipsoid, with its center at the origin of world coordinates, in eye coordinates.\n *\n * @name czm_getWgs84EllipsoidEC\n * @glslFunction\n *\n * @returns {czm_ellipsoid} The WGS84 ellipsoid, with its center at the origin of world coordinates, in eye coordinates.\n *\n * @see Ellipsoid.WGS84\n *\n * @example\n * czm_ellipsoid ellipsoid = czm_getWgs84EllipsoidEC();\n */\nczm_ellipsoid czm_getWgs84EllipsoidEC()\n{\n    vec3 radii = vec3(6378137.0, 6378137.0, 6356752.314245);\n    vec3 inverseRadii = vec3(1.0 / radii.x, 1.0 / radii.y, 1.0 / radii.z);\n    vec3 inverseRadiiSquared = inverseRadii * inverseRadii;\n    czm_ellipsoid temp = czm_ellipsoid(czm_view[3].xyz, radii, inverseRadii, inverseRadiiSquared);\n    return temp;\n}\n"}),define("Shaders/Builtin/Functions/HSBToRGB",[],function(){"use strict";return"/**\n * Converts an HSB color (hue, saturation, brightness) to RGB\n * HSB <-> RGB conversion with minimal branching: {@link http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl}\n *\n * @name czm_HSBToRGB\n * @glslFunction\n * \n * @param {vec3} hsb The color in HSB.\n *\n * @returns {vec3} The color in RGB.\n *\n * @example\n * vec3 hsb = czm_RGBToHSB(rgb);\n * hsb.z *= 0.1;\n * rgb = czm_HSBToRGB(hsb);\n */\n\nconst vec4 K_HSB2RGB = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\nvec3 czm_HSBToRGB(vec3 hsb)\n{\n    vec3 p = abs(fract(hsb.xxx + K_HSB2RGB.xyz) * 6.0 - K_HSB2RGB.www);\n    return hsb.z * mix(K_HSB2RGB.xxx, clamp(p - K_HSB2RGB.xxx, 0.0, 1.0), hsb.y);\n}\n"}),define("Shaders/Builtin/Functions/HSLToRGB",[],function(){"use strict";return"/**\n * Converts an HSL color (hue, saturation, lightness) to RGB\n * HSL <-> RGB conversion: {@link http://www.chilliant.com/rgb2hsv.html}\n *\n * @name czm_HSLToRGB\n * @glslFunction\n * \n * @param {vec3} rgb The color in HSL.\n *\n * @returns {vec3} The color in RGB.\n *\n * @example\n * vec3 hsl = czm_RGBToHSL(rgb);\n * hsl.z *= 0.1;\n * rgb = czm_HSLToRGB(hsl);\n */\n\nvec3 hueToRGB(float hue)\n{\n    float r = abs(hue * 6.0 - 3.0) - 1.0;\n    float g = 2.0 - abs(hue * 6.0 - 2.0);\n    float b = 2.0 - abs(hue * 6.0 - 4.0);\n    return clamp(vec3(r, g, b), 0.0, 1.0);\n}\n\nvec3 czm_HSLToRGB(vec3 hsl)\n{\n    vec3 rgb = hueToRGB(hsl.x);\n    float c = (1.0 - abs(2.0 * hsl.z - 1.0)) * hsl.y;\n    return (rgb - 0.5) * c + hsl.z;\n}\n"}),define("Shaders/Builtin/Functions/hue",[],function(){"use strict";return"/**\n * Adjusts the hue of a color.\n * \n * @name czm_hue\n * @glslFunction\n * \n * @param {vec3} rgb The color.\n * @param {float} adjustment The amount to adjust the hue of the color in radians.\n *\n * @returns {float} The color with the hue adjusted.\n *\n * @example\n * vec3 adjustHue = czm_hue(color, czm_pi); // The same as czm_hue(color, -czm_pi)\n */\nvec3 czm_hue(vec3 rgb, float adjustment)\n{\n    const mat3 toYIQ = mat3(0.299,     0.587,     0.114,\n                            0.595716, -0.274453, -0.321263,\n                            0.211456, -0.522591,  0.311135);\n    const mat3 toRGB = mat3(1.0,  0.9563,  0.6210,\n                            1.0, -0.2721, -0.6474,\n                            1.0, -1.107,   1.7046);\n    \n    vec3 yiq = toYIQ * rgb;\n    float hue = atan(yiq.z, yiq.y) + adjustment;\n    float chroma = sqrt(yiq.z * yiq.z + yiq.y * yiq.y);\n    \n    vec3 color = vec3(yiq.x, chroma * cos(hue), chroma * sin(hue));\n    return toRGB * color;\n}\n"}),define("Shaders/Builtin/Functions/isEmpty",[],function(){"use strict";return"/**\n * Determines if a time interval is empty.\n *\n * @name czm_isEmpty\n * @glslFunction \n * \n * @param {czm_raySegment} interval The interval to test.\n * \n * @returns {bool} <code>true</code> if the time interval is empty; otherwise, <code>false</code>.\n *\n * @example\n * bool b0 = czm_isEmpty(czm_emptyRaySegment);      // true\n * bool b1 = czm_isEmpty(czm_raySegment(0.0, 1.0)); // false\n * bool b2 = czm_isEmpty(czm_raySegment(1.0, 1.0)); // false, contains 1.0.\n */\nbool czm_isEmpty(czm_raySegment interval)\n{\n    return (interval.stop < 0.0);\n}\n"}),define("Shaders/Builtin/Functions/isFull",[],function(){"use strict";return"/**\n * Determines if a time interval is empty.\n *\n * @name czm_isFull\n * @glslFunction \n * \n * @param {czm_raySegment} interval The interval to test.\n * \n * @returns {bool} <code>true</code> if the time interval is empty; otherwise, <code>false</code>.\n *\n * @example\n * bool b0 = czm_isEmpty(czm_emptyRaySegment);      // true\n * bool b1 = czm_isEmpty(czm_raySegment(0.0, 1.0)); // false\n * bool b2 = czm_isEmpty(czm_raySegment(1.0, 1.0)); // false, contains 1.0.\n */\nbool czm_isFull(czm_raySegment interval)\n{\n    return (interval.start == 0.0 && interval.stop == czm_infinity);\n}\n"}),define("Shaders/Builtin/Functions/latitudeToWebMercatorFraction",[],function(){"use strict";return"/**\n * Computes the fraction of a Web Wercator rectangle at which a given geodetic latitude is located.\n *\n * @name czm_latitudeToWebMercatorFraction\n * @glslFunction\n *\n * @param {float} latitude The geodetic latitude, in radians.\n * @param {float} southMercatorY The Web Mercator coordinate of the southern boundary of the rectangle.\n * @param {float} oneOverMercatorHeight The total height of the rectangle in Web Mercator coordinates.\n *\n * @returns {float} The fraction of the rectangle at which the latitude occurs.  If the latitude is the southern\n *          boundary of the rectangle, the return value will be zero.  If it is the northern boundary, the return\n *          value will be 1.0.  Latitudes in between are mapped according to the Web Mercator projection.\n */ \nfloat czm_latitudeToWebMercatorFraction(float latitude, float southMercatorY, float oneOverMercatorHeight)\n{\n    float sinLatitude = sin(latitude);\n    float mercatorY = 0.5 * log((1.0 + sinLatitude) / (1.0 - sinLatitude));\n    \n    return (mercatorY - southMercatorY) * oneOverMercatorHeight;\n}\n"}),define("Shaders/Builtin/Functions/lineDistance",[],function(){"use strict";return"/**\n * Computes distance from an point in 2D to a line in 2D.\n *\n * @name czm_lineDistance\n * @glslFunction\n *\n * param {vec2} point1 A point along the line.\n * param {vec2} point2 A point along the line.\n * param {vec2} point A point that may or may not be on the line.\n * returns {float} The distance from the point to the line.\n */\nfloat czm_lineDistance(vec2 point1, vec2 point2, vec2 point) {\n    return abs((point2.y - point1.y) * point.x - (point2.x - point1.x) * point.y + point2.x * point1.y - point2.y * point1.x) / distance(point2, point1);\n}\n"}),define("Shaders/Builtin/Functions/luminance",[],function(){"use strict";return"/**\n * Computes the luminance of a color. \n *\n * @name czm_luminance\n * @glslFunction\n *\n * @param {vec3} rgb The color.\n * \n * @returns {float} The luminance.\n *\n * @example\n * float light = czm_luminance(vec3(0.0)); // 0.0\n * float dark = czm_luminance(vec3(1.0));  // ~1.0 \n */\nfloat czm_luminance(vec3 rgb)\n{\n    // Algorithm from Chapter 10 of Graphics Shaders.\n    const vec3 W = vec3(0.2125, 0.7154, 0.0721);\n    return dot(rgb, W);\n}\n"}),define("Shaders/Builtin/Functions/metersPerPixel",[],function(){"use strict";return"/**\n * Computes the size of a pixel in meters at a distance from the eye.\n\n * @name czm_metersPerPixel\n * @glslFunction\n *\n * @param {vec3} positionEC The position to get the meters per pixel in eye coordinates.\n *\n * @returns {float} The meters per pixel at positionEC.\n */\nfloat czm_metersPerPixel(vec4 positionEC)\n{\n    float width = czm_viewport.z;\n    float height = czm_viewport.w;\n    float pixelWidth;\n    float pixelHeight;\n\n    float top = czm_frustumPlanes.x;\n    float bottom = czm_frustumPlanes.y;\n    float left = czm_frustumPlanes.z;\n    float right = czm_frustumPlanes.w;\n\n    if (czm_sceneMode == czm_sceneMode2D || czm_orthographicIn3D == 1.0)\n    {\n        float frustumWidth = right - left;\n        float frustumHeight = top - bottom;\n        pixelWidth = frustumWidth / width;\n        pixelHeight = frustumHeight / height;\n    }\n    else\n    {\n        float distanceToPixel = -positionEC.z;\n        float inverseNear = 1.0 / czm_currentFrustum.x;\n        float tanTheta = top * inverseNear;\n        pixelHeight = 2.0 * distanceToPixel * tanTheta / height;\n        tanTheta = right * inverseNear;\n        pixelWidth = 2.0 * distanceToPixel * tanTheta / width;\n    }\n\n    return max(pixelWidth, pixelHeight);\n}\n"}),define("Shaders/Builtin/Functions/modelToWindowCoordinates",[],function(){"use strict";return"/**\n * Transforms a position from model to window coordinates.  The transformation\n * from model to clip coordinates is done using {@link czm_modelViewProjection}.\n * The transform from normalized device coordinates to window coordinates is\n * done using {@link czm_viewportTransformation}, which assumes a depth range\n * of <code>near = 0</code> and <code>far = 1</code>.\n * <br /><br />\n * This transform is useful when there is a need to manipulate window coordinates\n * in a vertex shader as done by {@link BillboardCollection}.\n * <br /><br />\n * This function should not be confused with {@link czm_viewportOrthographic},\n * which is an orthographic projection matrix that transforms from window \n * coordinates to clip coordinates.\n *\n * @name czm_modelToWindowCoordinates\n * @glslFunction\n *\n * @param {vec4} position The position in model coordinates to transform.\n *\n * @returns {vec4} The transformed position in window coordinates.\n *\n * @see czm_eyeToWindowCoordinates\n * @see czm_modelViewProjection\n * @see czm_viewportTransformation\n * @see czm_viewportOrthographic\n * @see BillboardCollection\n *\n * @example\n * vec4 positionWC = czm_modelToWindowCoordinates(positionMC);\n */\nvec4 czm_modelToWindowCoordinates(vec4 position)\n{\n    vec4 q = czm_modelViewProjection * position;                // clip coordinates\n    q.xyz /= q.w;                                                // normalized device coordinates\n    q.xyz = (czm_viewportTransformation * vec4(q.xyz, 1.0)).xyz; // window coordinates\n    return q;\n}\n"}),define("Shaders/Builtin/Functions/multiplyWithColorBalance",[],function(){"use strict";return"/**\n * DOC_TBA\n *\n * @name czm_multiplyWithColorBalance\n * @glslFunction\n */\nvec3 czm_multiplyWithColorBalance(vec3 left, vec3 right)\n{\n    // Algorithm from Chapter 10 of Graphics Shaders.\n    const vec3 W = vec3(0.2125, 0.7154, 0.0721);\n    \n    vec3 target = left * right;\n    float leftLuminance = dot(left, W);\n    float rightLuminance = dot(right, W);\n    float targetLuminance = dot(target, W);\n    \n    return ((leftLuminance + rightLuminance) / (2.0 * targetLuminance)) * target;\n}\n"}),define("Shaders/Builtin/Functions/nearFarScalar",[],function(){"use strict";return"/**\n * Computes a value that scales with distance.  The scaling is clamped at the near and\n * far distances, and does not extrapolate.  This function works with the\n * {@link NearFarScalar} JavaScript class.\n *\n * @name czm_nearFarScalar\n * @glslFunction\n *\n * @param {vec4} nearFarScalar A vector with 4 components: Near distance (x), Near value (y), Far distance (z), Far value (w).\n * @param {float} cameraDistSq The square of the current distance from the camera.\n *\n * @returns {float} The value at this distance.\n */\nfloat czm_nearFarScalar(vec4 nearFarScalar, float cameraDistSq)\n{\n    float valueAtMin = nearFarScalar.y;\n    float valueAtMax = nearFarScalar.w;\n    float nearDistanceSq = nearFarScalar.x * nearFarScalar.x;\n    float farDistanceSq = nearFarScalar.z * nearFarScalar.z;\n\n    float t = (cameraDistSq - nearDistanceSq) / (farDistanceSq - nearDistanceSq);\n\n    t = pow(clamp(t, 0.0, 1.0), 0.2);\n\n    return mix(valueAtMin, valueAtMax, t);\n}\n"}),define("Shaders/Builtin/Functions/octDecode",[],function(){"use strict";return" /**\n  * Decodes a unit-length vector in 'oct' encoding to a normalized 3-component Cartesian vector.\n  * The 'oct' encoding is described in \"A Survey of Efficient Representations of Independent Unit Vectors\",\n  * Cigolle et al 2014: http://jcgt.org/published/0003/02/01/\n  *\n  * @name czm_octDecode\n  * @param {vec2} encoded The oct-encoded, unit-length vector\n  * @param {float} range The maximum value of the SNORM range. The encoded vector is stored in log2(rangeMax+1) bits.\n  * @returns {vec3} The decoded and normalized vector\n  */\n  vec3 czm_octDecode(vec2 encoded, float range)\n  {\n      if (encoded.x == 0.0 && encoded.y == 0.0) {\n          return vec3(0.0, 0.0, 0.0);\n      }\n\n     encoded = encoded / range * 2.0 - 1.0;\n     vec3 v = vec3(encoded.x, encoded.y, 1.0 - abs(encoded.x) - abs(encoded.y));\n     if (v.z < 0.0)\n     {\n         v.xy = (1.0 - abs(v.yx)) * czm_signNotZero(v.xy);\n     }\n\n     return normalize(v);\n  }\n\n/**\n * Decodes a unit-length vector in 'oct' encoding to a normalized 3-component Cartesian vector.\n * The 'oct' encoding is described in \"A Survey of Efficient Representations of Independent Unit Vectors\",\n * Cigolle et al 2014: http://jcgt.org/published/0003/02/01/\n *\n * @name czm_octDecode\n * @param {vec2} encoded The oct-encoded, unit-length vector\n * @returns {vec3} The decoded and normalized vector\n */\n vec3 czm_octDecode(vec2 encoded)\n {\n    return czm_octDecode(encoded, 255.0);\n }\n\n /**\n * Decodes a unit-length vector in 'oct' encoding packed into a floating-point number to a normalized 3-component Cartesian vector.\n * The 'oct' encoding is described in \"A Survey of Efficient Representations of Independent Unit Vectors\",\n * Cigolle et al 2014: http://jcgt.org/published/0003/02/01/\n *\n * @name czm_octDecode\n * @param {float} encoded The oct-encoded, unit-length vector\n * @returns {vec3} The decoded and normalized vector\n */\n vec3 czm_octDecode(float encoded)\n {\n    float temp = encoded / 256.0;\n    float x = floor(temp);\n    float y = (temp - x) * 256.0;\n    return czm_octDecode(vec2(x, y));\n }\n\n/**\n * Decodes three unit-length vectors in 'oct' encoding packed into two floating-point numbers to normalized 3-component Cartesian vectors.\n * The 'oct' encoding is described in \"A Survey of Efficient Representations of Independent Unit Vectors\",\n * Cigolle et al 2014: http://jcgt.org/published/0003/02/01/\n *\n * @name czm_octDecode\n * @param {vec2} encoded The packed oct-encoded, unit-length vectors.\n * @param {vec3} vector1 One decoded and normalized vector.\n * @param {vec3} vector2 One decoded and normalized vector.\n * @param {vec3} vector3 One decoded and normalized vector.\n */\n  void czm_octDecode(vec2 encoded, out vec3 vector1, out vec3 vector2, out vec3 vector3)\n {\n    float temp = encoded.x / 65536.0;\n    float x = floor(temp);\n    float encodedFloat1 = (temp - x) * 65536.0;\n\n    temp = encoded.y / 65536.0;\n    float y = floor(temp);\n    float encodedFloat2 = (temp - y) * 65536.0;\n\n    vector1 = czm_octDecode(encodedFloat1);\n    vector2 = czm_octDecode(encodedFloat2);\n    vector3 = czm_octDecode(vec2(x, y));\n }\n\n"}),define("Shaders/Builtin/Functions/packDepth",[],function(){"use strict";return"/**\n * Packs a depth value into a vec3 that can be represented by unsigned bytes.\n *\n * @name czm_packDepth\n * @glslFunction\n *\n * @param {float} depth The floating-point depth.\n * @returns {vec3} The packed depth.\n */\nvec4 czm_packDepth(float depth)\n{\n    // See Aras Pranckevičius' post Encoding Floats to RGBA\n    // http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\n    vec4 enc = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\n    enc = fract(enc);\n    enc -= enc.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\n    return enc;\n}\n"}),define("Shaders/Builtin/Functions/phong",[],function(){"use strict";return"float czm_private_getLambertDiffuseOfMaterial(vec3 lightDirectionEC, czm_material material)\n{\n    return czm_getLambertDiffuse(lightDirectionEC, material.normal);\n}\n\nfloat czm_private_getSpecularOfMaterial(vec3 lightDirectionEC, vec3 toEyeEC, czm_material material)\n{\n    return czm_getSpecular(lightDirectionEC, toEyeEC, material.normal, material.shininess);\n}\n\n/**\n * Computes a color using the Phong lighting model.\n *\n * @name czm_phong\n * @glslFunction\n *\n * @param {vec3} toEye A normalized vector from the fragment to the eye in eye coordinates.\n * @param {czm_material} material The fragment's material.\n * \n * @returns {vec4} The computed color.\n * \n * @example\n * vec3 positionToEyeEC = // ...\n * czm_material material = // ...\n * gl_FragColor = czm_phong(normalize(positionToEyeEC), material);\n *\n * @see czm_getMaterial\n */\nvec4 czm_phong(vec3 toEye, czm_material material)\n{\n    // Diffuse from directional light sources at eye (for top-down)\n    float diffuse = czm_private_getLambertDiffuseOfMaterial(vec3(0.0, 0.0, 1.0), material);\n    if (czm_sceneMode == czm_sceneMode3D) {\n        // (and horizon views in 3D)\n        diffuse += czm_private_getLambertDiffuseOfMaterial(vec3(0.0, 1.0, 0.0), material);\n    }\n\n    // Specular from sun and pseudo-moon\n    float specular = czm_private_getSpecularOfMaterial(czm_sunDirectionEC, toEye, material) + czm_private_getSpecularOfMaterial(czm_moonDirectionEC, toEye, material);\n\n    // Temporary workaround for adding ambient.\n    vec3 materialDiffuse = material.diffuse * 0.5;\n    \n    vec3 ambient = materialDiffuse;\n    vec3 color = ambient + material.emission;\n    color += materialDiffuse * diffuse;\n    color += material.specular * specular;\n\n    return vec4(color, material.alpha);\n}\n\nvec4 czm_private_phong(vec3 toEye, czm_material material)\n{\n    float diffuse = czm_private_getLambertDiffuseOfMaterial(czm_sunDirectionEC, material);\n    float specular = czm_private_getSpecularOfMaterial(czm_sunDirectionEC, toEye, material);\n\n    vec3 ambient = vec3(0.0);\n    vec3 color = ambient + material.emission;\n    color += material.diffuse * diffuse;\n    color += material.specular * specular;\n\n    return vec4(color, material.alpha);\n}\n"}),define("Shaders/Builtin/Functions/planeDistance",[],function(){"use strict";return"/**\n * Computes distance from a point to a plane.\n *\n * @name czm_planeDistance\n * @glslFunction\n *\n * param {vec4} plane A Plane in Hessian Normal Form. See Plane.js\n * param {vec3} point A point in the same space as the plane.\n * returns {float} The distance from the point to the plane.\n */\nfloat czm_planeDistance(vec4 plane, vec3 point) {\n    return (dot(plane.xyz, point) + plane.w);\n}\n\n/**\n * Computes distance from a point to a plane.\n *\n * @name czm_planeDistance\n * @glslFunction\n *\n * param {vec3} planeNormal Normal for a plane in Hessian Normal Form. See Plane.js\n * param {float} planeDistance Distance for a plane in Hessian Normal form. See Plane.js\n * param {vec3} point A point in the same space as the plane.\n * returns {float} The distance from the point to the plane.\n */\nfloat czm_planeDistance(vec3 planeNormal, float planeDistance, vec3 point) {\n    return (dot(planeNormal, point) + planeDistance);\n}\n"}),define("Shaders/Builtin/Functions/pointAlongRay",[],function(){"use strict";return"/**\n * Computes the point along a ray at the given time.  <code>time</code> can be positive, negative, or zero.\n *\n * @name czm_pointAlongRay\n * @glslFunction\n *\n * @param {czm_ray} ray The ray to compute the point along.\n * @param {float} time The time along the ray.\n * \n * @returns {vec3} The point along the ray at the given time.\n * \n * @example\n * czm_ray ray = czm_ray(vec3(0.0), vec3(1.0, 0.0, 0.0)); // origin, direction\n * vec3 v = czm_pointAlongRay(ray, 2.0); // (2.0, 0.0, 0.0)\n */\nvec3 czm_pointAlongRay(czm_ray ray, float time)\n{\n    return ray.origin + (time * ray.direction);\n}\n"}),define("Shaders/Builtin/Functions/rayEllipsoidIntersectionInterval",[],function(){"use strict";return"/**\n * DOC_TBA\n *\n * @name czm_rayEllipsoidIntersectionInterval\n * @glslFunction\n */\nczm_raySegment czm_rayEllipsoidIntersectionInterval(czm_ray ray, czm_ellipsoid ellipsoid)\n{\n   // ray and ellipsoid center in eye coordinates.  radii in model coordinates.\n    vec3 q = ellipsoid.inverseRadii * (czm_inverseModelView * vec4(ray.origin, 1.0)).xyz;\n    vec3 w = ellipsoid.inverseRadii * (czm_inverseModelView * vec4(ray.direction, 0.0)).xyz;\n   \n    q = q - ellipsoid.inverseRadii * (czm_inverseModelView * vec4(ellipsoid.center, 1.0)).xyz;\n    \n    float q2 = dot(q, q);\n    float qw = dot(q, w);\n    \n    if (q2 > 1.0) // Outside ellipsoid.\n    {\n        if (qw >= 0.0) // Looking outward or tangent (0 intersections).\n        {\n            return czm_emptyRaySegment;\n        }\n        else // qw < 0.0.\n        {\n            float qw2 = qw * qw;\n            float difference = q2 - 1.0; // Positively valued.\n            float w2 = dot(w, w);\n            float product = w2 * difference;\n            \n            if (qw2 < product) // Imaginary roots (0 intersections).\n            {\n                return czm_emptyRaySegment;     \n            }   \n            else if (qw2 > product) // Distinct roots (2 intersections).\n            {\n                float discriminant = qw * qw - product;\n                float temp = -qw + sqrt(discriminant); // Avoid cancellation.\n                float root0 = temp / w2;\n                float root1 = difference / temp;\n                if (root0 < root1)\n                {\n                    czm_raySegment i = czm_raySegment(root0, root1);\n                    return i;\n                }\n                else\n                {\n                    czm_raySegment i = czm_raySegment(root1, root0);\n                    return i;\n                }\n            }\n            else // qw2 == product.  Repeated roots (2 intersections).\n            {\n                float root = sqrt(difference / w2);\n                czm_raySegment i = czm_raySegment(root, root);\n                return i;\n            }\n        }\n    }\n    else if (q2 < 1.0) // Inside ellipsoid (2 intersections).\n    {\n        float difference = q2 - 1.0; // Negatively valued.\n        float w2 = dot(w, w);\n        float product = w2 * difference; // Negatively valued.\n        float discriminant = qw * qw - product;\n        float temp = -qw + sqrt(discriminant); // Positively valued.\n        czm_raySegment i = czm_raySegment(0.0, temp / w2);\n        return i;\n    }\n    else // q2 == 1.0. On ellipsoid.\n    {\n        if (qw < 0.0) // Looking inward.\n        {\n            float w2 = dot(w, w);\n            czm_raySegment i = czm_raySegment(0.0, -qw / w2);\n            return i;\n        }\n        else // qw >= 0.0.  Looking outward or tangent.\n        {\n            return czm_emptyRaySegment;\n        }\n    }\n}\n"}),define("Shaders/Builtin/Functions/readDepth",[],function(){"use strict";return"float czm_readDepth(sampler2D depthTexture, vec2 texCoords)\n{\n    return czm_reverseLogDepth(texture2D(depthTexture, texCoords).r);\n}\n"}),define("Shaders/Builtin/Functions/reverseLogDepth",[],function(){"use strict";return"float czm_reverseLogDepth(float logZ)\n{\n#ifdef LOG_DEPTH\n    float near = czm_currentFrustum.x;\n    float far = czm_currentFrustum.y;\n    logZ = pow(2.0, logZ * czm_log2FarPlusOne) - 1.0;\n    logZ = far * (1.0 - near / logZ) / (far - near);\n#endif\n    return logZ;\n}\n"}),define("Shaders/Builtin/Functions/RGBToHSB",[],function(){"use strict";return"/**\n * Converts an RGB color to HSB (hue, saturation, brightness)\n * HSB <-> RGB conversion with minimal branching: {@link http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl}\n *\n * @name czm_RGBToHSB\n * @glslFunction\n * \n * @param {vec3} rgb The color in RGB.\n *\n * @returns {vec3} The color in HSB.\n *\n * @example\n * vec3 hsb = czm_RGBToHSB(rgb);\n * hsb.z *= 0.1;\n * rgb = czm_HSBToRGB(hsb);\n */\n\nconst vec4 K_RGB2HSB = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n\nvec3 czm_RGBToHSB(vec3 rgb)\n{\n    vec4 p = mix(vec4(rgb.bg, K_RGB2HSB.wz), vec4(rgb.gb, K_RGB2HSB.xy), step(rgb.b, rgb.g));\n    vec4 q = mix(vec4(p.xyw, rgb.r), vec4(rgb.r, p.yzx), step(p.x, rgb.r));\n\n    float d = q.x - min(q.w, q.y);\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + czm_epsilon7)), d / (q.x + czm_epsilon7), q.x);\n}\n"}),define("Shaders/Builtin/Functions/RGBToHSL",[],function(){"use strict";return"/**\n * Converts an RGB color to HSL (hue, saturation, lightness)\n * HSL <-> RGB conversion: {@link http://www.chilliant.com/rgb2hsv.html}\n *\n * @name czm_RGBToHSL\n * @glslFunction\n * \n * @param {vec3} rgb The color in RGB.\n *\n * @returns {vec3} The color in HSL.\n *\n * @example\n * vec3 hsl = czm_RGBToHSL(rgb);\n * hsl.z *= 0.1;\n * rgb = czm_HSLToRGB(hsl);\n */\n \nvec3 RGBtoHCV(vec3 rgb)\n{\n    // Based on work by Sam Hocevar and Emil Persson\n    vec4 p = (rgb.g < rgb.b) ? vec4(rgb.bg, -1.0, 2.0 / 3.0) : vec4(rgb.gb, 0.0, -1.0 / 3.0);\n    vec4 q = (rgb.r < p.x) ? vec4(p.xyw, rgb.r) : vec4(rgb.r, p.yzx);\n    float c = q.x - min(q.w, q.y);\n    float h = abs((q.w - q.y) / (6.0 * c + czm_epsilon7) + q.z);\n    return vec3(h, c, q.x);\n}\n\nvec3 czm_RGBToHSL(vec3 rgb)\n{\n    vec3 hcv = RGBtoHCV(rgb);\n    float l = hcv.z - hcv.y * 0.5;\n    float s = hcv.y / (1.0 - abs(l * 2.0 - 1.0) + czm_epsilon7);\n    return vec3(hcv.x, s, l);\n}\n"});define("Shaders/Builtin/Functions/RGBToXYZ",[],function(){"use strict";return"/**\n * Converts an RGB color to CIE Yxy.\n * <p>The conversion is described in\n * {@link http://content.gpwiki.org/index.php/D3DBook:High-Dynamic_Range_Rendering#Luminance_Transform|Luminance Transform}\n * </p>\n * \n * @name czm_RGBToXYZ\n * @glslFunction\n * \n * @param {vec3} rgb The color in RGB.\n *\n * @returns {vec3} The color in CIE Yxy.\n *\n * @example\n * vec3 xyz = czm_RGBToXYZ(rgb);\n * xyz.x = max(xyz.x - luminanceThreshold, 0.0);\n * rgb = czm_XYZToRGB(xyz);\n */\nvec3 czm_RGBToXYZ(vec3 rgb)\n{\n    const mat3 RGB2XYZ = mat3(0.4124, 0.2126, 0.0193,\n                              0.3576, 0.7152, 0.1192,\n                              0.1805, 0.0722, 0.9505);\n    vec3 xyz = RGB2XYZ * rgb;\n    vec3 Yxy;\n    Yxy.r = xyz.g;\n    float temp = dot(vec3(1.0), xyz);\n    Yxy.gb = xyz.rg / temp;\n    return Yxy;\n}\n"}),define("Shaders/Builtin/Functions/saturation",[],function(){"use strict";return"/**\n * Adjusts the saturation of a color.\n * \n * @name czm_saturation\n * @glslFunction\n * \n * @param {vec3} rgb The color.\n * @param {float} adjustment The amount to adjust the saturation of the color.\n *\n * @returns {float} The color with the saturation adjusted.\n *\n * @example\n * vec3 greyScale = czm_saturation(color, 0.0);\n * vec3 doubleSaturation = czm_saturation(color, 2.0);\n */\nvec3 czm_saturation(vec3 rgb, float adjustment)\n{\n    // Algorithm from Chapter 16 of OpenGL Shading Language\n    const vec3 W = vec3(0.2125, 0.7154, 0.0721);\n    vec3 intensity = vec3(dot(rgb, W));\n    return mix(intensity, rgb, adjustment);\n}\n"}),define("Shaders/Builtin/Functions/shadowDepthCompare",[],function(){"use strict";return"\nfloat czm_sampleShadowMap(samplerCube shadowMap, vec3 d)\n{\n    return czm_unpackDepth(textureCube(shadowMap, d));\n}\n\nfloat czm_sampleShadowMap(sampler2D shadowMap, vec2 uv)\n{\n#ifdef USE_SHADOW_DEPTH_TEXTURE\n    return texture2D(shadowMap, uv).r;\n#else\n    return czm_unpackDepth(texture2D(shadowMap, uv));\n#endif\n}\n\nfloat czm_shadowDepthCompare(samplerCube shadowMap, vec3 uv, float depth)\n{\n    return step(depth, czm_sampleShadowMap(shadowMap, uv));\n}\n\nfloat czm_shadowDepthCompare(sampler2D shadowMap, vec2 uv, float depth)\n{\n    return step(depth, czm_sampleShadowMap(shadowMap, uv));\n}\n"}),define("Shaders/Builtin/Functions/shadowVisibility",[],function(){"use strict";return"\nfloat czm_private_shadowVisibility(float visibility, float nDotL, float normalShadingSmooth, float darkness)\n{\n#ifdef USE_NORMAL_SHADING\n#ifdef USE_NORMAL_SHADING_SMOOTH\n    float strength = clamp(nDotL / normalShadingSmooth, 0.0, 1.0);\n#else\n    float strength = step(0.0, nDotL);\n#endif\n    visibility *= strength;\n#endif\n\n    visibility = max(visibility, darkness);\n    return visibility;\n}\n\n#ifdef USE_CUBE_MAP_SHADOW\nfloat czm_shadowVisibility(samplerCube shadowMap, czm_shadowParameters shadowParameters)\n{\n    float depthBias = shadowParameters.depthBias;\n    float depth = shadowParameters.depth;\n    float nDotL = shadowParameters.nDotL;\n    float normalShadingSmooth = shadowParameters.normalShadingSmooth;\n    float darkness = shadowParameters.darkness;\n    vec3 uvw = shadowParameters.texCoords;\n\n    depth -= depthBias;\n    float visibility = czm_shadowDepthCompare(shadowMap, uvw, depth);\n    return czm_private_shadowVisibility(visibility, nDotL, normalShadingSmooth, darkness);\n}\n#else\nfloat czm_shadowVisibility(sampler2D shadowMap, czm_shadowParameters shadowParameters)\n{\n    float depthBias = shadowParameters.depthBias;\n    float depth = shadowParameters.depth;\n    float nDotL = shadowParameters.nDotL;\n    float normalShadingSmooth = shadowParameters.normalShadingSmooth;\n    float darkness = shadowParameters.darkness;\n    vec2 uv = shadowParameters.texCoords;\n\n    depth -= depthBias;\n#ifdef USE_SOFT_SHADOWS\n    vec2 texelStepSize = shadowParameters.texelStepSize;\n    float radius = 1.0;\n    float dx0 = -texelStepSize.x * radius;\n    float dy0 = -texelStepSize.y * radius;\n    float dx1 = texelStepSize.x * radius;\n    float dy1 = texelStepSize.y * radius;\n    float visibility = (\n        czm_shadowDepthCompare(shadowMap, uv, depth) +\n        czm_shadowDepthCompare(shadowMap, uv + vec2(dx0, dy0), depth) +\n        czm_shadowDepthCompare(shadowMap, uv + vec2(0.0, dy0), depth) +\n        czm_shadowDepthCompare(shadowMap, uv + vec2(dx1, dy0), depth) +\n        czm_shadowDepthCompare(shadowMap, uv + vec2(dx0, 0.0), depth) +\n        czm_shadowDepthCompare(shadowMap, uv + vec2(dx1, 0.0), depth) +\n        czm_shadowDepthCompare(shadowMap, uv + vec2(dx0, dy1), depth) +\n        czm_shadowDepthCompare(shadowMap, uv + vec2(0.0, dy1), depth) +\n        czm_shadowDepthCompare(shadowMap, uv + vec2(dx1, dy1), depth)\n    ) * (1.0 / 9.0);\n#else\n    float visibility = czm_shadowDepthCompare(shadowMap, uv, depth);\n#endif\n\n    return czm_private_shadowVisibility(visibility, nDotL, normalShadingSmooth, darkness);\n}\n#endif\n"}),define("Shaders/Builtin/Functions/signNotZero",[],function(){"use strict";return"/**\n * Returns 1.0 if the given value is positive or zero, and -1.0 if it is negative.  This is similar to the GLSL\n * built-in function <code>sign</code> except that returns 1.0 instead of 0.0 when the input value is 0.0.\n * \n * @name czm_signNotZero\n * @glslFunction\n *\n * @param {} value The value for which to determine the sign.\n * @returns {} 1.0 if the value is positive or zero, -1.0 if the value is negative.\n */\nfloat czm_signNotZero(float value)\n{\n    return value >= 0.0 ? 1.0 : -1.0;\n}\n\nvec2 czm_signNotZero(vec2 value)\n{\n    return vec2(czm_signNotZero(value.x), czm_signNotZero(value.y));\n}\n\nvec3 czm_signNotZero(vec3 value)\n{\n    return vec3(czm_signNotZero(value.x), czm_signNotZero(value.y), czm_signNotZero(value.z));\n}\n\nvec4 czm_signNotZero(vec4 value)\n{\n    return vec4(czm_signNotZero(value.x), czm_signNotZero(value.y), czm_signNotZero(value.z), czm_signNotZero(value.w));\n}\n"}),define("Shaders/Builtin/Functions/tangentToEyeSpaceMatrix",[],function(){"use strict"
;return"/**\n * Creates a matrix that transforms vectors from tangent space to eye space.\n *\n * @name czm_tangentToEyeSpaceMatrix\n * @glslFunction\n *\n * @param {vec3} normalEC The normal vector in eye coordinates.\n * @param {vec3} tangentEC The tangent vector in eye coordinates.\n * @param {vec3} bitangentEC The bitangent vector in eye coordinates.\n *\n * @returns {mat3} The matrix that transforms from tangent space to eye space.\n *\n * @example\n * mat3 tangentToEye = czm_tangentToEyeSpaceMatrix(normalEC, tangentEC, bitangentEC);\n * vec3 normal = tangentToEye * texture2D(normalMap, st).xyz;\n */\nmat3 czm_tangentToEyeSpaceMatrix(vec3 normalEC, vec3 tangentEC, vec3 bitangentEC)\n{\n    vec3 normal = normalize(normalEC);\n    vec3 tangent = normalize(tangentEC);\n    vec3 bitangent = normalize(bitangentEC);\n    return mat3(tangent.x  , tangent.y  , tangent.z,\n                bitangent.x, bitangent.y, bitangent.z,\n                normal.x   , normal.y   , normal.z);\n}\n"}),define("Shaders/Builtin/Functions/transformPlane",[],function(){"use strict";return"vec4 czm_transformPlane(vec4 clippingPlane, mat4 transform) {\n    vec3 transformedDirection = normalize((transform * vec4(clippingPlane.xyz, 0.0)).xyz);\n    vec3 transformedPosition = (transform * vec4(clippingPlane.xyz * -clippingPlane.w, 1.0)).xyz;\n    vec4 transformedPlane;\n    transformedPlane.xyz = transformedDirection;\n    transformedPlane.w = -dot(transformedDirection, transformedPosition);\n    return transformedPlane;\n}\n"}),define("Shaders/Builtin/Functions/translateRelativeToEye",[],function(){"use strict";return"/**\n * Translates a position (or any <code>vec3</code>) that was encoded with {@link EncodedCartesian3},\n * and then provided to the shader as separate <code>high</code> and <code>low</code> bits to\n * be relative to the eye.  As shown in the example, the position can then be transformed in eye\n * or clip coordinates using {@link czm_modelViewRelativeToEye} or {@link czm_modelViewProjectionRelativeToEye},\n * respectively.\n * <p>\n * This technique, called GPU RTE, eliminates jittering artifacts when using large coordinates as\n * described in {@link http://blogs.agi.com/insight3d/index.php/2008/09/03/precisions-precisions/|Precisions, Precisions}.\n * </p>\n *\n * @name czm_translateRelativeToEye\n * @glslFunction\n *\n * @param {vec3} high The position's high bits.\n * @param {vec3} low The position's low bits.\n * @returns {vec3} The position translated to be relative to the camera's position.\n *\n * @example\n * attribute vec3 positionHigh;\n * attribute vec3 positionLow;\n * \n * void main() \n * {\n *   vec4 p = czm_translateRelativeToEye(positionHigh, positionLow);\n *   gl_Position = czm_modelViewProjectionRelativeToEye * p;\n * }\n *\n * @see czm_modelViewRelativeToEye\n * @see czm_modelViewProjectionRelativeToEye\n * @see czm_computePosition\n * @see EncodedCartesian3\n */\nvec4 czm_translateRelativeToEye(vec3 high, vec3 low)\n{\n    vec3 highDifference = high - czm_encodedCameraPositionMCHigh;\n    vec3 lowDifference = low - czm_encodedCameraPositionMCLow;\n\n    return vec4(highDifference + lowDifference, 1.0);\n}\n"}),define("Shaders/Builtin/Functions/translucentPhong",[],function(){"use strict";return"/**\n * @private\n */\nvec4 czm_translucentPhong(vec3 toEye, czm_material material)\n{\n    // Diffuse from directional light sources at eye (for top-down and horizon views)\n    float diffuse = czm_getLambertDiffuse(vec3(0.0, 0.0, 1.0), material.normal);\n    \n    if (czm_sceneMode == czm_sceneMode3D) {\n        // (and horizon views in 3D)\n        diffuse += czm_getLambertDiffuse(vec3(0.0, 1.0, 0.0), material.normal);\n    }\n    \n    diffuse = clamp(diffuse, 0.0, 1.0);\n\n    // Specular from sun and pseudo-moon\n    float specular = czm_getSpecular(czm_sunDirectionEC, toEye, material.normal, material.shininess);\n    specular += czm_getSpecular(czm_moonDirectionEC, toEye, material.normal, material.shininess);\n\n    // Temporary workaround for adding ambient.\n    vec3 materialDiffuse = material.diffuse * 0.5;\n\n    vec3 ambient = materialDiffuse;\n    vec3 color = ambient + material.emission;\n    color += materialDiffuse * diffuse;\n    color += material.specular * specular;\n\n    return vec4(color, material.alpha);\n}\n"}),define("Shaders/Builtin/Functions/transpose",[],function(){"use strict";return"/**\n * Returns the transpose of the matrix.  The input <code>matrix</code> can be\n * a <code>mat2</code>, <code>mat3</code>, or <code>mat4</code>.\n *\n * @name czm_transpose\n * @glslFunction\n *\n * @param {} matrix The matrix to transpose.\n *\n * @returns {} The transposed matrix.\n *\n * @example\n * // GLSL declarations\n * mat2 czm_transpose(mat2 matrix);\n * mat3 czm_transpose(mat3 matrix);\n * mat4 czm_transpose(mat4 matrix);\n *\n * // Transpose a 3x3 rotation matrix to find its inverse.\n * mat3 eastNorthUpToEye = czm_eastNorthUpToEyeCoordinates(\n *     positionMC, normalEC);\n * mat3 eyeToEastNorthUp = czm_transpose(eastNorthUpToEye);\n */\nmat2 czm_transpose(mat2 matrix)\n{\n    return mat2(\n        matrix[0][0], matrix[1][0],\n        matrix[0][1], matrix[1][1]);\n}\n\nmat3 czm_transpose(mat3 matrix)\n{\n    return mat3(\n        matrix[0][0], matrix[1][0], matrix[2][0],\n        matrix[0][1], matrix[1][1], matrix[2][1],\n        matrix[0][2], matrix[1][2], matrix[2][2]);\n}\n\nmat4 czm_transpose(mat4 matrix)\n{\n    return mat4(\n        matrix[0][0], matrix[1][0], matrix[2][0], matrix[3][0],\n        matrix[0][1], matrix[1][1], matrix[2][1], matrix[3][1],\n        matrix[0][2], matrix[1][2], matrix[2][2], matrix[3][2],\n        matrix[0][3], matrix[1][3], matrix[2][3], matrix[3][3]);\n}\n"}),define("Shaders/Builtin/Functions/unpackDepth",[],function(){"use strict";return"/**\n * Unpacks a vec4 depth value to a float in [0, 1) range.\n *\n * @name czm_unpackDepth\n * @glslFunction\n *\n * @param {vec4} packedDepth The packed depth.\n *\n * @returns {float} The floating-point depth in [0, 1) range.\n */\n float czm_unpackDepth(vec4 packedDepth)\n {\n    // See Aras Pranckevičius' post Encoding Floats to RGBA\n    // http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\n    return dot(packedDepth, vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n }\n"}),define("Shaders/Builtin/Functions/unpackFloat",[],function(){"use strict";return"#define SHIFT_RIGHT_8 0.00390625 //1.0 / 256.0\n#define SHIFT_RIGHT_16 0.00001525878 //1.0 / 65536.0\n#define SHIFT_RIGHT_24 5.960464477539063e-8//1.0 / 16777216.0\n\n#define BIAS 38.0\n\n/**\n * Unpacks a vec4 value containing values expressable as uint8 to an arbitrary float.\n *\n * @name czm_unpackFloat\n * @glslFunction\n *\n * @param {vec4} packedFloat The packed float.\n *\n * @returns {float} The floating-point depth in arbitrary range.\n */\n float czm_unpackFloat(vec4 packedFloat)\n{\n    packedFloat *= 255.0;\n    float temp = packedFloat.w / 2.0;\n    float exponent = floor(temp);\n    float sign = (temp - exponent) * 2.0;\n    exponent = exponent - float(BIAS);\n    sign = sign * 2.0 - 1.0;\n    sign = -sign;\n    float unpacked = sign * packedFloat.x * float(SHIFT_RIGHT_8);\n    unpacked += sign * packedFloat.y * float(SHIFT_RIGHT_16);\n    unpacked += sign * packedFloat.z * float(SHIFT_RIGHT_24);\n    return unpacked * pow(10.0, exponent);\n}\n"}),define("Shaders/Builtin/Functions/vertexLogDepth",[],function(){"use strict";return"#ifdef LOG_DEPTH\nvarying float v_logZ;\n#ifdef SHADOW_MAP\nvarying vec3 v_logPositionEC;\n#endif\n#endif\n\nvoid czm_updatePositionDepth() {\n#if defined(LOG_DEPTH) && !defined(DISABLE_GL_POSITION_LOG_DEPTH)\n    vec3 logPositionEC = (czm_inverseProjection * gl_Position).xyz;\n\n#ifdef SHADOW_MAP\n    v_logPositionEC = logPositionEC;\n#endif\n\n#ifdef ENABLE_GL_POSITION_LOG_DEPTH_AT_HEIGHT\n    if (length(logPositionEC) < 2.0e6)\n    {\n        return;\n    }\n#endif\n\n    gl_Position.z = log2(max(1e-6, 1.0 + gl_Position.w)) * czm_log2FarDistance - 1.0;\n    gl_Position.z *= gl_Position.w;\n#endif\n}\n\n/**\n * Writes the logarithmic depth to gl_Position using the already computed gl_Position.\n *\n * @name czm_vertexLogDepth\n * @glslFunction\n */\nvoid czm_vertexLogDepth()\n{\n#ifdef LOG_DEPTH\n    v_logZ = 1.0 + gl_Position.w;\n    czm_updatePositionDepth();\n#endif\n}\n\n/**\n * Writes the logarithmic depth to gl_Position using the provided clip coordinates.\n * <p>\n * An example use case for this function would be moving the vertex in window coordinates\n * before converting back to clip coordinates. Use the original vertex clip coordinates.\n * </p>\n * @name czm_vertexLogDepth\n * @glslFunction\n *\n * @param {vec4} clipCoords The vertex in clip coordinates.\n *\n * @example\n * czm_vertexLogDepth(czm_projection * vec4(positionEyeCoordinates, 1.0));\n */\nvoid czm_vertexLogDepth(vec4 clipCoords)\n{\n#ifdef LOG_DEPTH\n    v_logZ = 1.0 + clipCoords.w;\n    czm_updatePositionDepth();\n#endif\n}\n"}),define("Shaders/Builtin/Functions/windowToEyeCoordinates",[],function(){"use strict";return"/**\n * Transforms a position from window to eye coordinates.\n * The transform from window to normalized device coordinates is done using components\n * of (@link czm_viewport} and {@link czm_viewportTransformation} instead of calculating\n * the inverse of <code>czm_viewportTransformation</code>. The transformation from\n * normalized device coordinates to clip coordinates is done using <code>positionWC.w</code>,\n * which is expected to be the scalar used in the perspective divide. The transformation\n * from clip to eye coordinates is done using {@link czm_inverseProjection}.\n *\n * @name czm_windowToEyeCoordinates\n * @glslFunction\n *\n * @param {vec4} fragmentCoordinate The position in window coordinates to transform.\n *\n * @returns {vec4} The transformed position in eye coordinates.\n *\n * @see czm_modelToWindowCoordinates\n * @see czm_eyeToWindowCoordinates\n * @see czm_inverseProjection\n * @see czm_viewport\n * @see czm_viewportTransformation\n *\n * @example\n * vec4 positionEC = czm_windowToEyeCoordinates(gl_FragCoord);\n */\nvec4 czm_windowToEyeCoordinates(vec4 fragmentCoordinate)\n{\n    float x = 2.0 * (fragmentCoordinate.x - czm_viewport.x) / czm_viewport.z - 1.0;\n    float y = 2.0 * (fragmentCoordinate.y - czm_viewport.y) / czm_viewport.w - 1.0;\n    float z = (fragmentCoordinate.z - czm_viewportTransformation[3][2]) / czm_viewportTransformation[2][2];\n    vec4 q = vec4(x, y, z, 1.0);\n    q /= fragmentCoordinate.w;\n\n    if (!(czm_inverseProjection == mat4(0.0))) // IE and Edge sometimes do something weird with != between mat4s\n    {\n        q = czm_inverseProjection * q;\n    }\n    else\n    {\n        float top = czm_frustumPlanes.x;\n        float bottom = czm_frustumPlanes.y;\n        float left = czm_frustumPlanes.z;\n        float right = czm_frustumPlanes.w;\n\n        float near = czm_currentFrustum.x;\n        float far = czm_currentFrustum.y;\n\n        q.x = (q.x * (right - left) + left + right) * 0.5;\n        q.y = (q.y * (top - bottom) + bottom + top) * 0.5;\n        q.z = (q.z * (near - far) - near - far) * 0.5;\n        q.w = 1.0;\n    }\n\n    return q;\n}\n\n/**\n * Transforms a position given as window x/y and a depth or a log depth from window to eye coordinates.\n * This function produces more accurate results for window positions with log depth than\n * conventionally unpacking the log depth using czm_reverseLogDepth and using the standard version\n * of czm_windowToEyeCoordinates.\n *\n * @name czm_windowToEyeCoordinates\n * @glslFunction\n *\n * @param {vec2} fragmentCoordinateXY The XY position in window coordinates to transform.\n * @param {float} depthOrLogDepth A depth or log depth for the fragment.\n *\n * @see czm_modelToWindowCoordinates\n * @see czm_eyeToWindowCoordinates\n * @see czm_inverseProjection\n * @see czm_viewport\n * @see czm_viewportTransformation\n *\n * @returns {vec4} The transformed position in eye coordinates.\n */\nvec4 czm_windowToEyeCoordinates(vec2 fragmentCoordinateXY, float depthOrLogDepth)\n{\n    // See reverseLogDepth.glsl. This is separate to re-use the pow.\n#ifdef LOG_DEPTH\n    float near = czm_currentFrustum.x;\n    float far = czm_currentFrustum.y;\n    float unscaledDepth = pow(2.0, depthOrLogDepth * czm_log2FarPlusOne) - 1.0;\n    vec4 windowCoord = vec4(fragmentCoordinateXY, far * (1.0 - near / unscaledDepth) / (far - near), 1.0);\n    vec4 eyeCoordinate = czm_windowToEyeCoordinates(windowCoord);\n    eyeCoordinate.w = 1.0 / unscaledDepth; // Better precision\n#else\n    vec4 windowCoord = vec4(fragmentCoordinateXY, depthOrLogDepth, 1.0);\n    vec4 eyeCoordinate = czm_windowToEyeCoordinates(windowCoord);\n#endif\n    return eyeCoordinate;\n}\n"}),define("Shaders/Builtin/Functions/writeDepthClampedToFarPlane",[],function(){"use strict";return"// emulated noperspective\n#ifndef LOG_DEPTH\nvarying float v_WindowZ;\n#endif\n/**\n * Clamps a vertex to the far plane by writing the fragments depth.\n * <p>\n * The shader must enable the GL_EXT_frag_depth extension.\n * </p>\n *\n * @name czm_writeDepthClampedToFarPlane\n * @glslFunction\n *\n * @example\n * gl_FragColor = color;\n * czm_writeDepthClampedToFarPlane();\n *\n * @see czm_depthClampFarPlane\n */\nvoid czm_writeDepthClampedToFarPlane()\n{\n#if defined(GL_EXT_frag_depth) && !defined(LOG_DEPTH)\n    gl_FragDepthEXT = min(v_WindowZ * gl_FragCoord.w, 1.0);\n#endif\n}\n"}),define("Shaders/Builtin/Functions/writeLogDepth",[],function(){"use strict";return"#ifdef LOG_DEPTH\nvarying float v_logZ;\n#endif\n\n/**\n * Writes the fragment depth to the logarithmic depth buffer.\n * <p>\n * Use this when the vertex shader does not calls {@link czm_vertexlogDepth}, for example, when\n * ray-casting geometry using a full screen quad.\n * </p>\n * @name czm_writeLogDepth\n * @glslFunction\n *\n * @param {float} logZ The w coordinate of the vertex in clip coordinates plus 1.0.\n *\n * @example\n * czm_writeLogDepth((czm_projection * v_positionEyeCoordinates).w + 1.0);\n */\nvoid czm_writeLogDepth(float logZ)\n{\n#if defined(GL_EXT_frag_depth) && defined(LOG_DEPTH) && !defined(DISABLE_LOG_DEPTH_FRAGMENT_WRITE)\n    float halfLogFarDistance = czm_log2FarDistance * 0.5;\n    float depth = log2(logZ);\n    if (depth < czm_log2NearDistance) {\n        discard;\n    }\n    gl_FragDepthEXT = depth * halfLogFarDistance;\n#endif\n}\n\n/**\n * Writes the fragment depth to the logarithmic depth buffer.\n * <p>\n * Use this when the vertex shader calls {@link czm_vertexlogDepth}.\n * </p>\n *\n * @name czm_writeLogDepth\n * @glslFunction\n */\nvoid czm_writeLogDepth() {\n#ifdef LOG_DEPTH\n    czm_writeLogDepth(v_logZ);\n#endif\n}\n"}),define("Shaders/Builtin/Functions/XYZToRGB",[],function(){"use strict";return"/**\n * Converts a CIE Yxy color to RGB.\n * <p>The conversion is described in\n * {@link http://content.gpwiki.org/index.php/D3DBook:High-Dynamic_Range_Rendering#Luminance_Transform|Luminance Transform}\n * </p>\n * \n * @name czm_XYZToRGB\n * @glslFunction\n * \n * @param {vec3} Yxy The color in CIE Yxy.\n *\n * @returns {vec3} The color in RGB.\n *\n * @example\n * vec3 xyz = czm_RGBToXYZ(rgb);\n * xyz.x = max(xyz.x - luminanceThreshold, 0.0);\n * rgb = czm_XYZToRGB(xyz);\n */\nvec3 czm_XYZToRGB(vec3 Yxy)\n{\n    const mat3 XYZ2RGB = mat3( 3.2405, -0.9693,  0.0556,\n                              -1.5371,  1.8760, -0.2040,\n                              -0.4985,  0.0416,  1.0572);\n    vec3 xyz;\n    xyz.r = Yxy.r * Yxy.g / Yxy.b;\n    xyz.g = Yxy.r;\n    xyz.b = Yxy.r * (1.0 - Yxy.g - Yxy.b) / Yxy.b;\n    \n    return XYZ2RGB * xyz;\n}\n"}),define("Shaders/Builtin/CzmBuiltins",["./Constants/degreesPerRadian","./Constants/depthRange","./Constants/epsilon1","./Constants/epsilon2","./Constants/epsilon3","./Constants/epsilon4","./Constants/epsilon5","./Constants/epsilon6","./Constants/epsilon7","./Constants/infinity","./Constants/oneOverPi","./Constants/oneOverTwoPi","./Constants/passCesium3DTile","./Constants/passCesium3DTileClassification","./Constants/passCesium3DTileClassificationIgnoreShow","./Constants/passClassification","./Constants/passCompute","./Constants/passEnvironment","./Constants/passGlobe","./Constants/passOpaque","./Constants/passOverlay","./Constants/passTerrainClassification","./Constants/passTranslucent","./Constants/pi","./Constants/piOverFour","./Constants/piOverSix","./Constants/piOverThree","./Constants/piOverTwo","./Constants/radiansPerDegree","./Constants/sceneMode2D","./Constants/sceneMode3D","./Constants/sceneModeColumbusView","./Constants/sceneModeMorphing","./Constants/solarRadius","./Constants/threePiOver2","./Constants/twoPi","./Constants/webMercatorMaxLatitude","./Structs/depthRangeStruct","./Structs/ellipsoid","./Structs/material","./Structs/materialInput","./Structs/ray","./Structs/raySegment","./Structs/shadowParameters","./Functions/alphaWeight","./Functions/antialias","./Functions/approximateSphericalCoordinates","./Functions/branchFreeTernary","./Functions/cascadeColor","./Functions/cascadeDistance","./Functions/cascadeMatrix","./Functions/cascadeWeights","./Functions/columbusViewMorph","./Functions/computePosition","./Functions/cosineAndSine","./Functions/decompressTextureCoordinates","./Functions/depthClampFarPlane","./Functions/eastNorthUpToEyeCoordinates","./Functions/ellipsoidContainsPoint","./Functions/ellipsoidNew","./Functions/ellipsoidWgs84TextureCoordinates","./Functions/equalsEpsilon","./Functions/eyeOffset","./Functions/eyeToWindowCoordinates","./Functions/fastApproximateAtan","./Functions/fog","./Functions/geodeticSurfaceNormal","./Functions/getDefaultMaterial","./Functions/getLambertDiffuse","./Functions/getSpecular","./Functions/getWaterNoise","./Functions/getWgs84EllipsoidEC","./Functions/HSBToRGB","./Functions/HSLToRGB","./Functions/hue","./Functions/isEmpty","./Functions/isFull","./Functions/latitudeToWebMercatorFraction","./Functions/lineDistance","./Functions/luminance","./Functions/metersPerPixel","./Functions/modelToWindowCoordinates","./Functions/multiplyWithColorBalance","./Functions/nearFarScalar","./Functions/octDecode","./Functions/packDepth","./Functions/phong","./Functions/planeDistance","./Functions/pointAlongRay","./Functions/rayEllipsoidIntersectionInterval","./Functions/readDepth","./Functions/reverseLogDepth","./Functions/RGBToHSB","./Functions/RGBToHSL","./Functions/RGBToXYZ","./Functions/saturation","./Functions/shadowDepthCompare","./Functions/shadowVisibility","./Functions/signNotZero","./Functions/tangentToEyeSpaceMatrix","./Functions/transformPlane","./Functions/translateRelativeToEye","./Functions/translucentPhong","./Functions/transpose","./Functions/unpackDepth","./Functions/unpackFloat","./Functions/vertexLogDepth","./Functions/windowToEyeCoordinates","./Functions/writeDepthClampedToFarPlane","./Functions/writeLogDepth","./Functions/XYZToRGB"],function(e,t,n,r,a,i,o,s,c,u,l,d,f,m,p,h,_,v,g,y,E,T,C,S,A,x,w,b,R,I,z,D,O,P,M,N,F,L,B,U,G,V,k,q,H,W,Y,X,j,Z,K,J,Q,$,ee,te,ne,re,ae,ie,oe,se,ce,ue,le,de,fe,me,pe,he,_e,ve,ge,ye,Ee,Te,Ce,Se,Ae,xe,we,be,Re,Ie,ze,De,Oe,Pe,Me,Ne,Fe,Le,Be,Ue,Ge,Ve,ke,qe,He,We,Ye,Xe,je,Ze,Ke,Je,Qe,$e,et,tt,nt){"use strict";return{czm_degreesPerRadian:e,czm_depthRange:t,czm_epsilon1:n,czm_epsilon2:r,czm_epsilon3:a,czm_epsilon4:i,czm_epsilon5:o,czm_epsilon6:s,czm_epsilon7:c,czm_infinity:u,czm_oneOverPi:l,czm_oneOverTwoPi:d,czm_passCesium3DTile:f,czm_passCesium3DTileClassification:m,czm_passCesium3DTileClassificationIgnoreShow:p,czm_passClassification:h,czm_passCompute:_,czm_passEnvironment:v,czm_passGlobe:g,czm_passOpaque:y,czm_passOverlay:E,czm_passTerrainClassification:T,czm_passTranslucent:C,czm_pi:S,czm_piOverFour:A,czm_piOverSix:x,czm_piOverThree:w,czm_piOverTwo:b,czm_radiansPerDegree:R,czm_sceneMode2D:I,czm_sceneMode3D:z,czm_sceneModeColumbusView:D,czm_sceneModeMorphing:O,czm_solarRadius:P,czm_threePiOver2:M,czm_twoPi:N,czm_webMercatorMaxLatitude:F,czm_depthRangeStruct:L,czm_ellipsoid:B,czm_material:U,czm_materialInput:G,czm_ray:V,czm_raySegment:k,czm_shadowParameters:q,czm_alphaWeight:H,czm_antialias:W,czm_approximateSphericalCoordinates:Y,czm_branchFreeTernary:X,czm_cascadeColor:j,czm_cascadeDistance:Z,czm_cascadeMatrix:K,czm_cascadeWeights:J,czm_columbusViewMorph:Q,czm_computePosition:$,czm_cosineAndSine:ee,czm_decompressTextureCoordinates:te,czm_depthClampFarPlane:ne,czm_eastNorthUpToEyeCoordinates:re,czm_ellipsoidContainsPoint:ae,czm_ellipsoidNew:ie,czm_ellipsoidWgs84TextureCoordinates:oe,czm_equalsEpsilon:se,czm_eyeOffset:ce,czm_eyeToWindowCoordinates:ue,czm_fastApproximateAtan:le,czm_fog:de,czm_geodeticSurfaceNormal:fe,czm_getDefaultMaterial:me,czm_getLambertDiffuse:pe,czm_getSpecular:he,czm_getWaterNoise:_e,czm_getWgs84EllipsoidEC:ve,czm_HSBToRGB:ge,czm_HSLToRGB:ye,czm_hue:Ee,czm_isEmpty:Te,czm_isFull:Ce,czm_latitudeToWebMercatorFraction:Se,czm_lineDistance:Ae,czm_luminance:xe,czm_metersPerPixel:we,czm_modelToWindowCoordinates:be,czm_multiplyWithColorBalance:Re,czm_nearFarScalar:Ie,czm_octDecode:ze,czm_packDepth:De,czm_phong:Oe,czm_planeDistance:Pe,czm_pointAlongRay:Me,czm_rayEllipsoidIntersectionInterval:Ne,czm_readDepth:Fe,czm_reverseLogDepth:Le,czm_RGBToHSB:Be,czm_RGBToHSL:Ue,czm_RGBToXYZ:Ge,czm_saturation:Ve,czm_shadowDepthCompare:ke,czm_shadowVisibility:qe,czm_signNotZero:He,czm_tangentToEyeSpaceMatrix:We,czm_transformPlane:Ye,czm_translateRelativeToEye:Xe,czm_translucentPhong:je,czm_transpose:Ze,czm_unpackDepth:Ke,czm_unpackFloat:Je,czm_vertexLogDepth:Qe,czm_windowToEyeCoordinates:$e,czm_writeDepthClampedToFarPlane:et,czm_writeLogDepth:tt,czm_XYZToRGB:nt}}),define("Renderer/ShaderSource",["../Core/defaultValue","../Core/defined","../Core/DeveloperError","../Renderer/modernizeShader","../Shaders/Builtin/CzmBuiltins","./AutomaticUniforms"],function(e,t,n,r,a,i){"use strict";function o(e){return e=e.replace(/\/\/.*/g,""),e.replace(/\/\*\*[\s\S]*?\*\//gm,function(e){for(var t=e.match(/\n/gm).length,n="",r=0;r<t;++r)n+="\n";return n})}function s(e,n,r){for(var a,i=0;i<r.length;++i)r[i].name===e&&(a=r[i]);return t(a)||(n=o(n),a={name:e,glslSource:n,dependsOn:[],requiredBy:[],evaluated:!1},r.push(a)),a}function c(e,n){if(!e.evaluated){e.evaluated=!0;var r=e.glslSource.match(/\bczm_[a-zA-Z0-9_]*/g);t(r)&&null!==r&&(r=r.filter(function(e,t){return r.indexOf(e)===t}),r.forEach(function(t){if(t!==e.name&&f._czmBuiltinsAndUniforms.hasOwnProperty(t)){var r=s(t,f._czmBuiltinsAndUniforms[t],n);e.dependsOn.push(r),r.requiredBy.push(e),c(r,n)}}))}}function u(e){for(var t=[],n=[];e.length>0;){var r=e.pop();n.push(r),0===r.requiredBy.length&&t.push(r)}for(;t.length>0;){var a=t.shift();e.push(a);for(var i=0;i<a.dependsOn.length;++i){var o=a.dependsOn[i],s=o.requiredBy.indexOf(a);o.requiredBy.splice(s,1),0===o.requiredBy.length&&t.push(o)}}for(var c=[],u=0;u<n.length;++u)0!==n[u].requiredBy.length&&c.push(n[u])}function l(e){var t=[],n=s("main",e,t);c(n,t),u(t);for(var r="",a=t.length-1;a>=0;--a)r=r+t[a].glslSource+"\n";return r.replace(n.glslSource,"")}function d(e,n,a){var i,s,c="",u=e.sources;if(t(u))for(i=0,s=u.length;i<s;++i)c+="\n#line 0\n"+u[i];c=o(c);var d;c=c.replace(/#version\s+(.*?)\n/gm,function(e,t){return d=t,"\n"});var m=[];c=c.replace(/#extension.*\n/gm,function(e){return m.push(e),"\n"}),c=c.replace(/precision\s(lowp|mediump|highp)\s(float|int);/,"");var p=e.pickColorQualifier;t(p)&&(c=f.createPickFragmentShaderSource(c,p));var h="";t(d)&&(h="#version "+d+"\n");var _=m.length;for(i=0;i<_;i++)h+=m[i];n&&(h+="#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\n\n");var v=e.defines;if(t(v))for(i=0,s=v.length;i<s;++i){var g=v[i];0!==g.length&&(h+="#define "+g+"\n")}return a.webgl2&&(h+="#define OUTPUT_DECLARATION\n\n"),e.includeBuiltIns&&(h+=l(c)),h+="\n#line 0\n",h+=c,a.webgl2&&(h=r(h,n,!0)),h}function f(n){n=e(n,e.EMPTY_OBJECT);var r=n.pickColorQualifier;this.defines=t(n.defines)?n.defines.slice(0):[],this.sources=t(n.sources)?n.sources.slice(0):[],this.pickColorQualifier=r,this.includeBuiltIns=e(n.includeBuiltIns,!0)}f.prototype.clone=function(){return new f({sources:this.sources,defines:this.defines,pickColorQualifier:this.pickColorQualifier,includeBuiltIns:this.includeBuiltIns})},f.replaceMain=function(e,t){return t="void "+t+"()",e.replace(/void\s+main\s*\(\s*(?:void)?\s*\)/g,t)},f.prototype.createCombinedVertexShader=function(e){return d(this,!1,e)},f.prototype.createCombinedFragmentShader=function(e){return d(this,!0,e)},f._czmBuiltinsAndUniforms={};for(var m in a)a.hasOwnProperty(m)&&(f._czmBuiltinsAndUniforms[m]=a[m]);for(var p in i)if(i.hasOwnProperty(p)){var h=i[p];"function"==typeof h.getDeclaration&&(f._czmBuiltinsAndUniforms[p]=h.getDeclaration(p))}f.createPickVertexShaderSource=function(e){return f.replaceMain(e,"czm_old_main")+"\nattribute vec4 pickColor; \nvarying vec4 czm_pickColor; \nvoid main() \n{ \n    czm_old_main(); \n    czm_pickColor = pickColor; \n}"},f.createPickFragmentShaderSource=function(e,t){return f.replaceMain(e,"czm_old_main")+"\n"+t+" vec4 czm_pickColor; \nvoid main() \n{ \n    czm_old_main(); \n    if (gl_FragColor.a == 0.0) { \n       discard; \n    } \n    gl_FragColor = czm_pickColor; \n}"},f.findVarying=function(e,t){for(var n=e.sources,r=t.length,a=0;a<r;++a)for(var i=t[a],o=n.length,s=0;s<o;++s)if(-1!==n[s].indexOf(i))return i};var _=["v_normalEC","v_normal"];f.findNormalVarying=function(e){return f.findVarying(e,_)};var v=["v_positionEC"];return f.findPositionVarying=function(e){return f.findVarying(e,v)},f}),define("Scene/BlendEquation",["../Core/freezeObject","../Core/WebGLConstants"],function(e,t){"use strict";return e({ADD:t.FUNC_ADD,SUBTRACT:t.FUNC_SUBTRACT,REVERSE_SUBTRACT:t.FUNC_REVERSE_SUBTRACT,MIN:t.MIN,MAX:t.MAX})}),define("Scene/BlendFunction",["../Core/freezeObject","../Core/WebGLConstants"],function(e,t){"use strict";return e({ZERO:t.ZERO,ONE:t.ONE,SOURCE_COLOR:t.SRC_COLOR,ONE_MINUS_SOURCE_COLOR:t.ONE_MINUS_SRC_COLOR,DESTINATION_COLOR:t.DST_COLOR,ONE_MINUS_DESTINATION_COLOR:t.ONE_MINUS_DST_COLOR,SOURCE_ALPHA:t.SRC_ALPHA,ONE_MINUS_SOURCE_ALPHA:t.ONE_MINUS_SRC_ALPHA,DESTINATION_ALPHA:t.DST_ALPHA,ONE_MINUS_DESTINATION_ALPHA:t.ONE_MINUS_DST_ALPHA,CONSTANT_COLOR:t.CONSTANT_COLOR,ONE_MINUS_CONSTANT_COLOR:t.ONE_MINUS_CONSTANT_ALPHA,CONSTANT_ALPHA:t.CONSTANT_ALPHA,ONE_MINUS_CONSTANT_ALPHA:t.ONE_MINUS_CONSTANT_ALPHA,SOURCE_ALPHA_SATURATE:t.SRC_ALPHA_SATURATE})}),define("Scene/BlendingState",["../Core/freezeObject","./BlendEquation","./BlendFunction"],function(e,t,n){"use strict";return e({DISABLED:e({enabled:!1}),ALPHA_BLEND:e({enabled:!0,equationRgb:t.ADD,equationAlpha:t.ADD,functionSourceRgb:n.SOURCE_ALPHA,functionSourceAlpha:n.SOURCE_ALPHA,functionDestinationRgb:n.ONE_MINUS_SOURCE_ALPHA,functionDestinationAlpha:n.ONE_MINUS_SOURCE_ALPHA}),PRE_MULTIPLIED_ALPHA_BLEND:e({enabled:!0,equationRgb:t.ADD,equationAlpha:t.ADD,functionSourceRgb:n.ONE,functionSourceAlpha:n.ONE,functionDestinationRgb:n.ONE_MINUS_SOURCE_ALPHA,functionDestinationAlpha:n.ONE_MINUS_SOURCE_ALPHA}),ADDITIVE_BLEND:e({enabled:!0,equationRgb:t.ADD,equationAlpha:t.ADD,functionSourceRgb:n.SOURCE_ALPHA,functionSourceAlpha:n.SOURCE_ALPHA,functionDestinationRgb:n.ONE,functionDestinationAlpha:n.ONE})})}),define("Scene/CullFace",["../Core/freezeObject","../Core/WebGLConstants"],function(e,t){"use strict";return e({FRONT:t.FRONT,BACK:t.BACK,FRONT_AND_BACK:t.FRONT_AND_BACK})}),define("Core/VertexFormat",["./defaultValue","./defined","./DeveloperError","./freezeObject"],function(e,t,n,r){"use strict";function a(t){t=e(t,e.EMPTY_OBJECT),this.position=e(t.position,!1),this.normal=e(t.normal,!1),this.st=e(t.st,!1),this.bitangent=e(t.bitangent,!1),this.tangent=e(t.tangent,!1),this.color=e(t.color,!1)}return a.POSITION_ONLY=r(new a({position:!0})),a.POSITION_AND_NORMAL=r(new a({position:!0,normal:!0})),a.POSITION_NORMAL_AND_ST=r(new a({position:!0,normal:!0,st:!0})),a.POSITION_AND_ST=r(new a({position:!0,st:!0})),a.POSITION_AND_COLOR=r(new a({position:!0,color:!0})),a.ALL=r(new a({position:!0,normal:!0,st:!0,tangent:!0,bitangent:!0})),a.DEFAULT=a.POSITION_NORMAL_AND_ST,a.packedLength=6,a.pack=function(t,n,r){return r=e(r,0),n[r++]=t.position?1:0,n[r++]=t.normal?1:0,n[r++]=t.st?1:0,n[r++]=t.tangent?1:0,n[r++]=t.bitangent?1:0,n[r]=t.color?1:0,n},a.unpack=function(n,r,i){return r=e(r,0),t(i)||(i=new a),i.position=1===n[r++],i.normal=1===n[r++],i.st=1===n[r++],i.tangent=1===n[r++],i.bitangent=1===n[r++],i.color=1===n[r],i},a.clone=function(e,n){if(t(e))return t(n)||(n=new a),n.position=e.position,n.normal=e.normal,n.st=e.st,n.tangent=e.tangent,n.bitangent=e.bitangent,n.color=e.color,n},a}),define("Shaders/Appearances/PerInstanceFlatColorAppearanceFS",[],function(){"use strict";return"varying vec4 v_color;\n\nvoid main()\n{\n    gl_FragColor = v_color;\n}\n"}),define("Shaders/Appearances/PolylineColorAppearanceVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec3 prevPosition3DHigh;\nattribute vec3 prevPosition3DLow;\nattribute vec3 nextPosition3DHigh;\nattribute vec3 nextPosition3DLow;\nattribute vec2 expandAndWidth;\nattribute vec4 color;\nattribute float batchId;\n\nvarying vec4 v_color;\n\nvoid main()\n{\n    float expandDir = expandAndWidth.x;\n    float width = abs(expandAndWidth.y) + 0.5;\n    bool usePrev = expandAndWidth.y < 0.0;\n\n    vec4 p = czm_computePosition();\n    vec4 prev = czm_computePrevPosition();\n    vec4 next = czm_computeNextPosition();\n\n    v_color = color;\n\n    float angle;\n    vec4 positionWC = getPolylineWindowCoordinates(p, prev, next, expandDir, width, usePrev, angle);\n    gl_Position = czm_viewportOrthographic * positionWC;\n\n#ifdef LOG_DEPTH\n    czm_vertexLogDepth(czm_modelViewProjectionRelativeToEye * p);\n#endif\n}\n"}),define("Shaders/PolylineCommon",[],function(){"use strict"
;return"void clipLineSegmentToNearPlane(\n    vec3 p0,\n    vec3 p1,\n    out vec4 positionWC,\n    out bool clipped,\n    out bool culledByNearPlane)\n{\n    culledByNearPlane = false;\n    clipped = false;\n\n    vec3 p1ToP0 = p1 - p0;\n    float magnitude = length(p1ToP0);\n    vec3 direction = normalize(p1ToP0);\n    float endPoint0Distance =  -(czm_currentFrustum.x + p0.z);\n    float denominator = -direction.z;\n\n    if (endPoint0Distance < 0.0 && abs(denominator) < czm_epsilon7)\n    {\n        culledByNearPlane = true;\n    }\n    else if (endPoint0Distance < 0.0 && abs(denominator) > czm_epsilon7)\n    {\n        // t = (-plane distance - dot(plane normal, ray origin)) / dot(plane normal, ray direction)\n        float t = (czm_currentFrustum.x + p0.z) / denominator;\n        if (t < 0.0 || t > magnitude)\n        {\n            culledByNearPlane = true;\n        }\n        else\n        {\n            p0 = p0 + t * direction;\n            clipped = true;\n        }\n    }\n\n    positionWC = czm_eyeToWindowCoordinates(vec4(p0, 1.0));\n}\n\nvec4 getPolylineWindowCoordinatesEC(vec4 positionEC, vec4 prevEC, vec4 nextEC, float expandDirection, float width, bool usePrevious, out float angle)\n{\n    vec4 endPointWC, p0, p1;\n    bool culledByNearPlane, clipped;\n\n#ifdef POLYLINE_DASH\n    // Compute the window coordinates of the points.\n    vec4 positionWindow = czm_eyeToWindowCoordinates(positionEC);\n    vec4 previousWindow = czm_eyeToWindowCoordinates(prevEC);\n    vec4 nextWindow = czm_eyeToWindowCoordinates(nextEC);\n\n    // Determine the relative screen space direction of the line.\n    vec2 lineDir;\n    if (usePrevious) {\n        lineDir = normalize(positionWindow.xy - previousWindow.xy);\n    }\n    else {\n        lineDir = normalize(nextWindow.xy - positionWindow.xy);\n    }\n    angle = atan(lineDir.x, lineDir.y) - 1.570796327; // precomputed atan(1,0)\n\n    // Quantize the angle so it doesn't change rapidly between segments.\n    angle = floor(angle / czm_piOverFour + 0.5) * czm_piOverFour;\n#endif\n\n    clipLineSegmentToNearPlane(prevEC.xyz, positionEC.xyz, p0, clipped, culledByNearPlane);\n    clipLineSegmentToNearPlane(nextEC.xyz, positionEC.xyz, p1, clipped, culledByNearPlane);\n    clipLineSegmentToNearPlane(positionEC.xyz, usePrevious ? prevEC.xyz : nextEC.xyz, endPointWC, clipped, culledByNearPlane);\n\n    if (culledByNearPlane)\n    {\n        return vec4(0.0, 0.0, 0.0, 1.0);\n    }\n\n    vec2 prevWC = normalize(p0.xy - endPointWC.xy);\n    vec2 nextWC = normalize(p1.xy - endPointWC.xy);\n\n    float expandWidth = width * 0.5;\n    vec2 direction;\n\n    if (czm_equalsEpsilon(prevEC.xyz - positionEC.xyz, vec3(0.0), czm_epsilon1) || czm_equalsEpsilon(prevWC, -nextWC, czm_epsilon1))\n    {\n        direction = vec2(-nextWC.y, nextWC.x);\n    }\n    else if (czm_equalsEpsilon(nextEC.xyz - positionEC.xyz, vec3(0.0), czm_epsilon1) || clipped)\n    {\n        direction = vec2(prevWC.y, -prevWC.x);\n    }\n    else\n    {\n        vec2 normal = vec2(-nextWC.y, nextWC.x);\n        direction = normalize((nextWC + prevWC) * 0.5);\n        if (dot(direction, normal) < 0.0)\n        {\n            direction = -direction;\n        }\n\n        // The sine of the angle between the two vectors is given by the formula\n        //         |a x b| = |a||b|sin(theta)\n        // which is\n        //     float sinAngle = length(cross(vec3(direction, 0.0), vec3(nextWC, 0.0)));\n        // Because the z components of both vectors are zero, the x and y coordinate will be zero.\n        // Therefore, the sine of the angle is just the z component of the cross product.\n        float sinAngle = abs(direction.x * nextWC.y - direction.y * nextWC.x);\n        expandWidth = clamp(expandWidth / sinAngle, 0.0, width * 2.0);\n    }\n\n    vec2 offset = direction * expandDirection * expandWidth * czm_resolutionScale;\n    return vec4(endPointWC.xy + offset, -endPointWC.z, 1.0);\n}\n\nvec4 getPolylineWindowCoordinates(vec4 position, vec4 previous, vec4 next, float expandDirection, float width, bool usePrevious, out float angle)\n{\n    vec4 positionEC = czm_modelViewRelativeToEye * position;\n    vec4 prevEC = czm_modelViewRelativeToEye * previous;\n    vec4 nextEC = czm_modelViewRelativeToEye * next;\n    return getPolylineWindowCoordinatesEC(positionEC, prevEC, nextEC, expandDirection, width, usePrevious, angle);\n}\n"}),define("Scene/Appearance",["../Core/clone","../Core/combine","../Core/defaultValue","../Core/defined","../Core/defineProperties","./BlendingState","./CullFace"],function(e,t,n,r,a,i,o){"use strict";function s(e){e=n(e,n.EMPTY_OBJECT),this.material=e.material,this.translucent=n(e.translucent,!0),this._vertexShaderSource=e.vertexShaderSource,this._fragmentShaderSource=e.fragmentShaderSource,this._renderState=e.renderState,this._closed=n(e.closed,!1)}return a(s.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}}}),s.prototype.getFragmentShaderSource=function(){var e=[];return this.flat&&e.push("#define FLAT"),this.faceForward&&e.push("#define FACE_FORWARD"),r(this.material)&&e.push(this.material.shaderSource),e.push(this.fragmentShaderSource),e.join("\n")},s.prototype.isTranslucent=function(){return r(this.material)&&this.material.isTranslucent()||!r(this.material)&&this.translucent},s.prototype.getRenderState=function(){var t=this.isTranslucent(),n=e(this.renderState,!1);return t?(n.depthMask=!1,n.blending=i.ALPHA_BLEND):n.depthMask=!0,n},s.getDefaultRenderState=function(e,n,a){var s={depthTest:{enabled:!0}};return e&&(s.depthMask=!1,s.blending=i.ALPHA_BLEND),n&&(s.cull={enabled:!0,face:o.BACK}),r(a)&&(s=t(a,s,!0)),s},s}),define("Scene/PolylineColorAppearance",["../Core/defaultValue","../Core/defineProperties","../Core/VertexFormat","../Shaders/Appearances/PerInstanceFlatColorAppearanceFS","../Shaders/Appearances/PolylineColorAppearanceVS","../Shaders/PolylineCommon","./Appearance"],function(e,t,n,r,a,i,o){"use strict";function s(t){t=e(t,e.EMPTY_OBJECT);var n=e(t.translucent,!0),r=s.VERTEX_FORMAT;this.material=void 0,this.translucent=n,this._vertexShaderSource=e(t.vertexShaderSource,c),this._fragmentShaderSource=e(t.fragmentShaderSource,u),this._renderState=o.getDefaultRenderState(n,!1,t.renderState),this._closed=!1,this._vertexFormat=r}var c=i+"\n"+a,u=r;return t(s.prototype,{vertexShaderSource:{get:function(){return this._vertexShaderSource}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}},vertexFormat:{get:function(){return this._vertexFormat}}}),s.VERTEX_FORMAT=n.POSITION_ONLY,s.prototype.getFragmentShaderSource=o.prototype.getFragmentShaderSource,s.prototype.isTranslucent=o.prototype.isTranslucent,s.prototype.getRenderState=o.prototype.getRenderState,s}),define("Shaders/Appearances/PolylineMaterialAppearanceVS",[],function(){"use strict";return"attribute vec3 position3DHigh;\nattribute vec3 position3DLow;\nattribute vec3 prevPosition3DHigh;\nattribute vec3 prevPosition3DLow;\nattribute vec3 nextPosition3DHigh;\nattribute vec3 nextPosition3DLow;\nattribute vec2 expandAndWidth;\nattribute vec2 st;\nattribute float batchId;\n\nvarying float v_width;\nvarying vec2 v_st;\nvarying float v_polylineAngle;\n\nvoid main()\n{\n    float expandDir = expandAndWidth.x;\n    float width = abs(expandAndWidth.y) + 0.5;\n    bool usePrev = expandAndWidth.y < 0.0;\n\n    vec4 p = czm_computePosition();\n    vec4 prev = czm_computePrevPosition();\n    vec4 next = czm_computeNextPosition();\n\n    v_width = width;\n    v_st = st;\n\n    vec4 positionWC = getPolylineWindowCoordinates(p, prev, next, expandDir, width, usePrev, v_polylineAngle);\n    gl_Position = czm_viewportOrthographic * positionWC;\n\n#ifdef LOG_DEPTH\n    czm_vertexLogDepth(czm_modelViewProjectionRelativeToEye * p);\n#endif\n}\n"}),define("Shaders/PolylineFS",[],function(){"use strict";return"#ifdef VECTOR_TILE\nuniform vec4 u_highlightColor;\n#endif\n\nvarying vec2 v_st;\n\nvoid main()\n{\n    czm_materialInput materialInput;\n\n    materialInput.s = v_st.s;\n    materialInput.st = v_st;\n    materialInput.str = vec3(v_st, 0.0);\n\n    czm_material material = czm_getMaterial(materialInput);\n    gl_FragColor = vec4(material.diffuse + material.emission, material.alpha);\n#ifdef VECTOR_TILE\n    gl_FragColor *= u_highlightColor;\n#endif\n\n    czm_writeLogDepth();\n}\n"}),define("Core/createGuid",[],function(){"use strict";function e(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})}return e}),define("Core/CompressedTextureBuffer",["./defined","./defineProperties"],function(e,t){"use strict";function n(e,t,n,r){this._format=e,this._width=t,this._height=n,this._buffer=r}return t(n.prototype,{internalFormat:{get:function(){return this._format}},width:{get:function(){return this._width}},height:{get:function(){return this._height}},bufferView:{get:function(){return this._buffer}}}),n.clone=function(t){if(e(t))return new n(t._format,t._width,t._height,t._buffer)},n.prototype.clone=function(){return n.clone(this)},n}),define("Core/TaskProcessor",["../ThirdParty/when","./buildModuleUrl","./defaultValue","./defined","./destroyObject","./DeveloperError","./Event","./FeatureDetection","./getAbsoluteUri","./isCrossOriginUrl","./Resource","./RuntimeError","require"],function(e,t,n,r,a,i,o,s,c,u,l,d,f){"use strict";function m(){if(!r(y._canTransferArrayBuffer)){var t=new Worker(h("Workers/transferTypedArrayTest.js"));t.postMessage=n(t.webkitPostMessage,t.postMessage);var a=new Int8Array([99]);try{t.postMessage({array:a},[a.buffer])}catch(e){return y._canTransferArrayBuffer=!1,y._canTransferArrayBuffer}var i=e.defer();t.onmessage=function(e){var n=e.data.array,a=r(n)&&99===n[0];i.resolve(a),t.terminate(),y._canTransferArrayBuffer=a},y._canTransferArrayBuffer=i.promise}return y._canTransferArrayBuffer}function p(e,t){--e._activeTasks;var n=t.id;if(r(n)){var a=e._deferreds,o=a[n];if(r(t.error)){var s=t.error;"RuntimeError"===s.name?(s=new d(t.error.message),s.stack=t.error.stack):"DeveloperError"===s.name&&(s=new i(t.error.message),s.stack=t.error.stack),T.raiseEvent(s),o.reject(s)}else T.raiseEvent(),o.resolve(t.result);delete a[n]}}function h(e){var n=t(e);if(u(n)){var r,a='importScripts("'+n+'");';try{r=new Blob([a],{type:"application/javascript"})}catch(e){var i=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,o=new i;o.append(a),r=o.getBlob("application/javascript")}n=(window.URL||window.webkitURL).createObjectURL(r)}return n}function _(){return r(E)||(E=h("Workers/cesiumWorkerBootstrapper.js")),E}function v(e){var a=new Worker(_());a.postMessage=n(a.webkitPostMessage,a.postMessage);var i={loaderConfig:{},workerModule:y._workerModulePrefix+e._workerName};return r(y._loaderConfig)?i.loaderConfig=y._loaderConfig:(r(define.amd)&&!define.amd.toUrlUndefined&&r(f.toUrl)||(i.loaderConfig.paths={Workers:t("Workers")}),i.loaderConfig.baseUrl=t.getCesiumBaseUrl().url),a.postMessage(i),a.onmessage=function(t){p(e,t.data)},a}function g(n,a){var i={modulePath:void 0,wasmBinaryFile:void 0,wasmBinary:void 0};if(!s.supportsWebAssembly()){if(!r(a.fallbackModulePath))throw new d("This browser does not support Web Assembly, and no backup module was provided for "+n._workerName);return i.modulePath=t(a.fallbackModulePath),e.resolve(i)}return i.modulePath=t(a.modulePath),i.wasmBinaryFile=t(a.wasmBinaryFile),l.fetchArrayBuffer({url:i.wasmBinaryFile}).then(function(e){return i.wasmBinary=e,i})}function y(e,t){this._workerName=e,this._maximumActiveTasks=n(t,5),this._activeTasks=0,this._deferreds={},this._nextID=0}var E,T=new o,C=[];return y.prototype.scheduleTask=function(t,n){if(r(this._worker)||(this._worker=v(this)),!(this._activeTasks>=this._maximumActiveTasks)){++this._activeTasks;var a=this;return e(m(),function(i){r(n)?i||(n.length=0):n=C;var o=a._nextID++,s=e.defer();return a._deferreds[o]=s,a._worker.postMessage({id:o,parameters:t,canTransferArrayBuffer:i},n),s.promise})}},y.prototype.initWebAssemblyModule=function(t){r(this._worker)||(this._worker=v(this));var n=e.defer(),a=this,i=this._worker;return g(this,t).then(function(t){return e(m(),function(e){var o,s=t.wasmBinary;r(s)&&e&&(o=[s]),i.onmessage=function(e){i.onmessage=function(e){p(a,e.data)},n.resolve(e.data)},i.postMessage({webAssemblyConfig:t},o)})}),n},y.prototype.isDestroyed=function(){return!1},y.prototype.destroy=function(){return r(this._worker)&&this._worker.terminate(),a(this)},y.taskCompletedEvent=T,y._defaultWorkerModulePrefix="Workers/",y._workerModulePrefix=y._defaultWorkerModulePrefix,y._loaderConfig=void 0,y._canTransferArrayBuffer=void 0,y}),define("Core/loadCRN",["../ThirdParty/when","./CompressedTextureBuffer","./defined","./DeveloperError","./Resource","./TaskProcessor"],function(e,t,n,r,a,i){"use strict";function o(r){var i;if(r instanceof ArrayBuffer||ArrayBuffer.isView(r))i=e.resolve(r);else{i=a.createIfNeeded(r).fetchArrayBuffer()}if(n(i))return i.then(function(e){if(n(e)){var t=[];return e instanceof ArrayBuffer?t.push(e):0===e.byteOffset&&e.byteLength===e.buffer.byteLength?t.push(e.buffer):(e=e.slice(0,e.length),t.push(e.buffer)),s.scheduleTask(e,t)}}).then(function(e){return t.clone(e)})}var s=new i("transcodeCRNToDXT",Number.POSITIVE_INFINITY);return o}),define("Renderer/PixelDatatype",["../Core/freezeObject","../Core/WebGLConstants"],function(e,t){"use strict";var n={UNSIGNED_BYTE:t.UNSIGNED_BYTE,UNSIGNED_SHORT:t.UNSIGNED_SHORT,UNSIGNED_INT:t.UNSIGNED_INT,FLOAT:t.FLOAT,HALF_FLOAT:t.HALF_FLOAT_OES,UNSIGNED_INT_24_8:t.UNSIGNED_INT_24_8,UNSIGNED_SHORT_4_4_4_4:t.UNSIGNED_SHORT_4_4_4_4,UNSIGNED_SHORT_5_5_5_1:t.UNSIGNED_SHORT_5_5_5_1,UNSIGNED_SHORT_5_6_5:t.UNSIGNED_SHORT_5_6_5,isPacked:function(e){return e===n.UNSIGNED_INT_24_8||e===n.UNSIGNED_SHORT_4_4_4_4||e===n.UNSIGNED_SHORT_5_5_5_1||e===n.UNSIGNED_SHORT_5_6_5},sizeInBytes:function(e){switch(e){case n.UNSIGNED_BYTE:return 1;case n.UNSIGNED_SHORT:case n.UNSIGNED_SHORT_4_4_4_4:case n.UNSIGNED_SHORT_5_5_5_1:case n.UNSIGNED_SHORT_5_6_5:case n.HALF_FLOAT:return 2;case n.UNSIGNED_INT:case n.FLOAT:case n.UNSIGNED_INT_24_8:return 4}},validate:function(e){return e===n.UNSIGNED_BYTE||e===n.UNSIGNED_SHORT||e===n.UNSIGNED_INT||e===n.FLOAT||e===n.HALF_FLOAT||e===n.UNSIGNED_INT_24_8||e===n.UNSIGNED_SHORT_4_4_4_4||e===n.UNSIGNED_SHORT_5_5_5_1||e===n.UNSIGNED_SHORT_5_6_5}};return e(n)}),define("Core/PixelFormat",["../Renderer/PixelDatatype","./freezeObject","./WebGLConstants"],function(e,t,n){"use strict";var r={DEPTH_COMPONENT:n.DEPTH_COMPONENT,DEPTH_STENCIL:n.DEPTH_STENCIL,ALPHA:n.ALPHA,RGB:n.RGB,RGBA:n.RGBA,LUMINANCE:n.LUMINANCE,LUMINANCE_ALPHA:n.LUMINANCE_ALPHA,RGB_DXT1:n.COMPRESSED_RGB_S3TC_DXT1_EXT,RGBA_DXT1:n.COMPRESSED_RGBA_S3TC_DXT1_EXT,RGBA_DXT3:n.COMPRESSED_RGBA_S3TC_DXT3_EXT,RGBA_DXT5:n.COMPRESSED_RGBA_S3TC_DXT5_EXT,RGB_PVRTC_4BPPV1:n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG,RGB_PVRTC_2BPPV1:n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG,RGBA_PVRTC_4BPPV1:n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,RGBA_PVRTC_2BPPV1:n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG,RGB_ETC1:n.COMPRESSED_RGB_ETC1_WEBGL,componentsLength:function(e){switch(e){case r.RGB:return 3;case r.RGBA:return 4;case r.LUMINANCE_ALPHA:return 2;case r.ALPHA:case r.LUMINANCE:default:return 1}},validate:function(e){return e===r.DEPTH_COMPONENT||e===r.DEPTH_STENCIL||e===r.ALPHA||e===r.RGB||e===r.RGBA||e===r.LUMINANCE||e===r.LUMINANCE_ALPHA||e===r.RGB_DXT1||e===r.RGBA_DXT1||e===r.RGBA_DXT3||e===r.RGBA_DXT5||e===r.RGB_PVRTC_4BPPV1||e===r.RGB_PVRTC_2BPPV1||e===r.RGBA_PVRTC_4BPPV1||e===r.RGBA_PVRTC_2BPPV1||e===r.RGB_ETC1},isColorFormat:function(e){return e===r.ALPHA||e===r.RGB||e===r.RGBA||e===r.LUMINANCE||e===r.LUMINANCE_ALPHA},isDepthFormat:function(e){return e===r.DEPTH_COMPONENT||e===r.DEPTH_STENCIL},isCompressedFormat:function(e){return e===r.RGB_DXT1||e===r.RGBA_DXT1||e===r.RGBA_DXT3||e===r.RGBA_DXT5||e===r.RGB_PVRTC_4BPPV1||e===r.RGB_PVRTC_2BPPV1||e===r.RGBA_PVRTC_4BPPV1||e===r.RGBA_PVRTC_2BPPV1||e===r.RGB_ETC1},isDXTFormat:function(e){return e===r.RGB_DXT1||e===r.RGBA_DXT1||e===r.RGBA_DXT3||e===r.RGBA_DXT5},isPVRTCFormat:function(e){return e===r.RGB_PVRTC_4BPPV1||e===r.RGB_PVRTC_2BPPV1||e===r.RGBA_PVRTC_4BPPV1||e===r.RGBA_PVRTC_2BPPV1},isETC1Format:function(e){return e===r.RGB_ETC1},compressedTextureSizeInBytes:function(e,t,n){switch(e){case r.RGB_DXT1:case r.RGBA_DXT1:case r.RGB_ETC1:return Math.floor((t+3)/4)*Math.floor((n+3)/4)*8;case r.RGBA_DXT3:case r.RGBA_DXT5:return Math.floor((t+3)/4)*Math.floor((n+3)/4)*16;case r.RGB_PVRTC_4BPPV1:case r.RGBA_PVRTC_4BPPV1:return Math.floor((Math.max(t,8)*Math.max(n,8)*4+7)/8);case r.RGB_PVRTC_2BPPV1:case r.RGBA_PVRTC_2BPPV1:return Math.floor((Math.max(t,16)*Math.max(n,8)*2+7)/8);default:return 0}},textureSizeInBytes:function(t,n,a,i){var o=r.componentsLength(t);return e.isPacked(n)&&(o=1),o*e.sizeInBytes(n)*a*i},createTypedArray:function(t,n,a,i){var o=e.sizeInBytes(n);return new(o===Uint8Array.BYTES_PER_ELEMENT?Uint8Array:o===Uint16Array.BYTES_PER_ELEMENT?Uint16Array:o===Float32Array.BYTES_PER_ELEMENT&&n===e.FLOAT?Float32Array:Uint32Array)(r.componentsLength(t)*a*i)},flipY:function(e,t,n,a,i){if(1===i)return e;for(var o=r.createTypedArray(t,n,a,i),s=r.componentsLength(t),c=a*s,u=0;u<i;++u)for(var l=u*i*s,d=(i-u-1)*i*s,f=0;f<c;++f)o[d+f]=e[l+f];return o}};return t(r)}),define("Core/loadKTX",["../ThirdParty/when","./Check","./CompressedTextureBuffer","./defined","./PixelFormat","./Resource","./RuntimeError"],function(e,t,n,r,a,i,o){"use strict";function s(t){var n;if(t instanceof ArrayBuffer||ArrayBuffer.isView(t))n=e.resolve(t);else{n=i.createIfNeeded(t).fetchArrayBuffer()}if(r(n))return n.then(function(e){if(r(e))return c(e)})}function c(e){for(var t=new Uint8Array(e),i=!0,s=0;s<u.length;++s)if(u[s]!==t[s]){i=!1;break}if(!i)throw new o("Invalid KTX file.");var c,f;r(e.buffer)?(c=new DataView(e.buffer),f=e.byteOffset):(c=new DataView(e),f=0),f+=12;var m=c.getUint32(f,!0);if(f+=d,m!==l)throw new o("File is the wrong endianness.");var p=c.getUint32(f,!0);f+=d;var h=c.getUint32(f,!0);f+=d;var _=c.getUint32(f,!0);f+=d;var v=c.getUint32(f,!0);f+=d;var g=c.getUint32(f,!0);f+=d;var y=c.getUint32(f,!0);f+=d;var E=c.getUint32(f,!0);f+=d;var T=c.getUint32(f,!0);f+=d;var C=c.getUint32(f,!0);f+=d;var S=c.getUint32(f,!0);f+=d;var A=c.getUint32(f,!0);f+=d;var x=c.getUint32(f,!0);f+=d,f+=x;var w=c.getUint32(f,!0);f+=d;var b;if(b=r(e.buffer)?new Uint8Array(e.buffer,f,w):new Uint8Array(e,f,w),32849===v?v=a.RGB:32856===v&&(v=a.RGBA),!a.validate(v))throw new o("glInternalFormat is not a valid format.");if(a.isCompressedFormat(v)){if(0!==p)throw new o("glType must be zero when the texture is compressed.");if(1!==h)throw new o("The type size for compressed textures must be 1.");if(0!==_)throw new o("glFormat must be zero when the texture is compressed.")}else if(g!==_)throw new o("The base internal format must be the same as the format for uncompressed textures.");if(0!==T)throw new o("3D textures are unsupported.");if(0!==C)throw new o("Texture arrays are unsupported.");if(1!==S)throw new o("Cubemaps are unsupported.");if(A>1){var R=a.isCompressedFormat(v)?a.compressedTextureSizeInBytes(v,y,E):a.textureSizeInBytes(v,y,E);b=new Uint8Array(b.buffer,b.byteOffset,R)}return new n(v,y,E,b)}var u=[171,75,84,88,32,49,49,187,13,10,26,10],l=67305985,d=4;return s}),define("Renderer/CubeMapFace",["../Core/Check","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","../Core/PixelFormat","./PixelDatatype"],function(e,t,n,r,a,i,o){"use strict";function s(e,t,n,r,a,i,o,s,c,u){this._gl=e,this._texture=t,this._textureTarget=n,this._targetFace=r,this._pixelFormat=a,this._pixelDatatype=i,this._size=o,this._preMultiplyAlpha=s,this._flipY=c,this._initialized=u}return r(s.prototype,{pixelFormat:{get:function(){return this._pixelFormat}},pixelDatatype:{get:function(){return this._pixelDatatype}},_target:{get:function(){return this._targetFace}}}),s.prototype.copyFrom=function(e,r,a){r=t(r,0),a=t(a,0);var o=this._gl,s=this._textureTarget,c=this._targetFace;o.activeTexture(o.TEXTURE0),o.bindTexture(s,this._texture);var u=e.width,l=e.height,d=e.arrayBufferView,f=this._size,m=this._pixelFormat,p=this._pixelDatatype,h=this._preMultiplyAlpha,_=this._flipY,v=!1;if(!this._initialized){if(0===r&&0===a&&u===f&&l===f)n(d)?(o.pixelStorei(o.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,!1),_&&(d=i.flipY(d,m,p,f,f)),o.texImage2D(c,0,m,f,f,0,m,p,d)):(o.pixelStorei(o.UNPACK_PREMULTIPLY_ALPHA_WEBGL,h),o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,_),o.texImage2D(c,0,m,m,p,e)),v=!0;else{o.pixelStorei(o.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,!1);var g=i.createTypedArray(m,p,f,f);o.texImage2D(c,0,m,f,f,0,m,p,g)}this._initialized=!0}v||(d?(o.pixelStorei(o.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,!1),_&&(d=i.flipY(d,m,p,u,l)),o.texSubImage2D(c,0,r,a,u,l,m,p,d)):(o.pixelStorei(o.UNPACK_PREMULTIPLY_ALPHA_WEBGL,h),o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,_),o.texSubImage2D(c,0,r,a,m,p,e))),o.bindTexture(s,null)},s.prototype.copyFromFramebuffer=function(e,n,r,a,i,o){e=t(e,0),n=t(n,0),r=t(r,0),a=t(a,0),i=t(i,this._size),o=t(o,this._size);var s=this._gl,c=this._textureTarget;s.activeTexture(s.TEXTURE0),s.bindTexture(c,this._texture),s.copyTexSubImage2D(this._targetFace,0,e,n,r,a,i,o),s.bindTexture(c,null),this._initialized=!0},s}),define("Renderer/MipmapHint",["../Core/freezeObject","../Core/WebGLConstants"],function(e,t){"use strict";var n={DONT_CARE:t.DONT_CARE,FASTEST:t.FASTEST,NICEST:t.NICEST,validate:function(e){return e===n.DONT_CARE||e===n.FASTEST||e===n.NICEST}};return e(n)}),define("Renderer/TextureMagnificationFilter",["../Core/freezeObject","../Core/WebGLConstants"],function(e,t){"use strict";var n={NEAREST:t.NEAREST,LINEAR:t.LINEAR,validate:function(e){return e===n.NEAREST||e===n.LINEAR}};return e(n)}),define("Renderer/TextureMinificationFilter",["../Core/freezeObject","../Core/WebGLConstants"],function(e,t){"use strict";var n={NEAREST:t.NEAREST,LINEAR:t.LINEAR,NEAREST_MIPMAP_NEAREST:t.NEAREST_MIPMAP_NEAREST,LINEAR_MIPMAP_NEAREST:t.LINEAR_MIPMAP_NEAREST,NEAREST_MIPMAP_LINEAR:t.NEAREST_MIPMAP_LINEAR,LINEAR_MIPMAP_LINEAR:t.LINEAR_MIPMAP_LINEAR,validate:function(e){return e===n.NEAREST||e===n.LINEAR||e===n.NEAREST_MIPMAP_NEAREST||e===n.LINEAR_MIPMAP_NEAREST||e===n.NEAREST_MIPMAP_LINEAR||e===n.LINEAR_MIPMAP_LINEAR}};return e(n)}),define("Renderer/TextureWrap",["../Core/freezeObject","../Core/WebGLConstants"],function(e,t){"use strict";var n={CLAMP_TO_EDGE:t.CLAMP_TO_EDGE,REPEAT:t.REPEAT,MIRRORED_REPEAT:t.MIRRORED_REPEAT,validate:function(e){return e===n.CLAMP_TO_EDGE||e===n.REPEAT||e===n.MIRRORED_REPEAT}};return e(n)}),define("Renderer/Sampler",["../Core/Check","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/DeveloperError","./TextureMagnificationFilter","./TextureMinificationFilter","./TextureWrap"],function(e,t,n,r,a,i,o,s){"use strict";function c(e){e=t(e,t.EMPTY_OBJECT);var r=t(e.wrapS,s.CLAMP_TO_EDGE),a=t(e.wrapT,s.CLAMP_TO_EDGE),c=t(e.minificationFilter,o.LINEAR),u=t(e.magnificationFilter,i.LINEAR),l=n(e.maximumAnisotropy)?e.maximumAnisotropy:1;this._wrapS=r,this._wrapT=a,this._minificationFilter=c,this._magnificationFilter=u,this._maximumAnisotropy=l}return r(c.prototype,{wrapS:{get:function(){return this._wrapS}},wrapT:{get:function(){return this._wrapT}},minificationFilter:{get:function(){return this._minificationFilter}},magnificationFilter:{get:function(){return this._magnificationFilter}},maximumAnisotropy:{get:function(){return this._maximumAnisotropy}}}),c.equals=function(e,t){return e===t||n(e)&&n(t)&&e._wrapS===t._wrapS&&e._wrapT===t._wrapT&&e._minificationFilter===t._minificationFilter&&e._magnificationFilter===t._magnificationFilter&&e._maximumAnisotropy===t._maximumAnisotropy},c}),define("Renderer/CubeMap",["../Core/Check","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Math","../Core/PixelFormat","./ContextLimits","./CubeMapFace","./MipmapHint","./PixelDatatype","./Sampler","./TextureMagnificationFilter","./TextureMinificationFilter"],function(e,t,n,r,a,i,o,s,c,u,l,d,f,m,p){"use strict";function h(e){function r(e,t,n,r){var a=t.arrayBufferView;a?(g.pixelStorei(g.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),g.pixelStorei(g.UNPACK_FLIP_Y_WEBGL,!1),r&&(a=s.flipY(a,m,p,l,l)),g.texImage2D(e,0,m,l,l,0,m,p,a)):(g.pixelStorei(g.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n),g.pixelStorei(g.UNPACK_FLIP_Y_WEBGL,r),g.texImage2D(e,0,m,m,p,t))}e=t(e,t.EMPTY_OBJECT);var a,i=e.context,o=e.source;if(n(o)){var c=[o.positiveX,o.negativeX,o.positiveY,o.negativeY,o.positiveZ,o.negativeZ];a=c[0].width,c[0].height}else a=e.width,e.height;var l=a,m=t(e.pixelFormat,s.RGBA),p=t(e.pixelDatatype,d.UNSIGNED_BYTE),h=6*s.textureSizeInBytes(m,p,l,l),_=e.preMultiplyAlpha||m===s.RGB||m===s.LUMINANCE,v=t(e.flipY,!0),g=i._gl,y=g.TEXTURE_CUBE_MAP,E=g.createTexture();g.activeTexture(g.TEXTURE0),g.bindTexture(y,E),n(o)?(r(g.TEXTURE_CUBE_MAP_POSITIVE_X,o.positiveX,_,v),r(g.TEXTURE_CUBE_MAP_NEGATIVE_X,o.negativeX,_,v),r(g.TEXTURE_CUBE_MAP_POSITIVE_Y,o.positiveY,_,v),r(g.TEXTURE_CUBE_MAP_NEGATIVE_Y,o.negativeY,_,v),r(g.TEXTURE_CUBE_MAP_POSITIVE_Z,o.positiveZ,_,v),r(g.TEXTURE_CUBE_MAP_NEGATIVE_Z,o.negativeZ,_,v)):(g.texImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_X,0,m,l,l,0,m,p,null),g.texImage2D(g.TEXTURE_CUBE_MAP_NEGATIVE_X,0,m,l,l,0,m,p,null),g.texImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_Y,0,m,l,l,0,m,p,null),g.texImage2D(g.TEXTURE_CUBE_MAP_NEGATIVE_Y,0,m,l,l,0,m,p,null),g.texImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_Z,0,m,l,l,0,m,p,null),g.texImage2D(g.TEXTURE_CUBE_MAP_NEGATIVE_Z,0,m,l,l,0,m,p,null)),g.bindTexture(y,null),this._gl=g,this._textureFilterAnisotropic=i._textureFilterAnisotropic,this._textureTarget=y,this._texture=E,this._pixelFormat=m,this._pixelDatatype=p,this._size=l,this._hasMipmap=!1,this._sizeInBytes=h,this._preMultiplyAlpha=_,this._flipY=v,this._sampler=void 0;var T=n(o);this._positiveX=new u(g,E,y,g.TEXTURE_CUBE_MAP_POSITIVE_X,m,p,l,_,v,T),this._negativeX=new u(g,E,y,g.TEXTURE_CUBE_MAP_NEGATIVE_X,m,p,l,_,v,T),this._positiveY=new u(g,E,y,g.TEXTURE_CUBE_MAP_POSITIVE_Y,m,p,l,_,v,T),this._negativeY=new u(g,E,y,g.TEXTURE_CUBE_MAP_NEGATIVE_Y,m,p,l,_,v,T),this._positiveZ=new u(g,E,y,g.TEXTURE_CUBE_MAP_POSITIVE_Z,m,p,l,_,v,T),this._negativeZ=new u(g,E,y,g.TEXTURE_CUBE_MAP_NEGATIVE_Z,m,p,l,_,v,T),this.sampler=n(e.sampler)?e.sampler:new f}return r(h.prototype,{positiveX:{get:function(){return this._positiveX}},negativeX:{get:function(){return this._negativeX}},positiveY:{get:function(){return this._positiveY}},negativeY:{get:function(){return this._negativeY}},positiveZ:{get:function(){return this._positiveZ}},negativeZ:{get:function(){return this._negativeZ}},sampler:{get:function(){return this._sampler},set:function(e){var t=e.minificationFilter,r=e.magnificationFilter,a=t===p.NEAREST_MIPMAP_NEAREST||t===p.NEAREST_MIPMAP_LINEAR||t===p.LINEAR_MIPMAP_NEAREST||t===p.LINEAR_MIPMAP_LINEAR;this._pixelDatatype!==d.FLOAT&&this._pixelDatatype!==d.HALF_FLOAT||(t=a?p.NEAREST_MIPMAP_NEAREST:p.NEAREST,r=m.NEAREST);var i=this._gl,o=this._textureTarget;i.activeTexture(i.TEXTURE0),i.bindTexture(o,this._texture),i.texParameteri(o,i.TEXTURE_MIN_FILTER,t),i.texParameteri(o,i.TEXTURE_MAG_FILTER,r),i.texParameteri(o,i.TEXTURE_WRAP_S,e.wrapS),i.texParameteri(o,i.TEXTURE_WRAP_T,e.wrapT),n(this._textureFilterAnisotropic)&&i.texParameteri(o,this._textureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT,e.maximumAnisotropy),i.bindTexture(o,null),this._sampler=e}},pixelFormat:{get:function(){return this._pixelFormat}},pixelDatatype:{get:function(){return this._pixelDatatype}},width:{get:function(){return this._size}},height:{get:function(){return this._size}},sizeInBytes:{get:function(){return this._hasMipmap?Math.floor(4*this._sizeInBytes/3):this._sizeInBytes}},preMultiplyAlpha:{get:function(){return this._preMultiplyAlpha}},flipY:{get:function(){return this._flipY}},_target:{get:function(){return this._textureTarget}}}),h.prototype.generateMipmap=function(e){e=t(e,l.DONT_CARE),this._hasMipmap=!0;var n=this._gl,r=this._textureTarget;n.hint(n.GENERATE_MIPMAP_HINT,e),n.activeTexture(n.TEXTURE0),n.bindTexture(r,this._texture),n.generateMipmap(r),n.bindTexture(r,null)},h.prototype.isDestroyed=function(){return!1},h.prototype.destroy=function(){return this._gl.deleteTexture(this._texture),this._positiveX=a(this._positiveX),this._negativeX=a(this._negativeX),this._positiveY=a(this._positiveY),this._negativeY=a(this._negativeY),this._positiveZ=a(this._positiveZ),this._negativeZ=a(this._negativeZ),a(this)},h}),define("Renderer/Texture",["../Core/Cartesian2","../Core/Check","../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Math","../Core/PixelFormat","../Core/WebGLConstants","./ContextLimits","./MipmapHint","./PixelDatatype","./Sampler","./TextureMagnificationFilter","./TextureMinificationFilter"],function(e,t,n,r,a,i,o,s,c,u,l,d,f,m,p,h,_){"use strict";function v(t){t=r(t,r.EMPTY_OBJECT);var i=t.context,o=t.width,s=t.height,c=t.source;a(c)&&(a(o)||(o=r(c.videoWidth,c.width)),a(s)||(s=r(c.videoHeight,c.height)));var d=r(t.pixelFormat,u.RGBA),f=r(t.pixelDatatype,m.UNSIGNED_BYTE),h=d,_=u.isCompressedFormat(h);if(i.webgl2)if(d===u.DEPTH_STENCIL?h=l.DEPTH24_STENCIL8:d===u.DEPTH_COMPONENT&&(f===m.UNSIGNED_SHORT?h=l.DEPTH_COMPONENT16:f===m.UNSIGNED_INT&&(h=l.DEPTH_COMPONENT24)),f===m.FLOAT)switch(d){case u.RGBA:h=l.RGBA32F;break;case u.RGB:h=l.RGB32F;break;case u.RG:h=l.RG32F;break;case u.R:h=l.R32F}else if(f===m.HALF_FLOAT)switch(d){case u.RGBA:h=l.RGBA16F;break;case u.RGB:h=l.RGB16F;break;case u.RG:h=l.RG16F;break;case u.R:h=l.R16F}var v=t.preMultiplyAlpha||d===u.RGB||d===u.LUMINANCE,g=r(t.flipY,!0),y=!0,E=i._gl,T=E.TEXTURE_2D,C=E.createTexture();if(E.activeTexture(E.TEXTURE0),E.bindTexture(T,C),a(c))if(a(c.arrayBufferView)){E.pixelStorei(E.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),E.pixelStorei(E.UNPACK_FLIP_Y_WEBGL,!1);var S=c.arrayBufferView;_?E.compressedTexImage2D(T,0,h,o,s,0,S):(g&&(S=u.flipY(S,d,f,o,s)),E.texImage2D(T,0,h,o,s,0,d,f,S))}else a(c.framebuffer)?(E.pixelStorei(E.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),E.pixelStorei(E.UNPACK_FLIP_Y_WEBGL,!1),c.framebuffer!==i.defaultFramebuffer&&c.framebuffer._bind(),E.copyTexImage2D(T,0,h,c.xOffset,c.yOffset,o,s,0),c.framebuffer!==i.defaultFramebuffer&&c.framebuffer._unBind()):(E.pixelStorei(E.UNPACK_PREMULTIPLY_ALPHA_WEBGL,v),E.pixelStorei(E.UNPACK_FLIP_Y_WEBGL,g),E.texImage2D(T,0,h,d,f,c));else E.texImage2D(T,0,h,o,s,0,d,f,null),y=!1;E.bindTexture(T,null);var A;A=_?u.compressedTextureSizeInBytes(d,o,s):u.textureSizeInBytes(d,f,o,s),this._id=n(),this._context=i,this._textureFilterAnisotropic=i._textureFilterAnisotropic,this._textureTarget=T,this._texture=C,this._pixelFormat=d,this._pixelDatatype=f,this._width=o,this._height=s,this._dimensions=new e(o,s),this._hasMipmap=!1,this._sizeInBytes=A,this._preMultiplyAlpha=v,this._flipY=g,this._initialized=y,this._sampler=void 0,this.sampler=a(t.sampler)?t.sampler:new p}return v.fromFramebuffer=function(e){e=r(e,r.EMPTY_OBJECT);var t=e.context,n=t._gl,i=r(e.pixelFormat,u.RGB),o=r(e.framebufferXOffset,0),s=r(e.framebufferYOffset,0),c=r(e.width,n.drawingBufferWidth),l=r(e.height,n.drawingBufferHeight),d=e.framebuffer;return new v({context:t,width:c,height:l,pixelFormat:i,source:{framebuffer:a(d)?d:t.defaultFramebuffer,xOffset:o,yOffset:s,width:c,height:l}})},i(v.prototype,{id:{get:function(){return this._id}},sampler:{get:function(){return this._sampler},set:function(e){
var t=e.minificationFilter,n=e.magnificationFilter,r=t===_.NEAREST_MIPMAP_NEAREST||t===_.NEAREST_MIPMAP_LINEAR||t===_.LINEAR_MIPMAP_NEAREST||t===_.LINEAR_MIPMAP_LINEAR;this._pixelDatatype!==m.FLOAT&&this._pixelDatatype!==m.HALF_FLOAT||(t=r?_.NEAREST_MIPMAP_NEAREST:_.NEAREST,n=h.NEAREST);var i=this._context._gl,o=this._textureTarget;i.activeTexture(i.TEXTURE0),i.bindTexture(o,this._texture),i.texParameteri(o,i.TEXTURE_MIN_FILTER,t),i.texParameteri(o,i.TEXTURE_MAG_FILTER,n),i.texParameteri(o,i.TEXTURE_WRAP_S,e.wrapS),i.texParameteri(o,i.TEXTURE_WRAP_T,e.wrapT),a(this._textureFilterAnisotropic)&&i.texParameteri(o,this._textureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT,e.maximumAnisotropy),i.bindTexture(o,null),this._sampler=e}},pixelFormat:{get:function(){return this._pixelFormat}},pixelDatatype:{get:function(){return this._pixelDatatype}},dimensions:{get:function(){return this._dimensions}},preMultiplyAlpha:{get:function(){return this._preMultiplyAlpha}},flipY:{get:function(){return this._flipY}},width:{get:function(){return this._width}},height:{get:function(){return this._height}},sizeInBytes:{get:function(){return this._hasMipmap?Math.floor(4*this._sizeInBytes/3):this._sizeInBytes}},_target:{get:function(){return this._textureTarget}}}),v.prototype.copyFrom=function(e,t,n){t=r(t,0),n=r(n,0);var i=this._context._gl,o=this._textureTarget;i.activeTexture(i.TEXTURE0),i.bindTexture(o,this._texture);var s=e.width,c=e.height,l=e.arrayBufferView,d=this._width,f=this._height,m=this._pixelFormat,p=this._pixelDatatype,h=this._preMultiplyAlpha,_=this._flipY,v=!1;if(!this._initialized){if(0===t&&0===n&&s===d&&c===f)a(l)?(i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,!1),_&&(l=u.flipY(l,m,p,d,f)),i.texImage2D(o,0,m,d,f,0,m,p,l)):(i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,h),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,_),i.texImage2D(o,0,m,m,p,e)),v=!0;else{i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,!1);var g=u.createTypedArray(m,p,d,f);i.texImage2D(o,0,m,d,f,0,m,p,g)}this._initialized=!0}v||(l?(i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,!1),_&&(l=u.flipY(l,m,p,s,c)),i.texSubImage2D(o,0,t,n,s,c,m,p,l)):(i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,h),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,_),i.texSubImage2D(o,0,t,n,m,p,e))),i.bindTexture(o,null)},v.prototype.copyFromFramebuffer=function(e,t,n,a,i,o){e=r(e,0),t=r(t,0),n=r(n,0),a=r(a,0),i=r(i,this._width),o=r(o,this._height);var s=this._context._gl,c=this._textureTarget;s.activeTexture(s.TEXTURE0),s.bindTexture(c,this._texture),s.copyTexSubImage2D(c,0,e,t,n,a,i,o),s.bindTexture(c,null),this._initialized=!0},v.prototype.generateMipmap=function(e){e=r(e,f.DONT_CARE),this._hasMipmap=!0;var t=this._context._gl,n=this._textureTarget;t.hint(t.GENERATE_MIPMAP_HINT,e),t.activeTexture(t.TEXTURE0),t.bindTexture(n,this._texture),t.generateMipmap(n),t.bindTexture(n,null)},v.prototype.isDestroyed=function(){return!1},v.prototype.destroy=function(){return this._context._gl.deleteTexture(this._texture),o(this)},v}),define("Shaders/Materials/BumpMapMaterial",[],function(){"use strict";return"uniform sampler2D image;\nuniform float strength;\nuniform vec2 repeat;\n\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\n    czm_material material = czm_getDefaultMaterial(materialInput);\n\n    vec2 st = materialInput.st;\n\n    vec2 centerPixel = fract(repeat * st);\n    float centerBump = texture2D(image, centerPixel).channel;\n\n    float imageWidth = float(imageDimensions.x);\n    vec2 rightPixel = fract(repeat * (st + vec2(1.0 / imageWidth, 0.0)));\n    float rightBump = texture2D(image, rightPixel).channel;\n\n    float imageHeight = float(imageDimensions.y);\n    vec2 leftPixel = fract(repeat * (st + vec2(0.0, 1.0 / imageHeight)));\n    float topBump = texture2D(image, leftPixel).channel;\n\n    vec3 normalTangentSpace = normalize(vec3(centerBump - rightBump, centerBump - topBump, clamp(1.0 - strength, 0.1, 1.0)));\n    vec3 normalEC = materialInput.tangentToEyeMatrix * normalTangentSpace;\n\n    material.normal = normalEC;\n    material.diffuse = vec3(0.01);\n\n    return material;\n}\n"}),define("Shaders/Materials/CheckerboardMaterial",[],function(){"use strict";return"uniform vec4 lightColor;\nuniform vec4 darkColor;\nuniform vec2 repeat;\n\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\n    czm_material material = czm_getDefaultMaterial(materialInput);\n\n    vec2 st = materialInput.st;\n\n    // From Stefan Gustavson's Procedural Textures in GLSL in OpenGL Insights\n    float b = mod(floor(repeat.s * st.s) + floor(repeat.t * st.t), 2.0);  // 0.0 or 1.0\n\n    // Find the distance from the closest separator (region between two colors)\n    float scaledWidth = fract(repeat.s * st.s);\n    scaledWidth = abs(scaledWidth - floor(scaledWidth + 0.5));\n    float scaledHeight = fract(repeat.t * st.t);\n    scaledHeight = abs(scaledHeight - floor(scaledHeight + 0.5));\n    float value = min(scaledWidth, scaledHeight);\n\n    vec4 currentColor = mix(lightColor, darkColor, b);\n    vec4 color = czm_antialias(lightColor, darkColor, currentColor, value, 0.03);\n\n    material.diffuse = color.rgb;\n    material.alpha = color.a;\n\n    return material;\n}\n"}),define("Shaders/Materials/DotMaterial",[],function(){"use strict";return"uniform vec4 lightColor;\nuniform vec4 darkColor;\nuniform vec2 repeat;\n\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\n    czm_material material = czm_getDefaultMaterial(materialInput);\n    \n    // From Stefan Gustavson's Procedural Textures in GLSL in OpenGL Insights\n    float b = smoothstep(0.3, 0.32, length(fract(repeat * materialInput.st) - 0.5));  // 0.0 or 1.0\n\n    vec4 color = mix(lightColor, darkColor, b);\n    material.diffuse = color.rgb;\n    material.alpha = color.a;\n    \n    return material;\n}\n"}),define("Shaders/Materials/ElevationContourMaterial",[],function(){"use strict";return"#ifdef GL_OES_standard_derivatives\n    #extension GL_OES_standard_derivatives : enable\n#endif\n\nuniform vec4 color;\nuniform float spacing;\nuniform float width;\n\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\n    czm_material material = czm_getDefaultMaterial(materialInput);\n\n    float distanceToContour = mod(materialInput.height, spacing);\n\n#ifdef GL_OES_standard_derivatives\n    float dxc = abs(dFdx(materialInput.height));\n    float dyc = abs(dFdy(materialInput.height));\n    float dF = max(dxc, dyc) * width;\n    material.alpha = (distanceToContour < dF) ? 1.0 : 0.0;\n#else\n    material.alpha = (distanceToContour < (czm_resolutionScale * width)) ? 1.0 : 0.0;\n#endif\n\n    material.diffuse = color.rgb;\n\n    return material;\n}\n"}),define("Shaders/Materials/ElevationRampMaterial",[],function(){"use strict";return"uniform sampler2D image;\nuniform float minimumHeight;\nuniform float maximumHeight;\n\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\n    czm_material material = czm_getDefaultMaterial(materialInput);\n    float scaledHeight = clamp((materialInput.height - minimumHeight) / (maximumHeight - minimumHeight), 0.0, 1.0);\n    vec4 rampColor = texture2D(image, vec2(scaledHeight, 0.5));\n    material.diffuse = rampColor.rgb;\n    material.alpha = rampColor.a;\n    return material;\n}\n"}),define("Shaders/Materials/FadeMaterial",[],function(){"use strict";return"uniform vec4 fadeInColor;\nuniform vec4 fadeOutColor;\nuniform float maximumDistance;\nuniform bool repeat;\nuniform vec2 fadeDirection;\nuniform vec2 time;\n\nfloat getTime(float t, float coord)\n{\n    float scalar = 1.0 / maximumDistance;\n    float q  = distance(t, coord) * scalar;\n    if (repeat)\n    {\n        float r = distance(t, coord + 1.0) * scalar;\n        float s = distance(t, coord - 1.0) * scalar;\n        q = min(min(r, s), q);\n    }\n    return clamp(q, 0.0, 1.0);\n}\n\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\n    czm_material material = czm_getDefaultMaterial(materialInput);\n    \n    vec2 st = materialInput.st;\n    float s = getTime(time.x, st.s) * fadeDirection.s;\n    float t = getTime(time.y, st.t) * fadeDirection.t;\n    \n    float u = length(vec2(s, t));\n    vec4 color = mix(fadeInColor, fadeOutColor, u);\n    \n    material.emission = color.rgb;\n    material.alpha = color.a;\n    \n    return material;\n}\n"}),define("Shaders/Materials/GridMaterial",[],function(){"use strict";return'#ifdef GL_OES_standard_derivatives\n    #extension GL_OES_standard_derivatives : enable\n#endif\n\nuniform vec4 color;\nuniform float cellAlpha;\nuniform vec2 lineCount;\nuniform vec2 lineThickness;\nuniform vec2 lineOffset;\n\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\n    czm_material material = czm_getDefaultMaterial(materialInput);\n\n    vec2 st = materialInput.st;\n\n    float scaledWidth = fract(lineCount.s * st.s - lineOffset.s);\n    scaledWidth = abs(scaledWidth - floor(scaledWidth + 0.5));\n    float scaledHeight = fract(lineCount.t * st.t - lineOffset.t);\n    scaledHeight = abs(scaledHeight - floor(scaledHeight + 0.5));\n\n    float value;\n#ifdef GL_OES_standard_derivatives\n    // Fuzz Factor - Controls blurriness of lines\n    const float fuzz = 1.2;\n    vec2 thickness = (lineThickness * czm_resolutionScale) - 1.0;\n\n    // From "3D Engine Design for Virtual Globes" by Cozzi and Ring, Listing 4.13.\n    vec2 dx = abs(dFdx(st));\n    vec2 dy = abs(dFdy(st));\n    vec2 dF = vec2(max(dx.s, dy.s), max(dx.t, dy.t)) * lineCount;\n    value = min(\n        smoothstep(dF.s * thickness.s, dF.s * (fuzz + thickness.s), scaledWidth),\n        smoothstep(dF.t * thickness.t, dF.t * (fuzz + thickness.t), scaledHeight));\n#else\n    // Fuzz Factor - Controls blurriness of lines\n    const float fuzz = 0.05;\n\n    vec2 range = 0.5 - (lineThickness * 0.05);\n    value = min(\n        1.0 - smoothstep(range.s, range.s + fuzz, scaledWidth),\n        1.0 - smoothstep(range.t, range.t + fuzz, scaledHeight));\n#endif\n\n    // Edges taken from RimLightingMaterial.glsl\n    // See http://www.fundza.com/rman_shaders/surface/fake_rim/fake_rim1.html\n    float dRim = 1.0 - abs(dot(materialInput.normalEC, normalize(materialInput.positionToEyeEC)));\n    float sRim = smoothstep(0.8, 1.0, dRim);\n    value *= (1.0 - sRim);\n\n    vec3 halfColor = color.rgb * 0.5;\n    material.diffuse = halfColor;\n    material.emission = halfColor;\n    material.alpha = color.a * (1.0 - ((1.0 - cellAlpha) * value));\n\n    return material;\n}\n'}),define("Shaders/Materials/NormalMapMaterial",[],function(){"use strict";return"uniform sampler2D image;\nuniform float strength;\nuniform vec2 repeat;\n\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\n    czm_material material = czm_getDefaultMaterial(materialInput);\n    \n    vec4 textureValue = texture2D(image, fract(repeat * materialInput.st));\n    vec3 normalTangentSpace = textureValue.channels;\n    normalTangentSpace.xy = normalTangentSpace.xy * 2.0 - 1.0;\n    normalTangentSpace.z = clamp(1.0 - strength, 0.1, 1.0);\n    normalTangentSpace = normalize(normalTangentSpace);\n    vec3 normalEC = materialInput.tangentToEyeMatrix * normalTangentSpace;\n    \n    material.normal = normalEC;\n    \n    return material;\n}\n"}),define("Shaders/Materials/PolylineArrowMaterial",[],function(){"use strict";return"#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives : enable\n#endif\n\nuniform vec4 color;\n\nvarying float v_width;\n\nfloat getPointOnLine(vec2 p0, vec2 p1, float x)\n{\n    float slope = (p0.y - p1.y) / (p0.x - p1.x);\n    return slope * (x - p0.x) + p0.y;\n}\n\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\n    czm_material material = czm_getDefaultMaterial(materialInput);\n\n    vec2 st = materialInput.st;\n\n#ifdef GL_OES_standard_derivatives\n    float base = 1.0 - abs(fwidth(st.s)) * 10.0;\n#else\n    float base = 0.99; // 1% of the line will be the arrow head\n#endif\n\n    vec2 center = vec2(1.0, 0.5);\n    float ptOnUpperLine = getPointOnLine(vec2(base, 1.0), center, st.s);\n    float ptOnLowerLine = getPointOnLine(vec2(base, 0.0), center, st.s);\n\n    float halfWidth = 0.15;\n    float s = step(0.5 - halfWidth, st.t);\n    s *= 1.0 - step(0.5 + halfWidth, st.t);\n    s *= 1.0 - step(base, st.s);\n\n    float t = step(base, materialInput.st.s);\n    t *= 1.0 - step(ptOnUpperLine, st.t);\n    t *= step(ptOnLowerLine, st.t);\n\n    // Find the distance from the closest separator (region between two colors)\n    float dist;\n    if (st.s < base)\n    {\n        float d1 = abs(st.t - (0.5 - halfWidth));\n        float d2 = abs(st.t - (0.5 + halfWidth));\n        dist = min(d1, d2);\n    }\n    else\n    {\n        float d1 = czm_infinity;\n        if (st.t < 0.5 - halfWidth && st.t > 0.5 + halfWidth)\n        {\n            d1 = abs(st.s - base);\n        }\n        float d2 = abs(st.t - ptOnUpperLine);\n        float d3 = abs(st.t - ptOnLowerLine);\n        dist = min(min(d1, d2), d3);\n    }\n\n    vec4 outsideColor = vec4(0.0);\n    vec4 currentColor = mix(outsideColor, color, clamp(s + t, 0.0, 1.0));\n    vec4 outColor = czm_antialias(outsideColor, color, currentColor, dist);\n\n    material.diffuse = outColor.rgb;\n    material.alpha = outColor.a;\n    return material;\n}\n"}),define("Shaders/Materials/PolylineDashMaterial",[],function(){"use strict";return"uniform vec4 color;\nuniform vec4 gapColor;\nuniform float dashLength;\nuniform float dashPattern;\nvarying float v_polylineAngle;\n\nconst float maskLength = 16.0;\n\nmat2 rotate(float rad) {\n    float c = cos(rad);\n    float s = sin(rad);\n    return mat2(\n        c, s,\n        -s, c\n    );\n}\n\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\n    czm_material material = czm_getDefaultMaterial(materialInput);\n\n    vec2 pos = rotate(v_polylineAngle) * gl_FragCoord.xy;\n\n    // Get the relative position within the dash from 0 to 1\n    float dashPosition = fract(pos.x / dashLength);\n    // Figure out the mask index.\n    float maskIndex = floor(dashPosition * maskLength);\n    // Test the bit mask.\n    float maskTest = floor(dashPattern / pow(2.0, maskIndex));\n    vec4 fragColor = (mod(maskTest, 2.0) < 1.0) ? gapColor : color;\n    if (fragColor.a < 0.005) {   // matches 0/255 and 1/255\n        discard;\n    }\n\n    material.emission = fragColor.rgb;\n    material.alpha = fragColor.a;\n    return material;\n}"}),define("Shaders/Materials/PolylineGlowMaterial",[],function(){"use strict";return"uniform vec4 color;\nuniform float glowPower;\n\nvarying float v_width;\n\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\n    czm_material material = czm_getDefaultMaterial(materialInput);\n\n    vec2 st = materialInput.st;\n    float glow = glowPower / abs(st.t - 0.5) - (glowPower / 0.5);\n\n    material.emission = max(vec3(glow - 1.0 + color.rgb), color.rgb);\n    material.alpha = clamp(0.0, 1.0, glow) * color.a;\n\n    return material;\n}\n"}),define("Shaders/Materials/PolylineOutlineMaterial",[],function(){"use strict";return"uniform vec4 color;\nuniform vec4 outlineColor;\nuniform float outlineWidth;\n\nvarying float v_width;\n\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\n    czm_material material = czm_getDefaultMaterial(materialInput);\n    \n    vec2 st = materialInput.st;\n    float halfInteriorWidth =  0.5 * (v_width - outlineWidth) / v_width;\n    float b = step(0.5 - halfInteriorWidth, st.t);\n    b *= 1.0 - step(0.5 + halfInteriorWidth, st.t);\n    \n    // Find the distance from the closest separator (region between two colors)\n    float d1 = abs(st.t - (0.5 - halfInteriorWidth));\n    float d2 = abs(st.t - (0.5 + halfInteriorWidth));\n    float dist = min(d1, d2);\n    \n    vec4 currentColor = mix(outlineColor, color, b);\n    vec4 outColor = czm_antialias(outlineColor, color, currentColor, dist);\n    \n    material.diffuse = outColor.rgb;\n    material.alpha = outColor.a;\n    \n    return material;\n}\n"}),define("Shaders/Materials/RimLightingMaterial",[],function(){"use strict";return"uniform vec4 color;\nuniform vec4 rimColor;\nuniform float width;\n\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\n    czm_material material = czm_getDefaultMaterial(materialInput);\n\n    // See http://www.fundza.com/rman_shaders/surface/fake_rim/fake_rim1.html\n    float d = 1.0 - dot(materialInput.normalEC, normalize(materialInput.positionToEyeEC));\n    float s = smoothstep(1.0 - width, 1.0, d);\n\n    material.diffuse = color.rgb;\n    material.emission = rimColor.rgb * s; \n    material.alpha = mix(color.a, rimColor.a, s);\n\n    return material;\n}\n"}),define("Shaders/Materials/SlopeRampMaterial",[],function(){"use strict";return"uniform sampler2D image;\n\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\n    czm_material material = czm_getDefaultMaterial(materialInput);\n    vec4 rampColor = texture2D(image, vec2(materialInput.slope, 0.5));\n    material.diffuse = rampColor.rgb;\n    material.alpha = rampColor.a;\n    return material;\n}\n"}),define("Shaders/Materials/StripeMaterial",[],function(){"use strict";return"uniform vec4 evenColor;\nuniform vec4 oddColor;\nuniform float offset;\nuniform float repeat;\nuniform bool horizontal;\n\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\n    czm_material material = czm_getDefaultMaterial(materialInput);\n\n    // Based on the Stripes Fragment Shader in the Orange Book (11.1.2)\n    float coord = mix(materialInput.st.s, materialInput.st.t, float(horizontal));\n    float value = fract((coord - offset) * (repeat * 0.5));\n    float dist = min(value, min(abs(value - 0.5), 1.0 - value));\n    \n    vec4 currentColor = mix(evenColor, oddColor, step(0.5, value));\n    vec4 color = czm_antialias(evenColor, oddColor, currentColor, dist);\n    \n    material.diffuse = color.rgb;\n    material.alpha = color.a;\n    \n    return material;\n}\n"}),define("Shaders/Materials/Water",[],function(){"use strict";return"// Thanks for the contribution Jonas\n// http://29a.ch/2012/7/19/webgl-terrain-rendering-water-fog\n\nuniform sampler2D specularMap;\nuniform sampler2D normalMap;\nuniform vec4 baseWaterColor;\nuniform vec4 blendColor;\nuniform float frequency;\nuniform float animationSpeed;\nuniform float amplitude;\nuniform float specularIntensity;\nuniform float fadeFactor;\n\nczm_material czm_getMaterial(czm_materialInput materialInput)\n{\n    czm_material material = czm_getDefaultMaterial(materialInput);\n\n    float time = czm_frameNumber * animationSpeed;\n    \n    // fade is a function of the distance from the fragment and the frequency of the waves\n    float fade = max(1.0, (length(materialInput.positionToEyeEC) / 10000000000.0) * frequency * fadeFactor);\n            \n    float specularMapValue = texture2D(specularMap, materialInput.st).r;\n    \n    // note: not using directional motion at this time, just set the angle to 0.0;\n    vec4 noise = czm_getWaterNoise(normalMap, materialInput.st * frequency, time, 0.0);\n    vec3 normalTangentSpace = noise.xyz * vec3(1.0, 1.0, (1.0 / amplitude));\n    \n    // fade out the normal perturbation as we move further from the water surface\n    normalTangentSpace.xy /= fade;\n        \n    // attempt to fade out the normal perturbation as we approach non water areas (low specular map value)\n    normalTangentSpace = mix(vec3(0.0, 0.0, 50.0), normalTangentSpace, specularMapValue);\n    \n    normalTangentSpace = normalize(normalTangentSpace);\n    \n    // get ratios for alignment of the new normal vector with a vector perpendicular to the tangent plane\n    float tsPerturbationRatio = clamp(dot(normalTangentSpace, vec3(0.0, 0.0, 1.0)), 0.0, 1.0);\n    \n    // fade out water effect as specular map value decreases\n    material.alpha = specularMapValue;\n    \n    // base color is a blend of the water and non-water color based on the value from the specular map\n    // may need a uniform blend factor to better control this\n    material.diffuse = mix(blendColor.rgb, baseWaterColor.rgb, specularMapValue);\n    \n    // diffuse highlights are based on how perturbed the normal is\n    material.diffuse += (0.1 * tsPerturbationRatio);\n    \n    material.normal = normalize(materialInput.tangentToEyeMatrix * normalTangentSpace);\n    \n    material.specular = specularIntensity;\n    material.shininess = 10.0;\n    \n    return material;\n}\n"}),define("Scene/Material",["../Core/Cartesian2","../Core/clone","../Core/Color","../Core/combine","../Core/createGuid","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/isArray","../Core/loadCRN","../Core/loadKTX","../Core/Matrix2","../Core/Matrix3","../Core/Matrix4","../Core/Resource","../Renderer/CubeMap","../Renderer/Texture","../Shaders/Materials/BumpMapMaterial","../Shaders/Materials/CheckerboardMaterial","../Shaders/Materials/DotMaterial","../Shaders/Materials/ElevationContourMaterial","../Shaders/Materials/ElevationRampMaterial","../Shaders/Materials/FadeMaterial","../Shaders/Materials/GridMaterial","../Shaders/Materials/NormalMapMaterial","../Shaders/Materials/PolylineArrowMaterial","../Shaders/Materials/PolylineDashMaterial","../Shaders/Materials/PolylineGlowMaterial","../Shaders/Materials/PolylineOutlineMaterial","../Shaders/Materials/RimLightingMaterial","../Shaders/Materials/SlopeRampMaterial","../Shaders/Materials/StripeMaterial","../Shaders/Materials/Water","../ThirdParty/when"],function(e,t,n,r,a,i,o,s,c,u,l,d,f,m,p,h,_,v,g,y,E,T,C,S,A,x,w,b,R,I,z,D,O,P,M,N){"use strict";function F(e){this.type=void 0,this.shaderSource=void 0,this.materials=void 0,this.uniforms=void 0,this._uniforms=void 0,this.translucent=void 0,this._strict=void 0,this._template=void 0,this._count=void 0,this._texturePaths={},this._loadedImages=[],this._loadedCubeMaps=[],this._textures={},this._updateFunctions=[],this._defaultTexture=void 0,L(e,this),s(this,{type:{value:this.type,writable:!1}}),o(F._uniformList[this.type])||(F._uniformList[this.type]=Object.keys(this._uniforms))}function L(e,n){e=i(e,i.EMPTY_OBJECT),n._strict=i(e.strict,!1),n._count=i(e.count,0),n._template=t(i(e.fabric,i.EMPTY_OBJECT)),n._template.uniforms=t(i(n._template.uniforms,i.EMPTY_OBJECT)),n._template.materials=t(i(n._template.materials,i.EMPTY_OBJECT)),n.type=o(n._template.type)?n._template.type:a(),n.shaderSource="",n.materials={},n.uniforms={},n._uniforms={},n._translucentFunctions=[];var s,c=F._materialCache.getMaterial(n.type);if(o(c)){var u=t(c.fabric,!0);n._template=r(n._template,u,!0),s=c.translucent}V(n),o(c)||F._materialCache.addMaterial(n.type,n),k(n),W(n),j(n);var l=0===n._translucentFunctions.length||void 0;if(s=i(s,l),s=i(e.translucent,s),o(s))if("function"==typeof s){var d=function(){return s(n)};n._translucentFunctions.push(d)}else n._translucentFunctions.push(s)}function B(e,t,n,r){if(o(e))for(var a in e)if(e.hasOwnProperty(a)){var i=-1!==t.indexOf(a);(r&&!i||!r&&i)&&n(a,t)}}function U(e,t){}function G(e,t){}function V(e){var t=e._template,n=t.uniforms,r=t.materials,a=t.components;B(t,J,U,!0),B(a,Q,U,!0);var i=[];for(var o in r)r.hasOwnProperty(o)&&i.push(o);B(n,i,G,!1)}function k(e){var t=e._template.components,n=e._template.source;if(o(n))e.shaderSource+=n+"\n";else{if(e.shaderSource+="czm_material czm_getMaterial(czm_materialInput materialInput)\n{\n",e.shaderSource+="czm_material material = czm_getDefaultMaterial(materialInput);\n",o(t))for(var r in t)t.hasOwnProperty(r)&&(e.shaderSource+="material."+r+" = "+t[r]+";\n");e.shaderSource+="return material;\n}\n"}}function q(e){var t;return function(n,r){var a=n.uniforms,i=a[e],s=t!==i;t=i;var c,u,l=n._textures[e];if(i instanceof HTMLVideoElement)if(i.readyState>=2){if(s&&o(l)&&(l!==r.defaultTexture&&l.destroy(),l=void 0),!o(l)||l===r.defaultTexture)return l=new g({context:r,source:i}),void(n._textures[e]=l);l.copyFrom(i)}else o(l)||(n._textures[e]=r.defaultTexture);else{if(i instanceof g&&i!==l){n._texturePaths[e]=void 0;var m=n._textures[e];return m!==n._defaultTexture&&m.destroy(),n._textures[e]=i,c=e+"Dimensions",void(a.hasOwnProperty(c)&&(u=a[c],u.x=i._width,u.y=i._height))}if(o(l)||(n._texturePaths[e]=void 0,o(n._defaultTexture)||(n._defaultTexture=r.defaultTexture),l=n._textures[e]=n._defaultTexture,c=e+"Dimensions",a.hasOwnProperty(c)&&(u=a[c],u.x=l._width,u.y=l._height)),i!==F.DefaultImageId){var p=i instanceof _;if(!o(n._texturePaths[e])||p&&i.url!==n._texturePaths[e].url||!p&&i!==n._texturePaths[e]){if("string"==typeof i||p){var h,v=p?i:_.createIfNeeded(i);h=ee.test(i)?f(v):te.test(i)?d(v):v.fetchImage(),N(h,function(t){n._loadedImages.push({id:e,image:t})})}else(i instanceof HTMLCanvasElement||i instanceof HTMLImageElement)&&n._loadedImages.push({id:e,image:i});n._texturePaths[e]=i}}}}}function H(e){return function(t,n){var r=t.uniforms[e];if(r instanceof v){var a=t._textures[e];return a!==t._defaultTexture&&a.destroy(),t._texturePaths[e]=void 0,void(t._textures[e]=r)}if(o(t._textures[e])||(t._texturePaths[e]=void 0,t._textures[e]=n.defaultCubeMap),r!==F.DefaultCubeMapId){var i=r.positiveX+r.negativeX+r.positiveY+r.negativeY+r.positiveZ+r.negativeZ;if(i!==t._texturePaths[e]){var s=[_.createIfNeeded(r.positiveX).fetchImage(),_.createIfNeeded(r.negativeX).fetchImage(),_.createIfNeeded(r.positiveY).fetchImage(),_.createIfNeeded(r.negativeY).fetchImage(),_.createIfNeeded(r.positiveZ).fetchImage(),_.createIfNeeded(r.negativeZ).fetchImage()];N.all(s).then(function(n){t._loadedCubeMaps.push({id:e,images:n})}),t._texturePaths[e]=i}}}}function W(e){var t=e._template.uniforms;for(var n in t)t.hasOwnProperty(n)&&Y(e,n)}function Y(e,t){var n=(e._strict,e._template.uniforms),r=n[t],a=X(r);if("channels"===a)Z(e,t,r,!1);else{if("sampler2D"===a){var i=t+"Dimensions";K(e,i)>0&&(n[i]={type:"ivec3",x:1,y:1},Y(e,i))}if(!new RegExp("uniform\\s+"+a+"\\s+"+t+"\\s*;").test(e.shaderSource)){var o="uniform "+a+" "+t+";";e.shaderSource=o+e.shaderSource}var s=t+"_"+e._count++;if(Z(e,t,s),e.uniforms[t]=r,"sampler2D"===a)e._uniforms[s]=function(){return e._textures[t]},e._updateFunctions.push(q(t));else if("samplerCube"===a)e._uniforms[s]=function(){return e._textures[t]},e._updateFunctions.push(H(t));else if(-1!==a.indexOf("mat")){var c=new $[a];e._uniforms[s]=function(){return $[a].fromColumnMajorArray(e.uniforms[t],c)}}else e._uniforms[s]=function(){return e.uniforms[t]}}}function X(e){var t=e.type;if(!o(t)){var n=typeof e;if("number"===n)t="float";else if("boolean"===n)t="bool";else if("string"===n||e instanceof _||e instanceof HTMLCanvasElement||e instanceof HTMLImageElement)t=/^([rgba]){1,4}$/i.test(e)?"channels":e===F.DefaultCubeMapId?"samplerCube":"sampler2D";else if("object"===n)if(l(e))4!==e.length&&9!==e.length&&16!==e.length||(t="mat"+Math.sqrt(e.length));else{var r=0;for(var a in e)e.hasOwnProperty(a)&&(r+=1);r>=2&&r<=4?t="vec"+r:6===r&&(t="samplerCube")}}return t}function j(e){var t=e._strict,n=e._template.materials;for(var a in n)if(n.hasOwnProperty(a)){var i=new F({strict:t,fabric:n[a],count:e._count});e._count=i._count,e._uniforms=r(e._uniforms,i._uniforms,!0),e.materials[a]=i,e._translucentFunctions=e._translucentFunctions.concat(i._translucentFunctions);var o="czm_getMaterial_"+e._count++;Z(i,"czm_getMaterial",o),e.shaderSource=i.shaderSource+e.shaderSource;var s=o+"(materialInput)";Z(e,a,s)}}function Z(e,t,n,r){r=i(r,!0);var a=0,o="([\\w"+(r?".":"")+"])?",s=new RegExp(o+t+"([\\w])?","g");return e.shaderSource=e.shaderSource.replace(s,function(e,t,r){return t||r?e:(a+=1,n)}),a}function K(e,t,n){return Z(e,t,t,n)}F._uniformList={},F.fromType=function(e,t){var n=new F({fabric:{type:e}});if(o(t))for(var r in t)t.hasOwnProperty(r)&&(n.uniforms[r]=t[r]);return n},F.prototype.isTranslucent=function(){if(o(this.translucent))return"function"==typeof this.translucent?this.translucent():this.translucent;for(var e=!0,t=this._translucentFunctions,n=t.length,r=0;r<n;++r){var a=t[r];if(!(e="function"==typeof a?e&&a():e&&a))break}return e},F.prototype.update=function(e){var t,n,r=this._loadedImages,a=r.length;for(t=0;t<a;++t){var i=r[t];n=i.id;var s,c=i.image;s=new g(o(c.internalFormat)?{context:e,pixelFormat:c.internalFormat,width:c.width,height:c.height,source:{arrayBufferView:c.bufferView}}:{context:e,source:c}),this._textures[n]=s;var u=n+"Dimensions";if(this.uniforms.hasOwnProperty(u)){var l=this.uniforms[u];l.x=s._width,l.y=s._height}}r.length=0;var d=this._loadedCubeMaps;for(a=d.length,t=0;t<a;++t){var f=d[t];n=f.id;var m=f.images,p=new v({context:e,source:{positiveX:m[0],negativeX:m[1],positiveY:m[2],negativeY:m[3],positiveZ:m[4],negativeZ:m[5]}});this._textures[n]=p}d.length=0;var h=this._updateFunctions;for(a=h.length,t=0;t<a;++t)h[t](this,e);var _=this.materials;for(var y in _)_.hasOwnProperty(y)&&_[y].update(e)},F.prototype.isDestroyed=function(){return!1},F.prototype.destroy=function(){var e=this._textures;for(var t in e)if(e.hasOwnProperty(t)){var n=e[t];n!==this._defaultTexture&&n.destroy()}var r=this.materials;for(var a in r)r.hasOwnProperty(a)&&r[a].destroy();return c(this)};var J=["type","materials","uniforms","components","source"],Q=["diffuse","specular","shininess","normal","emission","alpha"],$={mat2:m,mat3:p,mat4:h},ee=/\.ktx$/i,te=/\.crn$/i;return F._materialCache={_materials:{},addMaterial:function(e,t){this._materials[e]=t},getMaterial:function(e){return this._materials[e]}},F.DefaultImageId="czm_defaultImage",F.DefaultCubeMapId="czm_defaultCubeMap",F.ColorType="Color",F._materialCache.addMaterial(F.ColorType,{fabric:{type:F.ColorType,uniforms:{color:new n(1,0,0,.5)},components:{diffuse:"color.rgb",alpha:"color.a"}},translucent:function(e){return e.uniforms.color.alpha<1}}),F.ImageType="Image",F._materialCache.addMaterial(F.ImageType,{fabric:{type:F.ImageType,uniforms:{image:F.DefaultImageId,repeat:new e(1,1),color:new n(1,1,1,1)},components:{diffuse:"texture2D(image, fract(repeat * materialInput.st)).rgb * color.rgb",alpha:"texture2D(image, fract(repeat * materialInput.st)).a * color.a"}},translucent:function(e){return e.uniforms.color.alpha<1}}),F.DiffuseMapType="DiffuseMap",F._materialCache.addMaterial(F.DiffuseMapType,{fabric:{type:F.DiffuseMapType,uniforms:{image:F.DefaultImageId,channels:"rgb",repeat:new e(1,1)},components:{diffuse:"texture2D(image, fract(repeat * materialInput.st)).channels"}},translucent:!1}),F.AlphaMapType="AlphaMap",F._materialCache.addMaterial(F.AlphaMapType,{fabric:{type:F.AlphaMapType,uniforms:{image:F.DefaultImageId,channel:"a",repeat:new e(1,1)},components:{alpha:"texture2D(image, fract(repeat * materialInput.st)).channel"}},translucent:!0}),F.SpecularMapType="SpecularMap",F._materialCache.addMaterial(F.SpecularMapType,{fabric:{type:F.SpecularMapType,uniforms:{image:F.DefaultImageId,channel:"r",repeat:new e(1,1)},components:{specular:"texture2D(image, fract(repeat * materialInput.st)).channel"}},translucent:!1}),F.EmissionMapType="EmissionMap",F._materialCache.addMaterial(F.EmissionMapType,{fabric:{type:F.EmissionMapType,uniforms:{image:F.DefaultImageId,channels:"rgb",repeat:new e(1,1)},components:{emission:"texture2D(image, fract(repeat * materialInput.st)).channels"}},translucent:!1}),F.BumpMapType="BumpMap",F._materialCache.addMaterial(F.BumpMapType,{fabric:{type:F.BumpMapType,uniforms:{image:F.DefaultImageId,channel:"r",strength:.8,repeat:new e(1,1)},source:y},translucent:!1}),F.NormalMapType="NormalMap",F._materialCache.addMaterial(F.NormalMapType,{fabric:{type:F.NormalMapType,uniforms:{image:F.DefaultImageId,channels:"rgb",strength:.8,repeat:new e(1,1)},source:w},translucent:!1}),F.GridType="Grid",F._materialCache.addMaterial(F.GridType,{fabric:{type:F.GridType,uniforms:{color:new n(0,1,0,1),cellAlpha:.1,lineCount:new e(8,8),lineThickness:new e(1,1),lineOffset:new e(0,0)},source:x},translucent:function(e){var t=e.uniforms;return t.color.alpha<1||t.cellAlpha<1}
}),F.StripeType="Stripe",F._materialCache.addMaterial(F.StripeType,{fabric:{type:F.StripeType,uniforms:{horizontal:!0,evenColor:new n(1,1,1,.5),oddColor:new n(0,0,1,.5),offset:0,repeat:5},source:P},translucent:function(e){var t=e.uniforms;return t.evenColor.alpha<1||t.oddColor.alpha<1}}),F.CheckerboardType="Checkerboard",F._materialCache.addMaterial(F.CheckerboardType,{fabric:{type:F.CheckerboardType,uniforms:{lightColor:new n(1,1,1,.5),darkColor:new n(0,0,0,.5),repeat:new e(5,5)},source:E},translucent:function(e){var t=e.uniforms;return t.lightColor.alpha<1||t.darkColor.alpha<1}}),F.DotType="Dot",F._materialCache.addMaterial(F.DotType,{fabric:{type:F.DotType,uniforms:{lightColor:new n(1,1,0,.75),darkColor:new n(0,1,1,.75),repeat:new e(5,5)},source:T},translucent:function(e){var t=e.uniforms;return t.lightColor.alpha<1||t.darkColor.alpha<1}}),F.WaterType="Water",F._materialCache.addMaterial(F.WaterType,{fabric:{type:F.WaterType,uniforms:{baseWaterColor:new n(.2,.3,.6,1),blendColor:new n(0,1,.699,1),specularMap:F.DefaultImageId,normalMap:F.DefaultImageId,frequency:10,animationSpeed:.01,amplitude:1,specularIntensity:.5,fadeFactor:1},source:M},translucent:function(e){var t=e.uniforms;return t.baseWaterColor.alpha<1||t.blendColor.alpha<1}}),F.RimLightingType="RimLighting",F._materialCache.addMaterial(F.RimLightingType,{fabric:{type:F.RimLightingType,uniforms:{color:new n(1,0,0,.7),rimColor:new n(1,1,1,.4),width:.3},source:D},translucent:function(e){var t=e.uniforms;return t.color.alpha<1||t.rimColor.alpha<1}}),F.FadeType="Fade",F._materialCache.addMaterial(F.FadeType,{fabric:{type:F.FadeType,uniforms:{fadeInColor:new n(1,0,0,1),fadeOutColor:new n(0,0,0,0),maximumDistance:.5,repeat:!0,fadeDirection:{x:!0,y:!0},time:new e(.5,.5)},source:A},translucent:function(e){var t=e.uniforms;return t.fadeInColor.alpha<1||t.fadeOutColor.alpha<1}}),F.PolylineArrowType="PolylineArrow",F._materialCache.addMaterial(F.PolylineArrowType,{fabric:{type:F.PolylineArrowType,uniforms:{color:new n(1,1,1,1)},source:b},translucent:!0}),F.PolylineDashType="PolylineDash",F._materialCache.addMaterial(F.PolylineDashType,{fabric:{type:F.PolylineDashType,uniforms:{color:new n(1,0,1,1),gapColor:new n(0,0,0,0),dashLength:16,dashPattern:255},source:R},translucent:!0}),F.PolylineGlowType="PolylineGlow",F._materialCache.addMaterial(F.PolylineGlowType,{fabric:{type:F.PolylineGlowType,uniforms:{color:new n(0,.5,1,1),glowPower:.25},source:I},translucent:!0}),F.PolylineOutlineType="PolylineOutline",F._materialCache.addMaterial(F.PolylineOutlineType,{fabric:{type:F.PolylineOutlineType,uniforms:{color:new n(1,1,1,1),outlineColor:new n(1,0,0,1),outlineWidth:1},source:z},translucent:function(e){var t=e.uniforms;return t.color.alpha<1||t.outlineColor.alpha<1}}),F.ElevationContourType="ElevationContour",F._materialCache.addMaterial(F.ElevationContourType,{fabric:{type:F.ElevationContourType,uniforms:{spacing:100,color:new n(1,0,0,1),width:1},source:C},translucent:!1}),F.ElevationRampType="ElevationRamp",F._materialCache.addMaterial(F.ElevationRampType,{fabric:{type:F.ElevationRampType,uniforms:{image:F.DefaultImageId,minimumHeight:0,maximumHeight:1e4},source:S},translucent:!1}),F.SlopeRampMaterialType="SlopeRamp",F._materialCache.addMaterial(F.SlopeRampMaterialType,{fabric:{type:F.SlopeRampMaterialType,uniforms:{image:F.DefaultImageId},source:O},translucent:!1}),F}),define("Scene/PolylineMaterialAppearance",["../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/VertexFormat","../Shaders/Appearances/PolylineMaterialAppearanceVS","../Shaders/PolylineCommon","../Shaders/PolylineFS","./Appearance","./Material"],function(e,t,n,r,a,i,o,s,c){"use strict";function u(n){n=e(n,e.EMPTY_OBJECT);var r=e(n.translucent,!0),a=u.VERTEX_FORMAT;this.material=t(n.material)?n.material:c.fromType(c.ColorType),this.translucent=r,this._vertexShaderSource=e(n.vertexShaderSource,l),this._fragmentShaderSource=e(n.fragmentShaderSource,d),this._renderState=s.getDefaultRenderState(r,!1,n.renderState),this._closed=!1,this._vertexFormat=a}var l=i+"\n"+a,d=o;return n(u.prototype,{vertexShaderSource:{get:function(){var e=this._vertexShaderSource;return-1!==this.material.shaderSource.search(/varying\s+float\s+v_polylineAngle;/g)&&(e="#define POLYLINE_DASH\n"+e),e}},fragmentShaderSource:{get:function(){return this._fragmentShaderSource}},renderState:{get:function(){return this._renderState}},closed:{get:function(){return this._closed}},vertexFormat:{get:function(){return this._vertexFormat}}}),u.VERTEX_FORMAT=r.POSITION_AND_ST,u.prototype.getFragmentShaderSource=s.prototype.getFragmentShaderSource,u.prototype.isTranslucent=s.prototype.isTranslucent,u.prototype.getRenderState=s.prototype.getRenderState,u}),define("Core/GeometryAttributes",["./defaultValue"],function(e){"use strict";function t(t){t=e(t,e.EMPTY_OBJECT),this.position=t.position,this.normal=t.normal,this.st=t.st,this.bitangent=t.bitangent,this.tangent=t.tangent,this.color=t.color}return t}),define("Core/subdivideArray",["./defined","./DeveloperError"],function(e,t){"use strict";function n(e,t){for(var n=[],r=e.length,a=0;a<r;){var i=Math.ceil((r-a)/t--);n.push(e.slice(a,a+i)),a+=i}return n}return n}),define("Renderer/BufferUsage",["../Core/freezeObject","../Core/WebGLConstants"],function(e,t){"use strict";var n={STREAM_DRAW:t.STREAM_DRAW,STATIC_DRAW:t.STATIC_DRAW,DYNAMIC_DRAW:t.DYNAMIC_DRAW,validate:function(e){return e===n.STREAM_DRAW||e===n.STATIC_DRAW||e===n.DYNAMIC_DRAW}};return e(n)}),define("Core/IndexDatatype",["./defined","./DeveloperError","./freezeObject","./Math","./WebGLConstants"],function(e,t,n,r,a){"use strict";var i={UNSIGNED_BYTE:a.UNSIGNED_BYTE,UNSIGNED_SHORT:a.UNSIGNED_SHORT,UNSIGNED_INT:a.UNSIGNED_INT};return i.getSizeInBytes=function(e){switch(e){case i.UNSIGNED_BYTE:return Uint8Array.BYTES_PER_ELEMENT;case i.UNSIGNED_SHORT:return Uint16Array.BYTES_PER_ELEMENT;case i.UNSIGNED_INT:return Uint32Array.BYTES_PER_ELEMENT}},i.validate=function(t){return e(t)&&(t===i.UNSIGNED_BYTE||t===i.UNSIGNED_SHORT||t===i.UNSIGNED_INT)},i.createTypedArray=function(e,t){return e>=r.SIXTY_FOUR_KILOBYTES?new Uint32Array(t):new Uint16Array(t)},i.createTypedArrayFromArrayBuffer=function(e,t,n,a){return e>=r.SIXTY_FOUR_KILOBYTES?new Uint32Array(t,n,a):new Uint16Array(t,n,a)},n(i)}),define("Renderer/Buffer",["../Core/Check","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/IndexDatatype","../Core/WebGLConstants","./BufferUsage"],function(e,t,n,r,a,i,o,s,c){"use strict";function u(e){e=t(e,t.EMPTY_OBJECT);var r=e.context._gl,a=e.bufferTarget,i=e.typedArray,o=e.sizeInBytes,s=e.usage,c=n(i);c&&(o=i.byteLength);var u=r.createBuffer();r.bindBuffer(a,u),r.bufferData(a,c?i:o,s),r.bindBuffer(a,null),this._gl=r,this._webgl2=e.context._webgl2,this._bufferTarget=a,this._sizeInBytes=o,this._usage=s,this._buffer=u,this.vertexArrayDestroyable=!0}return u.createVertexBuffer=function(e){return new u({context:e.context,bufferTarget:s.ARRAY_BUFFER,typedArray:e.typedArray,sizeInBytes:e.sizeInBytes,usage:e.usage})},u.createIndexBuffer=function(e){var t=e.context,n=e.indexDatatype,a=o.getSizeInBytes(n),i=new u({context:t,bufferTarget:s.ELEMENT_ARRAY_BUFFER,typedArray:e.typedArray,sizeInBytes:e.sizeInBytes,usage:e.usage}),c=i.sizeInBytes/a;return r(i,{indexDatatype:{get:function(){return n}},bytesPerIndex:{get:function(){return a}},numberOfIndices:{get:function(){return c}}}),i},r(u.prototype,{sizeInBytes:{get:function(){return this._sizeInBytes}},usage:{get:function(){return this._usage}}}),u.prototype._getBuffer=function(){return this._buffer},u.prototype.copyFromArrayView=function(e,n){n=t(n,0);var r=this._gl,a=this._bufferTarget;r.bindBuffer(a,this._buffer),r.bufferSubData(a,n,e),r.bindBuffer(a,null)},u.prototype.copyFromBuffer=function(e,t,n,r){var a=s.COPY_READ_BUFFER,i=s.COPY_WRITE_BUFFER,o=this._gl;o.bindBuffer(i,this._buffer),o.bindBuffer(a,e._buffer),o.copyBufferSubData(a,i,t,n,r),o.bindBuffer(i,null),o.bindBuffer(a,null)},u.prototype.getBufferData=function(e,n,r,a){n=t(n,0),r=t(r,0);var i=this._gl,o=s.COPY_READ_BUFFER;i.bindBuffer(o,this._buffer),i.getBufferSubData(o,n,e,r,a),i.bindBuffer(o,null)},u.prototype.isDestroyed=function(){return!1},u.prototype.destroy=function(){return this._gl.deleteBuffer(this._buffer),a(this)},u}),define("Renderer/VertexArray",["../Core/Check","../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/Geometry","../Core/IndexDatatype","../Core/Math","../Core/RuntimeError","./Buffer","./BufferUsage","./ContextLimits"],function(e,t,n,r,a,i,o,s,c,u,l,d,f,m){"use strict";function p(e,a,i,o){var s=r(a.vertexBuffer),c=r(a.value),u=a.value?a.value.length:a.componentsPerAttribute,l={index:n(a.index,i),enabled:n(a.enabled,!0),vertexBuffer:a.vertexBuffer,value:c?a.value.slice(0):void 0,componentsPerAttribute:u,componentDatatype:n(a.componentDatatype,t.FLOAT),normalize:n(a.normalize,!1),offsetInBytes:n(a.offsetInBytes,0),strideInBytes:n(a.strideInBytes,0),instanceDivisor:n(a.instanceDivisor,0)};if(s)l.vertexAttrib=function(e){var t=this.index;e.bindBuffer(e.ARRAY_BUFFER,this.vertexBuffer._getBuffer()),e.vertexAttribPointer(t,this.componentsPerAttribute,this.componentDatatype,this.normalize,this.strideInBytes,this.offsetInBytes),e.enableVertexAttribArray(t),this.instanceDivisor>0&&(o.glVertexAttribDivisor(t,this.instanceDivisor),o._vertexAttribDivisors[t]=this.instanceDivisor,o._previousDrawInstanced=!0)},l.disableVertexAttribArray=function(e){e.disableVertexAttribArray(this.index),this.instanceDivisor>0&&o.glVertexAttribDivisor(i,0)};else{switch(l.componentsPerAttribute){case 1:l.vertexAttrib=function(e){e.vertexAttrib1fv(this.index,this.value)};break;case 2:l.vertexAttrib=function(e){e.vertexAttrib2fv(this.index,this.value)};break;case 3:l.vertexAttrib=function(e){e.vertexAttrib3fv(this.index,this.value)};break;case 4:l.vertexAttrib=function(e){e.vertexAttrib4fv(this.index,this.value)}}l.disableVertexAttribArray=function(e){}}e.push(l)}function h(e,t,n){for(var a=0;a<t.length;++a){var i=t[a];i.enabled&&i.vertexAttrib(e)}r(n)&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n._getBuffer())}function _(e){e=n(e,n.EMPTY_OBJECT);var a,i=e.context,o=i._gl,s=e.attributes,c=e.indexBuffer,u=[],l=1,d=!1,f=!1,m=s.length;for(a=0;a<m;++a)p(u,s[a],a,i);for(m=u.length,a=0;a<m;++a){var _=u[a];if(r(_.vertexBuffer)&&0===_.instanceDivisor){var v=_.strideInBytes||_.componentsPerAttribute*t.getSizeInBytes(_.componentDatatype);l=_.vertexBuffer.sizeInBytes/v;break}}for(a=0;a<m;++a)u[a].instanceDivisor>0&&(d=!0),r(u[a].value)&&(f=!0);var g;i.vertexArrayObject&&(g=i.glCreateVertexArray(),i.glBindVertexArray(g),h(o,u,c),i.glBindVertexArray(null)),this._numberOfVertices=l,this._hasInstancedAttributes=d,this._hasConstantAttributes=f,this._context=i,this._gl=o,this._vao=g,this._attributes=u,this._indexBuffer=c}function v(e){return e.values.length/e.componentsPerAttribute}function g(e){return t.getSizeInBytes(e.componentDatatype)*e.componentsPerAttribute}function y(e){var n,a,i,o=[];for(a in e)e.hasOwnProperty(a)&&r(e[a])&&r(e[a].values)&&(o.push(a),e[a].componentDatatype===t.DOUBLE&&(e[a].componentDatatype=t.FLOAT,e[a].values=t.createTypedArray(t.FLOAT,e[a].values)));var s,c=o.length;if(c>0)for(s=v(e[o[0]]),n=1;n<c;++n){var u=v(e[o[n]]);if(u!==s)throw new l("Each attribute list must have the same number of vertices.  Attribute "+o[n]+" has a different number of vertices ("+u.toString()+") than attribute "+o[0]+" ("+s.toString()+").")}o.sort(function(n,r){return t.getSizeInBytes(e[r].componentDatatype)-t.getSizeInBytes(e[n].componentDatatype)});var d=0,f={};for(n=0;n<c;++n)a=o[n],i=e[a],f[a]=d,d+=g(i);if(d>0){var m=t.getSizeInBytes(e[o[0]].componentDatatype),p=d%m;0!==p&&(d+=m-p);var h=s*d,_=new ArrayBuffer(h),y={};for(n=0;n<c;++n){a=o[n];var E=t.getSizeInBytes(e[a].componentDatatype);y[a]={pointer:t.createTypedArray(e[a].componentDatatype,_),index:f[a]/E,strideInComponentType:d/E}}for(n=0;n<s;++n)for(var T=0;T<c;++T){a=o[T],i=e[a];for(var C=i.values,S=y[a],A=S.pointer,x=i.componentsPerAttribute,w=0;w<x;++w)A[S.index+w]=C[n*x+w];S.index+=S.strideInComponentType}return{buffer:_,offsetsInBytes:f,vertexSizeInBytes:d}}}function E(e){var t=e._context,n=e._hasInstancedAttributes;if(n||t._previousDrawInstanced){t._previousDrawInstanced=n;var r,a=t._vertexAttribDivisors,i=e._attributes,o=m.maximumVertexAttributes;if(n){var s=i.length;for(r=0;r<s;++r){var c=i[r];if(c.enabled){var u=c.instanceDivisor,l=c.index;u!==a[l]&&(t.glVertexAttribDivisor(l,u),a[l]=u)}}}else for(r=0;r<o;++r)a[r]>0&&(t.glVertexAttribDivisor(r,0),a[r]=0)}}function T(e,t){for(var n=e._attributes,a=n.length,i=0;i<a;++i){var o=n[i];o.enabled&&r(o.value)&&o.vertexAttrib(t)}}return _.fromGeometry=function(e){e=n(e,n.EMPTY_OBJECT);var a,i,o,l=e.context,m=n(e.geometry,n.EMPTY_OBJECT),p=n(e.bufferUsage,f.DYNAMIC_DRAW),h=n(e.attributeLocations,n.EMPTY_OBJECT),v=n(e.interleave,!1),g=e.vertexArrayAttributes,E=r(g)?g:[],T=m.attributes;if(v){var C=y(T);if(r(C)){o=d.createVertexBuffer({context:l,typedArray:C.buffer,usage:p});var S=C.offsetsInBytes,A=C.vertexSizeInBytes;for(a in T)T.hasOwnProperty(a)&&r(T[a])&&(i=T[a],r(i.values)?E.push({index:h[a],vertexBuffer:o,componentDatatype:i.componentDatatype,componentsPerAttribute:i.componentsPerAttribute,normalize:i.normalize,offsetInBytes:S[a],strideInBytes:A}):E.push({index:h[a],value:i.value,componentDatatype:i.componentDatatype,normalize:i.normalize}))}}else for(a in T)if(T.hasOwnProperty(a)&&r(T[a])){i=T[a];var x=i.componentDatatype;x===t.DOUBLE&&(x=t.FLOAT),o=void 0,r(i.values)&&(o=d.createVertexBuffer({context:l,typedArray:t.createTypedArray(x,i.values),usage:p})),E.push({index:h[a],vertexBuffer:o,value:i.value,componentDatatype:x,componentsPerAttribute:i.componentsPerAttribute,normalize:i.normalize})}var w,b=m.indices;return r(b)&&(w=s.computeNumberOfVertices(m)>=u.SIXTY_FOUR_KILOBYTES&&l.elementIndexUint?d.createIndexBuffer({context:l,typedArray:new Uint32Array(b),usage:p,indexDatatype:c.UNSIGNED_INT}):d.createIndexBuffer({context:l,typedArray:new Uint16Array(b),usage:p,indexDatatype:c.UNSIGNED_SHORT})),new _({context:l,attributes:E,indexBuffer:w})},a(_.prototype,{numberOfAttributes:{get:function(){return this._attributes.length}},numberOfVertices:{get:function(){return this._numberOfVertices}},indexBuffer:{get:function(){return this._indexBuffer}}}),_.prototype.getAttribute=function(e){return this._attributes[e]},_.prototype._bind=function(){r(this._vao)?(this._context.glBindVertexArray(this._vao),this._context.instancedArrays&&E(this),this._hasConstantAttributes&&T(this,this._gl)):h(this._gl,this._attributes,this._indexBuffer)},_.prototype._unBind=function(){if(r(this._vao))this._context.glBindVertexArray(null);else{for(var e=this._attributes,t=this._gl,n=0;n<e.length;++n){var a=e[n];a.enabled&&a.disableVertexAttribArray(t)}this._indexBuffer&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)}},_.prototype.isDestroyed=function(){return!1},_.prototype.destroy=function(){for(var e=this._attributes,t=0;t<e.length;++t){var n=e[t].vertexBuffer;r(n)&&!n.isDestroyed()&&n.vertexArrayDestroyable&&n.destroy()}var a=this._indexBuffer;return r(a)&&!a.isDestroyed()&&a.vertexArrayDestroyable&&a.destroy(),r(this._vao)&&this._context.glDeleteVertexArray(this._vao),i(this)},_}),define("Scene/BatchTable",["../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/combine","../Core/ComponentDatatype","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/FeatureDetection","../Core/Math","../Core/PixelFormat","../Renderer/ContextLimits","../Renderer/PixelDatatype","../Renderer/Sampler","../Renderer/Texture","../Renderer/TextureMagnificationFilter","../Renderer/TextureMinificationFilter"],function(e,t,n,r,a,i,o,s,c,u,l,d,f,m,p,h,_,v){"use strict";function g(t,r,a){if(this._attributes=r,this._numberOfInstances=a,0!==r.length){var i=y(r),o=t.floatingPointTexture,s=i===m.FLOAT&&!o,c=T(r,s),u=C(c,r,s),l=Math.floor(f.maximumTextureSize/u),d=Math.min(a,l),p=u*d,h=Math.ceil(a/d),_=1/p,v=.5*_,g=1/h,E=.5*g;this._textureDimensions=new e(p,h),this._textureStep=new n(_,v,g,E),this._pixelDatatype=s?m.UNSIGNED_BYTE:i,this._packFloats=s,this._offsets=c,this._stride=u,this._texture=void 0;var S=4*p*h;this._batchValues=i!==m.FLOAT||s?new Uint8Array(S):new Float32Array(S),this._batchValuesDirty=!1}}function y(e){for(var t=!1,n=e.length,r=0;r<n;++r)if(e[r].componentDatatype!==a.UNSIGNED_BYTE){t=!0;break}return t?m.FLOAT:m.UNSIGNED_BYTE}function E(r,a){var i=r[a].componentsPerAttribute;return 2===i?e:3===i?t:4===i?n:Number}function T(e,t){for(var n=new Array(e.length),r=0,i=e.length,o=0;o<i;++o){var s=e[o],c=s.componentDatatype;n[o]=r,c!==a.UNSIGNED_BYTE&&t?r+=4:++r}return n}function C(e,t,n){var r=e.length,i=e[r-1];return t[r-1].componentDatatype!==a.UNSIGNED_BYTE&&n?i+4:i+1}function S(e,t,r){var a=n.unpack(e,t,D),i=n.unpackFloat(a);a=n.unpack(e,t+4,D);var o=n.unpackFloat(a);a=n.unpack(e,t+8,D);var s=n.unpackFloat(a);a=n.unpack(e,t+12,D);var c=n.unpackFloat(a);return n.fromElements(i,o,s,c,r)}function A(e,t,r){var a=n.packFloat(e.x,D);n.pack(a,t,r),a=n.packFloat(e.y,a),n.pack(a,t,r+4),a=n.packFloat(e.z,a),n.pack(a,t,r+8),a=n.packFloat(e.w,a),n.pack(a,t,r+12)}function x(e,t){var n=e._textureDimensions;e._texture=new h({context:t,pixelFormat:d.RGBA,pixelDatatype:e._pixelDatatype,width:n.x,height:n.y,sampler:new p({minificationFilter:v.NEAREST,magnificationFilter:_.NEAREST}),flipY:!1})}function w(e){var t=e._textureDimensions;e._texture.copyFrom({width:t.x,height:t.y,arrayBufferView:e._batchValues})}function b(e){var t=e._stride;return 1===e._textureDimensions.y?"uniform vec4 batchTextureStep; \nvec2 computeSt(float batchId) \n{ \n    float stepX = batchTextureStep.x; \n    float centerX = batchTextureStep.y; \n    float numberOfAttributes = float("+t+"); \n    return vec2(centerX + (batchId * numberOfAttributes * stepX), 0.5); \n} \n":"uniform vec4 batchTextureStep; \nuniform vec2 batchTextureDimensions; \nvec2 computeSt(float batchId) \n{ \n    float stepX = batchTextureStep.x; \n    float centerX = batchTextureStep.y; \n    float stepY = batchTextureStep.z; \n    float centerY = batchTextureStep.w; \n    float numberOfAttributes = float("+t+"); \n    float xId = mod(batchId * numberOfAttributes, batchTextureDimensions.x); \n    float yId = floor(batchId * numberOfAttributes / batchTextureDimensions.x); \n    return vec2(centerX + (xId * stepX), centerY + (yId * stepY)); \n} \n"}function R(e){return 1===e?"float":"vec"+e}function I(e){return 1===e?".x":2===e?".xy":3===e?".xyz":""}function z(e,t){var n=e._attributes,r=n[t],i=r.componentsPerAttribute,o=r.functionName,s=R(i),c=I(i),u=e._offsets[t],l=s+" "+o+"(float batchId) \n{ \n    vec2 st = computeSt(batchId); \n    st.x += batchTextureStep.x * float("+u+"); \n";return e._packFloats&&r.componentDatatype!==m.UNSIGNED_BYTE?l+="vec4 textureValue; \ntextureValue.x = czm_unpackFloat(texture2D(batchTexture, st)); \ntextureValue.y = czm_unpackFloat(texture2D(batchTexture, st + vec2(batchTextureStep.x, 0.0))); \ntextureValue.z = czm_unpackFloat(texture2D(batchTexture, st + vec2(batchTextureStep.x * 2.0, 0.0))); \ntextureValue.w = czm_unpackFloat(texture2D(batchTexture, st + vec2(batchTextureStep.x * 3.0, 0.0))); \n":l+="    vec4 textureValue = texture2D(batchTexture, st); \n",l+="    "+s+" value = textureValue"+c+"; \n",e._pixelDatatype!==m.UNSIGNED_BYTE||r.componentDatatype!==a.UNSIGNED_BYTE||r.normalize?e._pixelDatatype===m.FLOAT&&r.componentDatatype===a.UNSIGNED_BYTE&&r.normalize&&(l+="value /= 255.0; \n"):l+="value *= 255.0; \n",l+="    return value; \n} \n"}o(g.prototype,{attributes:{get:function(){return this._attributes}},numberOfInstances:{get:function(){return this._numberOfInstances}}});var D=new n;if(u.supportsTypedArrays()){var O=new n;g.prototype.getBatchedAttribute=function(e,t,r){var a,o=this._attributes,s=this._offsets[t],c=this._stride,u=4*c*e+4*s;a=this._packFloats&&o[t].componentDatatype!==m.UNSIGNED_BYTE?S(this._batchValues,u,O):n.unpack(this._batchValues,u,O);var l=E(o,t);return i(l.fromCartesian4)?l.fromCartesian4(a,r):i(l.clone)?l.clone(a,r):a.x};var P=[void 0,void 0,new e,new t,new n],M=new n;return g.prototype.setBatchedAttribute=function(e,t,r){var a=this._attributes,o=P[a[t].componentsPerAttribute],s=this.getBatchedAttribute(e,t,o),c=E(this._attributes,t);if(!(i(c.equals)?c.equals(s,r):s===r)){var u=M;u.x=i(r.x)?r.x:r,u.y=i(r.y)?r.y:0,u.z=i(r.z)?r.z:0,u.w=i(r.w)?r.w:0;var l=this._offsets[t],d=this._stride,f=4*d*e+4*l;this._packFloats&&a[t].componentDatatype!==m.UNSIGNED_BYTE?A(u,this._batchValues,f):n.pack(u,this._batchValues,f),this._batchValuesDirty=!0}},g.prototype.update=function(e){i(this._texture)&&!this._batchValuesDirty||0===this._attributes.length||(this._batchValuesDirty=!1,i(this._texture)||x(this,e.context),w(this))},g.prototype.getUniformMapCallback=function(){var e=this;return function(t){return 0===e._attributes.length?t:r(t,{batchTexture:function(){return e._texture},batchTextureDimensions:function(){return e._textureDimensions},batchTextureStep:function(){return e._textureStep}})}},g.prototype.getVertexShaderCallback=function(){var e=this._attributes;if(0===e.length)return function(e){return e};var t="uniform sampler2D batchTexture; \n";t+=b(this)+"\n";for(var n=e.length,r=0;r<n;++r)t+=z(this,r);return function(e){var n=e.indexOf("void main"),r=e.substring(0,n),a=e.substring(n);return r+"\n"+t+"\n"+a}},g.prototype.isDestroyed=function(){return!1},g.prototype.destroy=function(){return this._texture=this._texture&&this._texture.destroy(),s(this)},g}}),define("Scene/DepthFunction",["../Core/freezeObject","../Core/WebGLConstants"],function(e,t){"use strict";return e({NEVER:t.NEVER,LESS:t.LESS,EQUAL:t.EQUAL,LESS_OR_EQUAL:t.LEQUAL,GREATER:t.GREATER,NOT_EQUAL:t.NOTEQUAL,GREATER_OR_EQUAL:t.GEQUAL,ALWAYS:t.ALWAYS})}),define("Core/AttributeCompression",["./Cartesian2","./Cartesian3","./Check","./defined","./DeveloperError","./Math"],function(e,t,n,r,a,i){"use strict";function o(e){return l[0]=e,l[0]}function s(e){return e>>1^-(1&e)}var c={};c.octEncodeInRange=function(e,t,n){if(n.x=e.x/(Math.abs(e.x)+Math.abs(e.y)+Math.abs(e.z)),n.y=e.y/(Math.abs(e.x)+Math.abs(e.y)+Math.abs(e.z)),e.z<0){var r=n.x,a=n.y;n.x=(1-Math.abs(a))*i.signNotZero(r),n.y=(1-Math.abs(r))*i.signNotZero(a)}return n.x=i.toSNorm(n.x,t),n.y=i.toSNorm(n.y,t),n},c.octEncode=function(e,t){return c.octEncodeInRange(e,255,t)};var u=new e,l=new Uint8Array(1);c.octEncodeToCartesian4=function(e,t){return c.octEncodeInRange(e,65535,u),t.x=o(u.x*(1/256)),t.y=o(u.x),t.z=o(u.y*(1/256)),t.w=o(u.y),t},c.octDecodeInRange=function(e,n,r,a){if(a.x=i.fromSNorm(e,r),a.y=i.fromSNorm(n,r),a.z=1-(Math.abs(a.x)+Math.abs(a.y)),a.z<0){var o=a.x;a.x=(1-Math.abs(a.y))*i.signNotZero(o),a.y=(1-Math.abs(o))*i.signNotZero(a.y)}return t.normalize(a,a)},c.octDecode=function(e,t,n){return c.octDecodeInRange(e,t,255,n)},c.octDecodeFromCartesian4=function(e,t){var n=e.x,r=e.y,a=e.z,i=e.w,o=256*n+r,s=256*a+i;return c.octDecodeInRange(o,s,65535,t)},c.octPackFloat=function(e){return 256*e.x+e.y};var d=new e;return c.octEncodeFloat=function(e){return c.octEncode(e,d),c.octPackFloat(d)},c.octDecodeFloat=function(e,t){var n=e/256,r=Math.floor(n),a=256*(n-r);return c.octDecode(r,a,t)},c.octPack=function(e,t,n,r){var a=c.octEncodeFloat(e),i=c.octEncodeFloat(t),o=c.octEncode(n,d);return r.x=65536*o.x+a,r.y=65536*o.y+i,r},c.octUnpack=function(e,t,n,r){var a=e.x/65536,i=Math.floor(a),o=65536*(a-i);a=e.y/65536;var s=Math.floor(a),u=65536*(a-s);c.octDecodeFloat(o,t),c.octDecodeFloat(u,n),c.octDecode(i,s,r)},c.compressTextureCoordinates=function(e){return 4096*(4095*e.x|0)+(4095*e.y|0)},c.decompressTextureCoordinates=function(e,t){var n=e/4096,r=Math.floor(n);return t.x=r/4095,t.y=(e-4096*r)/4095,t},c.zigZagDeltaDecode=function(e,t,n){for(var a=e.length,i=0,o=0,c=0,u=0;u<a;++u)i+=s(e[u]),o+=s(t[u]),e[u]=i,t[u]=o,r(n)&&(c+=s(n[u]),n[u]=c)},c}),define("Core/barycentricCoordinates",["./Cartesian2","./Cartesian3","./Check","./defined","./Math"],function(e,t,n,r,a){"use strict";function i(n,i,u,l,d){r(d)||(d=new t);var f,m,p,h,_,v,g,y;if(r(i.z)){if(t.equalsEpsilon(n,i,a.EPSILON14))return t.clone(t.UNIT_X,d);if(t.equalsEpsilon(n,u,a.EPSILON14))return t.clone(t.UNIT_Y,d);if(t.equalsEpsilon(n,l,a.EPSILON14))return t.clone(t.UNIT_Z,d);f=t.subtract(u,i,o),m=t.subtract(l,i,s),p=t.subtract(n,i,c),h=t.dot(f,f),_=t.dot(f,m),v=t.dot(f,p),g=t.dot(m,m),y=t.dot(m,p)}else{if(e.equalsEpsilon(n,i,a.EPSILON14))return t.clone(t.UNIT_X,d);if(e.equalsEpsilon(n,u,a.EPSILON14))return t.clone(t.UNIT_Y,d);if(e.equalsEpsilon(n,l,a.EPSILON14))return t.clone(t.UNIT_Z,d);f=e.subtract(u,i,o),m=e.subtract(l,i,s),p=e.subtract(n,i,c),h=e.dot(f,f),_=e.dot(f,m),v=e.dot(f,p),g=e.dot(m,m),y=e.dot(m,p)}var E=h*g-_*_,T=1/E;return d.y=(g*v-_*y)*T,d.z=(h*y-_*v)*T,d.x=1-d.y-d.z,d}var o=new t,s=new t,c=new t;return i}),define("Core/Tipsify",["./defaultValue","./defined","./DeveloperError"],function(e,t,n){"use strict";var r={};return r.calculateACMR=function(n){n=e(n,e.EMPTY_OBJECT);var r=n.indices,a=n.maximumIndex,i=e(n.cacheSize,24),o=r.length;if(!t(a)){a=0;for(var s=0,c=r[s];s<o;)c>a&&(a=c),++s,c=r[s]}for(var u=[],l=0;l<a+1;l++)u[l]=0;for(var d=i+1,f=0;f<o;++f)d-u[r[f]]>i&&(u[r[f]]=d,++d);return(d-i+1)/(o/3)},r.tipsify=function(n){function r(e,t,n,r){for(;t.length>=1;){var i=t[t.length-1];if(t.splice(t.length-1,1),e[i].numLiveTriangles>0)return i}for(;a<r;){if(e[a].numLiveTriangles>0)return++a-1;++a}return-1}n=e(n,e.EMPTY_OBJECT);var a,i=n.indices,o=n.maximumIndex,s=e(n.cacheSize,24),c=i.length,u=0,l=0,d=i[l],f=c;if(t(o))u=o+1;else{for(;l<f;)d>u&&(u=d),++l,d=i[l];if(-1===u)return 0;++u}var m,p=[];for(m=0;m<u;m++)p[m]={numLiveTriangles:0,timeStamp:0,vertexTriangles:[]};l=0;for(var h=0;l<f;)p[i[l]].vertexTriangles.push(h),++p[i[l]].numLiveTriangles,p[i[l+1]].vertexTriangles.push(h),++p[i[l+1]].numLiveTriangles,p[i[l+2]].vertexTriangles.push(h),++p[i[l+2]].numLiveTriangles,++h,l+=3;var _=0,v=s+1;a=1;var g,y,E=[],T=[],C=0,S=[],A=c/3,x=[];for(m=0;m<A;m++)x[m]=!1;for(var w,b;-1!==_;){E=[],y=p[_],b=y.vertexTriangles.length;for(var R=0;R<b;++R)if(h=y.vertexTriangles[R],!x[h]){x[h]=!0,l=h+h+h;for(var I=0;I<3;++I)w=i[l],E.push(w),T.push(w),S[C]=w,++C,g=p[w],--g.numLiveTriangles,v-g.timeStamp>s&&(g.timeStamp=v,++v),++l}_=function(e,t,n,a,i,o,s){for(var c,u=-1,l=-1,d=0;d<n.length;){var f=n[d];a[f].numLiveTriangles&&(c=0,i-a[f].timeStamp+2*a[f].numLiveTriangles<=t&&(c=i-a[f].timeStamp),(c>l||-1===l)&&(l=c,u=f)),++d}return-1===u?r(a,o,e,s):u}(i,s,E,p,v,T,u)}return S},r}),define("Core/GeometryPipeline",["./AttributeCompression","./barycentricCoordinates","./BoundingSphere","./Cartesian2","./Cartesian3","./Cartesian4","./Cartographic","./ComponentDatatype","./defaultValue","./defined","./DeveloperError","./EncodedCartesian3","./GeographicProjection","./Geometry","./GeometryAttribute","./GeometryType","./IndexDatatype","./Intersect","./IntersectionTests","./Math","./Matrix3","./Matrix4","./Plane","./PrimitiveType","./Tipsify"],function(e,t,n,r,a,i,o,s,c,u,l,d,f,m,p,h,_,v,g,y,E,T,C,S,A){"use strict";function x(e,t,n,r,a){e[t++]=n,e[t++]=r,e[t++]=r,e[t++]=a,e[t++]=a,e[t]=n}function w(e){for(var t=e.length,n=t/3*6,r=_.createTypedArray(t,n),a=0,i=0;i<t;i+=3,a+=6)x(r,a,e[i],e[i+1],e[i+2]);return r}function b(e){var t=e.length;if(t>=3){var n=6*(t-2),r=_.createTypedArray(t,n);x(r,0,e[0],e[1],e[2]);for(var a=6,i=3;i<t;++i,a+=6)x(r,a,e[i-1],e[i],e[i-2]);return r}return new Uint16Array}function R(e){if(e.length>0){for(var t=e.length-1,n=6*(t-1),r=_.createTypedArray(t,n),a=e[0],i=0,o=1;o<t;++o,i+=6)x(r,i,a,e[o],e[o+1]);return r}return new Uint16Array}function I(e){var t={};for(var n in e)if(e.hasOwnProperty(n)&&u(e[n])&&u(e[n].values)){var r=e[n];t[n]=new p({componentDatatype:r.componentDatatype,componentsPerAttribute:r.componentsPerAttribute,normalize:r.normalize,values:[]})}return t}function z(e,t,n){for(var r in t)if(t.hasOwnProperty(r)&&u(t[r])&&u(t[r].values))for(var a=t[r],i=0;i<a.componentsPerAttribute;++i)e[r].values.push(a.values[n*a.componentsPerAttribute+i])}function D(e,t){if(u(t))for(var n=t.values,r=n.length,i=0;i<r;i+=3)a.unpack(n,i,ce),T.multiplyByPoint(e,ce,ce),a.pack(ce,n,i)}function O(e,t){if(u(t))for(var n=t.values,r=n.length,i=0;i<r;i+=3)a.unpack(n,i,ce),E.multiplyByVector(e,ce,ce),ce=a.normalize(ce,ce),a.pack(ce,n,i)}function P(e,t){var n,r=e.length,a={},i=e[0][t].attributes;for(n in i)if(i.hasOwnProperty(n)&&u(i[n])&&u(i[n].values)){for(var o=i[n],c=o.values.length,l=!0,d=1;d<r;++d){var f=e[d][t].attributes[n];if(!u(f)||o.componentDatatype!==f.componentDatatype||o.componentsPerAttribute!==f.componentsPerAttribute||o.normalize!==f.normalize){l=!1;break}c+=f.values.length}l&&(a[n]=new p({componentDatatype:o.componentDatatype,componentsPerAttribute:o.componentsPerAttribute,normalize:o.normalize,values:s.createTypedArray(o.componentDatatype,c)}))}return a}function M(e,t){var r,i,o,s,c,l,d,f=e.length,p=(e[0].modelMatrix,u(e[0][t].indices)),h=e[0][t].primitiveType,v=P(e,t);for(r in v)if(v.hasOwnProperty(r))for(c=v[r].values,s=0,i=0;i<f;++i)for(l=e[i][t].attributes[r].values,d=l.length,o=0;o<d;++o)c[s++]=l[o];var g;if(p){var y=0;for(i=0;i<f;++i)y+=e[i][t].indices.length;var E=m.computeNumberOfVertices(new m({attributes:v,primitiveType:S.POINTS})),T=_.createTypedArray(E,y),C=0,A=0;for(i=0;i<f;++i){var x=e[i][t].indices,w=x.length;for(s=0;s<w;++s)T[C++]=A+x[s];A+=m.computeNumberOfVertices(e[i][t])}g=T}var b,R=new a,I=0;for(i=0;i<f;++i){if(b=e[i][t].boundingSphere,!u(b)){R=void 0;break}a.add(b.center,R,R)}if(u(R))for(a.divideByScalar(R,f,R),i=0;i<f;++i){b=e[i][t].boundingSphere;var z=a.magnitude(a.subtract(b.center,R,de))+b.radius;z>I&&(I=z)}return new m({attributes:v,indices:g,primitiveType:h,boundingSphere:u(R)?new n(R,I):void 0})}function N(e){if(u(e.indices))return e;for(var t=m.computeNumberOfVertices(e),n=_.createTypedArray(t,t),r=0;r<t;++r)n[r]=r;return e.indices=n,e}function F(e){var t=m.computeNumberOfVertices(e),n=_.createTypedArray(t,3*(t-2));n[0]=1,n[1]=0,n[2]=2;for(var r=3,a=3;a<t;++a)n[r++]=a-1,n[r++]=0,n[r++]=a;return e.indices=n,e.primitiveType=S.TRIANGLES,e}function L(e){var t=m.computeNumberOfVertices(e),n=_.createTypedArray(t,3*(t-2));n[0]=0,n[1]=1,n[2]=2,t>3&&(n[3]=0,n[4]=2,n[5]=3);for(var r=6,a=3;a<t-1;a+=2)n[r++]=a,n[r++]=a-1,n[r++]=a+1,a+2<t&&(n[r++]=a,n[r++]=a+1,n[r++]=a+2);return e.indices=n,e.primitiveType=S.TRIANGLES,e}function B(e){if(u(e.indices))return e;for(var t=m.computeNumberOfVertices(e),n=_.createTypedArray(t,t),r=0;r<t;++r)n[r]=r;return e.indices=n,e}function U(e){var t=m.computeNumberOfVertices(e),n=_.createTypedArray(t,2*(t-1));n[0]=0,n[1]=1;for(var r=2,a=2;a<t;++a)n[r++]=a-1,n[r++]=a;return e.indices=n,e.primitiveType=S.LINES,e}function G(e){var t=m.computeNumberOfVertices(e),n=_.createTypedArray(t,2*t);n[0]=0,n[1]=1;for(var r=2,a=2;a<t;++a)n[r++]=a-1,n[r++]=a;return n[r++]=t-1,n[r]=0,e.indices=n,e.primitiveType=S.LINES,e}function V(e){switch(e.primitiveType){case S.TRIANGLE_FAN:return F(e);case S.TRIANGLE_STRIP:return L(e);case S.TRIANGLES:return N(e);case S.LINE_STRIP:return U(e);case S.LINE_LOOP:return G(e);case S.LINES:return B(e)}return e}function k(e,t){Math.abs(e.y)<y.EPSILON6&&(e.y=t?-y.EPSILON6:y.EPSILON6)}function q(e,t,n){if(0!==e.y&&0!==t.y&&0!==n.y)return k(e,e.y<0),k(t,t.y<0),void k(n,n.y<0);var r,a=Math.abs(e.y),i=Math.abs(t.y),o=Math.abs(n.y);r=a>i?a>o?y.sign(e.y):y.sign(n.y):i>o?y.sign(t.y):y.sign(n.y);var s=r<0;k(e,s),k(t,s),k(n,s)}function H(e,t,n,r){a.add(e,a.multiplyByScalar(a.subtract(t,e,Ae),e.y/(e.y-t.y),Ae),n),a.clone(n,r),k(n,!0),k(r,!1)}function W(e,t,n){if(!(e.x>=0||t.x>=0||n.x>=0)){q(e,t,n);var r=e.y<0,a=t.y<0,i=n.y<0,o=0;o+=r?1:0,o+=a?1:0,o+=i?1:0;var s=Ie.indices;1===o?(s[1]=3,s[2]=4,s[5]=6,s[7]=6,s[8]=5,r?(H(e,t,xe,be),H(e,n,we,Re),s[0]=0,s[3]=1,s[4]=2,s[6]=1):a?(H(t,n,xe,be),H(t,e,we,Re),s[0]=1,s[3]=2,s[4]=0,s[6]=2):i&&(H(n,e,xe,be),
H(n,t,we,Re),s[0]=2,s[3]=0,s[4]=1,s[6]=0)):2===o&&(s[2]=4,s[4]=4,s[5]=3,s[7]=5,s[8]=6,r?a?i||(H(n,e,xe,be),H(n,t,we,Re),s[0]=0,s[1]=1,s[3]=0,s[6]=2):(H(t,n,xe,be),H(t,e,we,Re),s[0]=2,s[1]=0,s[3]=2,s[6]=1):(H(e,t,xe,be),H(e,n,we,Re),s[0]=1,s[1]=2,s[3]=1,s[6]=0));var c=Ie.positions;return c[0]=e,c[1]=t,c[2]=n,c.length=3,1!==o&&2!==o||(c[3]=xe,c[4]=we,c[5]=be,c[6]=Re,c.length=7),Ie}}function Y(e,t){var r=e.attributes;if(0!==r.position.values.length){for(var a in r)if(r.hasOwnProperty(a)&&u(r[a])&&u(r[a].values)){var i=r[a];i.values=s.createTypedArray(i.componentDatatype,i.values)}var o=m.computeNumberOfVertices(e);return e.indices=_.createTypedArray(o,e.indices),t&&(e.boundingSphere=n.fromVertices(r.position.values)),e}}function X(e){var t=e.attributes,n={};for(var r in t)if(t.hasOwnProperty(r)&&u(t[r])&&u(t[r].values)){var a=t[r];n[r]=new p({componentDatatype:a.componentDatatype,componentsPerAttribute:a.componentsPerAttribute,normalize:a.normalize,values:[]})}return new m({attributes:n,indices:[],primitiveType:e.primitiveType})}function j(e,t,n){var r=u(e.geometry.boundingSphere);t=Y(t,r),n=Y(n,r),u(n)&&!u(t)?e.geometry=n:!u(n)&&u(t)?e.geometry=t:(e.westHemisphereGeometry=t,e.eastHemisphereGeometry=n,e.geometry=void 0)}function Z(e,t){var n=new e,r=new e,a=new e;return function(i,o,s,c,u,l,d,f){var m=e.fromArray(u,i*t,n),p=e.fromArray(u,o*t,r),h=e.fromArray(u,s*t,a);e.multiplyByScalar(m,c.x,m),e.multiplyByScalar(p,c.y,p),e.multiplyByScalar(h,c.z,h);var _=e.add(m,p,m);e.add(_,h,_),f&&e.normalize(_,_),e.pack(_,l,d*t)}}function K(e,n,r,i,o,s,c,l,d,f,m,p,h,_,v,g){if(u(s)||u(c)||u(l)||u(d)||u(f)||0!==_){var y=a.fromArray(o,3*e,Me),E=a.fromArray(o,3*n,Ne),T=a.fromArray(o,3*r,Fe),C=t(i,y,E,T,Le);if(u(s)&&De(e,n,r,C,s,p.normal.values,g,!0),u(f)){var S=a.fromArray(f,3*e,Me),A=a.fromArray(f,3*n,Ne),x=a.fromArray(f,3*r,Fe);a.multiplyByScalar(S,C.x,S),a.multiplyByScalar(A,C.y,A),a.multiplyByScalar(x,C.z,x);var w;a.equals(S,a.ZERO)&&a.equals(A,a.ZERO)&&a.equals(x,a.ZERO)?(w=Me,w.x=0,w.y=0,w.z=0):(w=a.add(S,A,S),a.add(w,x,w),a.normalize(w,w)),a.pack(w,p.extrudeDirection.values,3*g)}if(u(m)&&Pe(e,n,r,C,m,p.applyOffset.values,g),u(c)&&De(e,n,r,C,c,p.tangent.values,g,!0),u(l)&&De(e,n,r,C,l,p.bitangent.values,g,!0),u(d)&&Oe(e,n,r,C,d,p.st.values,g),_>0)for(var b=0;b<_;b++){var R=h[b];J(e,n,r,C,g,v[R],p[R])}}}function J(e,t,n,r,a,i,o){var s=i.componentsPerAttribute,c=i.values,u=o.values;switch(s){case 4:ze(e,t,n,r,c,u,a,!1);break;case 3:De(e,t,n,r,c,u,a,!1);break;case 2:Oe(e,t,n,r,c,u,a,!1);break;default:u[a]=c[e]*r.x+c[t]*r.y+c[n]*r.z}}function Q(e,t,n,r,a,i){var o=e.position.values.length/3;if(-1!==a){var s=r[a],c=n[s];return-1===c?(n[s]=o,e.position.values.push(i.x,i.y,i.z),t.push(o),o):(t.push(c),c)}return e.position.values.push(i.x,i.y,i.z),t.push(o),o}function $(e){var t=e.geometry,n=t.attributes,r=n.position.values,i=u(n.normal)?n.normal.values:void 0,o=u(n.bitangent)?n.bitangent.values:void 0,s=u(n.tangent)?n.tangent.values:void 0,c=u(n.st)?n.st.values:void 0,l=u(n.extrudeDirection)?n.extrudeDirection.values:void 0,d=u(n.applyOffset)?n.applyOffset.values:void 0,f=t.indices,m=[];for(var p in n)n.hasOwnProperty(p)&&!Be[p]&&u(n[p])&&m.push(p);var h,_,v,g,y,E=m.length,T=X(t),C=X(t),S=[];S.length=r.length/3;var A=[];for(A.length=r.length/3,y=0;y<S.length;++y)S[y]=-1,A[y]=-1;var x=f.length;for(y=0;y<x;y+=3){var w=f[y],b=f[y+1],R=f[y+2],I=a.fromArray(r,3*w),z=a.fromArray(r,3*b),D=a.fromArray(r,3*R),O=W(I,z,D);if(u(O)&&O.positions.length>3)for(var P=O.positions,M=O.indices,N=M.length,F=0;F<N;++F){var L=M[F],B=P[L];B.y<0?(h=C.attributes,_=C.indices,v=S):(h=T.attributes,_=T.indices,v=A),g=Q(h,_,v,f,L<3?y+L:-1,B),K(w,b,R,B,r,i,s,o,c,l,d,h,m,E,n,g)}else u(O)&&(I=O.positions[0],z=O.positions[1],D=O.positions[2]),I.y<0?(h=C.attributes,_=C.indices,v=S):(h=T.attributes,_=T.indices,v=A),g=Q(h,_,v,f,y,I),K(w,b,R,I,r,i,s,o,c,l,d,h,m,E,n,g),g=Q(h,_,v,f,y+1,z),K(w,b,R,z,r,i,s,o,c,l,d,h,m,E,n,g),g=Q(h,_,v,f,y+2,D),K(w,b,R,D,r,i,s,o,c,l,d,h,m,E,n,g)}j(e,C,T)}function ee(e,t,n,r,i,o,s){if(u(s)){var c=a.fromArray(r,3*e,Me);a.equalsEpsilon(c,n,y.EPSILON10)?o.applyOffset.values[i]=s[e]:o.applyOffset.values[i]=s[t]}}function te(e){var t,n=e.geometry,r=n.attributes,i=r.position.values,o=u(r.applyOffset)?r.applyOffset.values:void 0,s=n.indices,c=X(n),l=X(n),d=s.length,f=[];f.length=i.length/3;var m=[];for(m.length=i.length/3,t=0;t<f.length;++t)f[t]=-1,m[t]=-1;for(t=0;t<d;t+=2){var p,h=s[t],_=s[t+1],v=a.fromArray(i,3*h,Me),E=a.fromArray(i,3*_,Ne);Math.abs(v.y)<y.EPSILON6&&(v.y<0?v.y=-y.EPSILON6:v.y=y.EPSILON6),Math.abs(E.y)<y.EPSILON6&&(E.y<0?E.y=-y.EPSILON6:E.y=y.EPSILON6);var T=c.attributes,C=c.indices,S=m,A=l.attributes,x=l.indices,w=f,b=g.lineSegmentPlane(v,E,Ue,Fe);if(u(b)){var R=a.multiplyByScalar(a.UNIT_Y,5*y.EPSILON9,Ge);v.y<0&&(a.negate(R,R),T=l.attributes,C=l.indices,S=f,A=c.attributes,x=c.indices,w=m);var I=a.add(b,R,Ve);p=Q(T,C,S,s,t,v),ee(h,_,v,i,p,T,o),p=Q(T,C,S,s,-1,I),ee(h,_,I,i,p,T,o),a.negate(R,R),a.add(b,R,I),p=Q(A,x,w,s,-1,I),ee(h,_,I,i,p,A,o),p=Q(A,x,w,s,t+1,E),ee(h,_,E,i,p,A,o)}else{var z,D,O;v.y<0?(z=l.attributes,D=l.indices,O=f):(z=c.attributes,D=c.indices,O=m),p=Q(z,D,O,s,t,v),ee(h,_,v,i,p,z,o),p=Q(z,D,O,s,t+1,E),ee(h,_,E,i,p,z,o)}}j(e,l,c)}function ne(e){for(var t=e.attributes,n=t.position.values,r=t.prevPosition.values,i=t.nextPosition.values,o=n.length,s=0;s<o;s+=3){var c=a.unpack(n,s,He);if(!(c.x>0)){var u=a.unpack(r,s,We);(c.y<0&&u.y>0||c.y>0&&u.y<0)&&(s-3>0?(r[s]=n[s-3],r[s+1]=n[s-2],r[s+2]=n[s-1]):a.pack(c,r,s));var l=a.unpack(i,s,Ye);(c.y<0&&l.y>0||c.y>0&&l.y<0)&&(s+3<o?(i[s]=n[s+3],i[s+1]=n[s+4],i[s+2]=n[s+5]):a.pack(c,i,s))}}}function re(e){var t,n,o,s=e.geometry,c=s.attributes,l=c.position.values,d=c.prevPosition.values,f=c.nextPosition.values,m=c.expandAndWidth.values,p=u(c.st)?c.st.values:void 0,h=u(c.color)?c.color.values:void 0,_=X(s),v=X(s),E=!1,T=l.length/3;for(t=0;t<T;t+=4){var C=t,S=t+2,A=a.fromArray(l,3*C,He),x=a.fromArray(l,3*S,We);if(Math.abs(A.y)<Qe)for(A.y=Qe*(x.y<0?-1:1),l[3*t+1]=A.y,l[3*(t+1)+1]=A.y,n=3*C;n<3*C+12;n+=3)d[n]=l[3*t],d[n+1]=l[3*t+1],d[n+2]=l[3*t+2];if(Math.abs(x.y)<Qe)for(x.y=Qe*(A.y<0?-1:1),l[3*(t+2)+1]=x.y,l[3*(t+3)+1]=x.y,n=3*C;n<3*C+12;n+=3)f[n]=l[3*(t+2)],f[n+1]=l[3*(t+2)+1],f[n+2]=l[3*(t+2)+2];var w=_.attributes,b=_.indices,R=v.attributes,I=v.indices,z=g.lineSegmentPlane(A,x,Ue,Xe);if(u(z)){E=!0;var D=a.multiplyByScalar(a.UNIT_Y,Je,je);A.y<0&&(a.negate(D,D),w=v.attributes,b=v.indices,R=_.attributes,I=_.indices);var O=a.add(z,D,Ze);w.position.values.push(A.x,A.y,A.z,A.x,A.y,A.z),w.position.values.push(O.x,O.y,O.z),w.position.values.push(O.x,O.y,O.z),w.prevPosition.values.push(d[3*C],d[3*C+1],d[3*C+2]),w.prevPosition.values.push(d[3*C+3],d[3*C+4],d[3*C+5]),w.prevPosition.values.push(A.x,A.y,A.z,A.x,A.y,A.z),w.nextPosition.values.push(O.x,O.y,O.z),w.nextPosition.values.push(O.x,O.y,O.z),w.nextPosition.values.push(O.x,O.y,O.z),w.nextPosition.values.push(O.x,O.y,O.z),a.negate(D,D),a.add(z,D,O),R.position.values.push(O.x,O.y,O.z),R.position.values.push(O.x,O.y,O.z),R.position.values.push(x.x,x.y,x.z,x.x,x.y,x.z),R.prevPosition.values.push(O.x,O.y,O.z),R.prevPosition.values.push(O.x,O.y,O.z),R.prevPosition.values.push(O.x,O.y,O.z),R.prevPosition.values.push(O.x,O.y,O.z),R.nextPosition.values.push(x.x,x.y,x.z,x.x,x.y,x.z),R.nextPosition.values.push(f[3*S],f[3*S+1],f[3*S+2]),R.nextPosition.values.push(f[3*S+3],f[3*S+4],f[3*S+5]);var P=r.fromArray(m,2*C,ke),M=Math.abs(P.y);w.expandAndWidth.values.push(-1,M,1,M),w.expandAndWidth.values.push(-1,-M,1,-M),R.expandAndWidth.values.push(-1,M,1,M),R.expandAndWidth.values.push(-1,-M,1,-M);var N=a.magnitudeSquared(a.subtract(z,A,Ye));if(N/=a.magnitudeSquared(a.subtract(x,A,Ye)),u(h)){var F=i.fromArray(h,4*C,Ke),L=i.fromArray(h,4*S,Ke),B=y.lerp(F.x,L.x,N),U=y.lerp(F.y,L.y,N),G=y.lerp(F.z,L.z,N),V=y.lerp(F.w,L.w,N);for(n=4*C;n<4*C+8;++n)w.color.values.push(h[n]);for(w.color.values.push(B,U,G,V),w.color.values.push(B,U,G,V),R.color.values.push(B,U,G,V),R.color.values.push(B,U,G,V),n=4*S;n<4*S+8;++n)R.color.values.push(h[n])}if(u(p)){var k=r.fromArray(p,2*C,ke),q=r.fromArray(p,2*(t+3),qe),H=y.lerp(k.x,q.x,N);for(n=2*C;n<2*C+4;++n)w.st.values.push(p[n]);for(w.st.values.push(H,k.y),w.st.values.push(H,q.y),R.st.values.push(H,k.y),R.st.values.push(H,q.y),n=2*S;n<2*S+4;++n)R.st.values.push(p[n])}o=w.position.values.length/3-4,b.push(o,o+2,o+1),b.push(o+1,o+2,o+3),o=R.position.values.length/3-4,I.push(o,o+2,o+1),I.push(o+1,o+2,o+3)}else{var W,Y;for(A.y<0?(W=v.attributes,Y=v.indices):(W=_.attributes,Y=_.indices),W.position.values.push(A.x,A.y,A.z),W.position.values.push(A.x,A.y,A.z),W.position.values.push(x.x,x.y,x.z),W.position.values.push(x.x,x.y,x.z),n=3*t;n<3*t+12;++n)W.prevPosition.values.push(d[n]),W.nextPosition.values.push(f[n]);for(n=2*t;n<2*t+8;++n)W.expandAndWidth.values.push(m[n]),u(p)&&W.st.values.push(p[n]);if(u(h))for(n=4*t;n<4*t+16;++n)W.color.values.push(h[n]);o=W.position.values.length/3-4,Y.push(o,o+2,o+1),Y.push(o+1,o+2,o+3)}}E&&(ne(v),ne(_)),j(e,v,_)}var ae={};ae.toWireframe=function(e){var t=e.indices;if(u(t)){switch(e.primitiveType){case S.TRIANGLES:e.indices=w(t);break;case S.TRIANGLE_STRIP:e.indices=b(t);break;case S.TRIANGLE_FAN:e.indices=R(t)}e.primitiveType=S.LINES}return e},ae.createLineSegmentsForVectors=function(e,t,r){t=c(t,"normal"),r=c(r,1e4);for(var a=e.attributes.position.values,i=e.attributes[t].values,o=a.length,l=new Float64Array(2*o),d=0,f=0;f<o;f+=3)l[d++]=a[f],l[d++]=a[f+1],l[d++]=a[f+2],l[d++]=a[f]+i[f]*r,l[d++]=a[f+1]+i[f+1]*r,l[d++]=a[f+2]+i[f+2]*r;var h,_=e.boundingSphere;return u(_)&&(h=new n(_.center,_.radius+r)),new m({attributes:{position:new p({componentDatatype:s.DOUBLE,componentsPerAttribute:3,values:l})},primitiveType:S.LINES,boundingSphere:h})},ae.createAttributeLocations=function(e){var t,n=["position","positionHigh","positionLow","position3DHigh","position3DLow","position2DHigh","position2DLow","pickColor","normal","st","tangent","bitangent","extrudeDirection","compressedAttributes"],r=e.attributes,a={},i=0,o=n.length;for(t=0;t<o;++t){var s=n[t];u(r[s])&&(a[s]=i++)}for(var c in r)r.hasOwnProperty(c)&&!u(a[c])&&(a[c]=i++);return a},ae.reorderForPreVertexCache=function(e){var t=m.computeNumberOfVertices(e),n=e.indices;if(u(n)){for(var r=new Int32Array(t),a=0;a<t;a++)r[a]=-1;for(var i,o=n,c=o.length,l=_.createTypedArray(t,c),d=0,f=0,p=0;d<c;)i=r[o[d]],-1!==i?l[f]=i:(i=o[d],r[i]=p,l[f]=p,++p),++d,++f;e.indices=l;var h=e.attributes;for(var v in h)if(h.hasOwnProperty(v)&&u(h[v])&&u(h[v].values)){for(var g=h[v],y=g.values,E=0,T=g.componentsPerAttribute,C=s.createTypedArray(g.componentDatatype,p*T);E<t;){var S=r[E];if(-1!==S)for(var A=0;A<T;A++)C[T*S+A]=y[T*E+A];++E}g.values=C}}return e},ae.reorderForPostVertexCache=function(e,t){var n=e.indices;if(e.primitiveType===S.TRIANGLES&&u(n)){for(var r=n.length,a=0,i=0;i<r;i++)n[i]>a&&(a=n[i]);e.indices=A.tipsify({indices:n,maximumIndex:a,cacheSize:t})}return e},ae.fitToUnsignedShortIndices=function(e){var t=[],n=m.computeNumberOfVertices(e);if(u(e.indices)&&n>=y.SIXTY_FOUR_KILOBYTES){var r,a=[],i=[],o=0,s=I(e.attributes),c=e.indices,l=c.length;e.primitiveType===S.TRIANGLES?r=3:e.primitiveType===S.LINES?r=2:e.primitiveType===S.POINTS&&(r=1);for(var d=0;d<l;d+=r){for(var f=0;f<r;++f){var p=c[d+f],h=a[p];u(h)||(h=o++,a[p]=h,z(s,e.attributes,p)),i.push(h)}o+r>=y.SIXTY_FOUR_KILOBYTES&&(t.push(new m({attributes:s,indices:i,primitiveType:e.primitiveType,boundingSphere:e.boundingSphere,boundingSphereCV:e.boundingSphereCV})),a=[],i=[],o=0,s=I(e.attributes))}0!==i.length&&t.push(new m({attributes:s,indices:i,primitiveType:e.primitiveType,boundingSphere:e.boundingSphere,boundingSphereCV:e.boundingSphereCV}))}else t.push(e);return t};var ie=new a,oe=new o;ae.projectTo2D=function(e,t,n,r,i){var o=e.attributes[t];i=u(i)?i:new f;for(var c=i.ellipsoid,l=o.values,d=new Float64Array(l.length),m=0,h=0;h<l.length;h+=3){var _=a.fromArray(l,h,ie),v=c.cartesianToCartographic(_,oe),g=i.project(v,ie);d[m++]=g.x,d[m++]=g.y,d[m++]=g.z}return e.attributes[n]=o,e.attributes[r]=new p({componentDatatype:s.DOUBLE,componentsPerAttribute:3,values:d}),delete e.attributes[t],e};var se={high:0,low:0};ae.encodeAttribute=function(e,t,n,r){for(var a=e.attributes[t],i=a.values,o=i.length,c=new Float32Array(o),u=new Float32Array(o),l=0;l<o;++l)d.encode(i[l],se),c[l]=se.high,u[l]=se.low;var f=a.componentsPerAttribute;return e.attributes[n]=new p({componentDatatype:s.FLOAT,componentsPerAttribute:f,values:c}),e.attributes[r]=new p({componentDatatype:s.FLOAT,componentsPerAttribute:f,values:u}),delete e.attributes[t],e};var ce=new a,ue=new T,le=new E;ae.transformToWorldCoordinates=function(e){var t=e.modelMatrix;if(T.equals(t,T.IDENTITY))return e;var r=e.geometry.attributes;D(t,r.position),D(t,r.prevPosition),D(t,r.nextPosition),(u(r.normal)||u(r.tangent)||u(r.bitangent))&&(T.inverse(t,ue),T.transpose(ue,ue),T.getRotation(ue,le),O(le,r.normal),O(le,r.tangent),O(le,r.bitangent));var a=e.geometry.boundingSphere;return u(a)&&(e.geometry.boundingSphere=n.transform(a,t,a)),e.modelMatrix=T.clone(T.IDENTITY),e};var de=new a;ae.combineInstances=function(e){for(var t=[],n=[],r=e.length,a=0;a<r;++a){var i=e[a];u(i.geometry)?t.push(i):u(i.westHemisphereGeometry)&&u(i.eastHemisphereGeometry)&&n.push(i)}var o=[];return t.length>0&&o.push(M(t,"geometry")),n.length>0&&(o.push(M(n,"westHemisphereGeometry")),o.push(M(n,"eastHemisphereGeometry"))),o};var fe=new a,me=new a,pe=new a,he=new a;ae.computeNormal=function(e){var t,n=e.indices,r=e.attributes,i=r.position.values,o=r.position.values.length/3,c=n.length,u=new Array(o),l=new Array(c/3),d=new Array(c);for(t=0;t<o;t++)u[t]={indexOffset:0,count:0,currentCount:0};var f=0;for(t=0;t<c;t+=3){var m=n[t],h=n[t+1],_=n[t+2],v=3*m,g=3*h,E=3*_;me.x=i[v],me.y=i[v+1],me.z=i[v+2],pe.x=i[g],pe.y=i[g+1],pe.z=i[g+2],he.x=i[E],he.y=i[E+1],he.z=i[E+2],u[m].count++,u[h].count++,u[_].count++,a.subtract(pe,me,pe),a.subtract(he,me,he),l[f]=a.cross(pe,he,new a),f++}var T=0;for(t=0;t<o;t++)u[t].indexOffset+=T,T+=u[t].count;f=0;var C;for(t=0;t<c;t+=3){C=u[n[t]];var S=C.indexOffset+C.currentCount;d[S]=f,C.currentCount++,C=u[n[t+1]],S=C.indexOffset+C.currentCount,d[S]=f,C.currentCount++,C=u[n[t+2]],S=C.indexOffset+C.currentCount,d[S]=f,C.currentCount++,f++}var A=new Float32Array(3*o);for(t=0;t<o;t++){var x=3*t;if(C=u[t],a.clone(a.ZERO,fe),C.count>0){for(f=0;f<C.count;f++)a.add(fe,l[d[C.indexOffset+f]],fe);a.equalsEpsilon(a.ZERO,fe,y.EPSILON10)&&a.clone(l[d[C.indexOffset]],fe)}a.equalsEpsilon(a.ZERO,fe,y.EPSILON10)&&(fe.z=1),a.normalize(fe,fe),A[x]=fe.x,A[x+1]=fe.y,A[x+2]=fe.z}return e.attributes.normal=new p({componentDatatype:s.FLOAT,componentsPerAttribute:3,values:A}),e};var _e=new a,ve=new a,ge=new a;ae.computeTangentAndBitangent=function(e){var t,n=(e.attributes,e.indices),r=e.attributes.position.values,i=e.attributes.normal.values,o=e.attributes.st.values,c=e.attributes.position.values.length/3,u=n.length,l=new Array(3*c);for(t=0;t<l.length;t++)l[t]=0;var d,f,m;for(t=0;t<u;t+=3){var h=n[t],_=n[t+1],v=n[t+2];d=3*h,f=3*_,m=3*v;var g=2*h,y=2*_,E=2*v,T=r[d],C=r[d+1],S=r[d+2],A=o[g],x=o[g+1],w=o[y+1]-x,b=o[E+1]-x,R=1/((o[y]-A)*b-(o[E]-A)*w),I=(b*(r[f]-T)-w*(r[m]-T))*R,z=(b*(r[f+1]-C)-w*(r[m+1]-C))*R,D=(b*(r[f+2]-S)-w*(r[m+2]-S))*R;l[d]+=I,l[d+1]+=z,l[d+2]+=D,l[f]+=I,l[f+1]+=z,l[f+2]+=D,l[m]+=I,l[m+1]+=z,l[m+2]+=D}var O=new Float32Array(3*c),P=new Float32Array(3*c);for(t=0;t<c;t++){d=3*t,f=d+1,m=d+2;var M=a.fromArray(i,d,_e),N=a.fromArray(l,d,ge),F=a.dot(M,N);a.multiplyByScalar(M,F,ve),a.normalize(a.subtract(N,ve,N),N),O[d]=N.x,O[f]=N.y,O[m]=N.z,a.normalize(a.cross(M,N,N),N),P[d]=N.x,P[f]=N.y,P[m]=N.z}return e.attributes.tangent=new p({componentDatatype:s.FLOAT,componentsPerAttribute:3,values:O}),e.attributes.bitangent=new p({componentDatatype:s.FLOAT,componentsPerAttribute:3,values:P}),e};var ye=new r,Ee=new a,Te=new a,Ce=new a,Se=new r;ae.compressVertices=function(t){var n,i,o=t.attributes.extrudeDirection;if(u(o)){var c=o.values;i=c.length/3;var l=new Float32Array(2*i),d=0;for(n=0;n<i;++n)a.fromArray(c,3*n,Ee),a.equals(Ee,a.ZERO)?d+=2:(Se=e.octEncodeInRange(Ee,65535,Se),l[d++]=Se.x,l[d++]=Se.y);return t.attributes.compressedAttributes=new p({componentDatatype:s.FLOAT,componentsPerAttribute:2,values:l}),delete t.attributes.extrudeDirection,t}var f=t.attributes.normal,m=t.attributes.st,h=u(f),_=u(m);if(!h&&!_)return t;var v,g,y,E,T=t.attributes.tangent,C=t.attributes.bitangent,S=u(T),A=u(C);h&&(v=f.values),_&&(g=m.values),S&&(y=T.values),A&&(E=C.values),i=(h?v.length:g.length)/(h?3:2);var x=i,w=_&&h?2:1;w+=S||A?1:0,x*=w;var b=new Float32Array(x),R=0;for(n=0;n<i;++n){_&&(r.fromArray(g,2*n,ye),b[R++]=e.compressTextureCoordinates(ye));var I=3*n;h&&u(y)&&u(E)?(a.fromArray(v,I,Ee),a.fromArray(y,I,Te),a.fromArray(E,I,Ce),e.octPack(Ee,Te,Ce,ye),b[R++]=ye.x,b[R++]=ye.y):(h&&(a.fromArray(v,I,Ee),b[R++]=e.octEncodeFloat(Ee)),S&&(a.fromArray(y,I,Ee),b[R++]=e.octEncodeFloat(Ee)),A&&(a.fromArray(E,I,Ee),b[R++]=e.octEncodeFloat(Ee)))}return t.attributes.compressedAttributes=new p({componentDatatype:s.FLOAT,componentsPerAttribute:w,values:b}),h&&delete t.attributes.normal,_&&delete t.attributes.st,A&&delete t.attributes.bitangent,S&&delete t.attributes.tangent,t};var Ae=new a,xe=new a,we=new a,be=new a,Re=new a,Ie={positions:new Array(7),indices:new Array(9)},ze=Z(i,4),De=Z(a,3),Oe=Z(r,2),Pe=function(e,t,n,r,a,i,o){var s=a[e]*r.x,c=a[t]*r.y,u=a[n]*r.z;i[o]=s+c+u>y.EPSILON6?1:0},Me=new a,Ne=new a,Fe=new a,Le=new a,Be={position:!0,normal:!0,bitangent:!0,tangent:!0,st:!0,extrudeDirection:!0,applyOffset:!0},Ue=C.fromPointNormal(a.ZERO,a.UNIT_Y),Ge=new a,Ve=new a,ke=new r,qe=new r,He=new a,We=new a,Ye=new a,Xe=new a,je=new a,Ze=new a,Ke=new i,Je=5*y.EPSILON9,Qe=y.EPSILON6;return ae.splitLongitude=function(e){var t=e.geometry,r=t.boundingSphere;if(u(r)){if(r.center.x-r.radius>0||n.intersectPlane(r,C.ORIGIN_ZX_PLANE)!==v.INTERSECTING)return e}if(t.geometryType!==h.NONE)switch(t.geometryType){case h.POLYLINES:re(e);break;case h.TRIANGLES:$(e);break;case h.LINES:te(e)}else V(t),t.primitiveType===S.TRIANGLES?$(e):t.primitiveType===S.LINES&&te(e);return e},ae}),define("Core/OffsetGeometryInstanceAttribute",["./Check","./ComponentDatatype","./defaultValue","./defined","./defineProperties"],function(e,t,n,r,a){"use strict";function i(e,t,r){e=n(e,0),t=n(t,0),r=n(r,0),this.value=new Float32Array([e,t,r])}return a(i.prototype,{componentDatatype:{get:function(){return t.FLOAT}},componentsPerAttribute:{get:function(){return 3}},normalize:{get:function(){return!1}}}),i.fromCartesian3=function(e){return new i(e.x,e.y,e.z)},i.toValue=function(e,t){return r(t)||(t=new Float32Array([e.x,e.y,e.z])),t[0]=e.x,t[1]=e.y,t[2]=e.z,t},i}),define("Scene/PrimitivePipeline",["../Core/BoundingSphere","../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/DeveloperError","../Core/Ellipsoid","../Core/FeatureDetection","../Core/GeographicProjection","../Core/Geometry","../Core/GeometryAttribute","../Core/GeometryAttributes","../Core/GeometryPipeline","../Core/IndexDatatype","../Core/Matrix4","../Core/OffsetGeometryInstanceAttribute","../Core/WebMercatorProjection"],function(e,t,n,r,a,i,o,s,c,u,l,d,f,m,p,h){"use strict";function _(e,t,n){var a,i=!n,o=e.length;if(!i&&o>1){var s=e[0].modelMatrix;for(a=1;a<o;++a)if(!m.equals(s,e[a].modelMatrix)){i=!0;break}}if(i)for(a=0;a<o;++a)r(e[a].geometry)&&d.transformToWorldCoordinates(e[a]);else m.multiplyTransformation(t,e[0].modelMatrix,t)}function v(e,n){var r=e.attributes,a=r.position,i=a.values.length/a.componentsPerAttribute;r.batchId=new u({componentDatatype:t.FLOAT,componentsPerAttribute:1,values:new Float32Array(i)});for(var o=r.batchId.values,s=0;s<i;++s)o[s]=n}function g(e){for(var t=e.length,n=0;n<t;++n){var a=e[n];r(a.geometry)?v(a.geometry,n):r(a.westHemisphereGeometry)&&r(a.eastHemisphereGeometry)&&(v(a.westHemisphereGeometry,n),v(a.eastHemisphereGeometry,n))}}function y(n){var a,i,o=n.instances,s=n.projection,c=n.elementIndexUintSupported,u=n.scene3DOnly,l=n.vertexCacheOptimize,f=n.compressVertices,m=n.modelMatrix,p=o.length;for(a=0;a<p;++a)if(r(o[a].geometry)){o[a].geometry.primitiveType;break}if(_(o,m,u),!u)for(a=0;a<p;++a)r(o[a].geometry)&&d.splitLongitude(o[a]);if(g(o),l)for(a=0;a<p;++a){var h=o[a];r(h.geometry)?(d.reorderForPostVertexCache(h.geometry),d.reorderForPreVertexCache(h.geometry)):r(h.westHemisphereGeometry)&&r(h.eastHemisphereGeometry)&&(d.reorderForPostVertexCache(h.westHemisphereGeometry),d.reorderForPreVertexCache(h.westHemisphereGeometry),d.reorderForPostVertexCache(h.eastHemisphereGeometry),d.reorderForPreVertexCache(h.eastHemisphereGeometry))}var v=d.combineInstances(o);for(p=v.length,a=0;a<p;++a){i=v[a];var y,E=i.attributes;if(u)for(y in E)E.hasOwnProperty(y)&&E[y].componentDatatype===t.DOUBLE&&d.encodeAttribute(i,y,y+"3DHigh",y+"3DLow");else for(y in E)if(E.hasOwnProperty(y)&&E[y].componentDatatype===t.DOUBLE){var T=y+"3D",C=y+"2D";d.projectTo2D(i,y,T,C,s),r(i.boundingSphere)&&"position"===y&&(i.boundingSphereCV=e.fromVertices(i.attributes.position2D.values)),d.encodeAttribute(i,T,T+"High",T+"Low"),d.encodeAttribute(i,C,C+"High",C+"Low")}f&&d.compressVertices(i)}if(!c){var S=[];for(p=v.length,a=0;a<p;++a)i=v[a],S=S.concat(d.fitToUnsignedShortIndices(i));v=S}return v}function E(e,t,n,a){var i,o,s,c=a.length-1;if(c>=0){var u=a[c];i=u.offset+u.count,s=u.index,o=n[s].indices.length}else i=0,s=0,o=n[s].indices.length;for(var l=e.length,d=0;d<l;++d){var f=e[d],m=f[t];if(r(m)){var p=m.indices.length;i+p>o&&(i=0,o=n[++s].indices.length),a.push({index:s,offset:i,count:p}),i+=p}}}function T(e,t){var n=[];return E(e,"geometry",t,n),E(e,"westHemisphereGeometry",t,n),E(e,"eastHemisphereGeometry",t,n),n}function C(e,t){var n=e.attributes;for(var a in n)if(n.hasOwnProperty(a)){var i=n[a];r(i)&&r(i.values)&&t.push(i.values.buffer)}r(e.indices)&&t.push(e.indices.buffer)}function S(e,t){for(var n=e.length,r=0;r<n;++r)C(e[r],t)}function A(t){for(var n=1,a=t.length,i=0;i<a;i++){var o=t[i];if(++n,r(o)){var s=o.attributes;n+=7+2*e.packedLength+(r(o.indices)?o.indices.length:0);for(var c in s)if(s.hasOwnProperty(c)&&r(s[c])){var u=s[c];n+=5+u.values.length}}}return n}function x(e,t){var n=e.length,a=new Float64Array(1+19*n),i=0;a[i++]=n;for(var o=0;o<n;o++){var s=e[o];if(m.pack(s.modelMatrix,a,i),i+=m.packedLength,r(s.attributes)&&r(s.attributes.offset)){var c=s.attributes.offset.value;a[i]=c[0],a[i+1]=c[1],a[i+2]=c[2]}i+=3}return t.push(a.buffer),a}function w(e){for(var t=e,n=new Array(t[0]),a=0,i=1;i<t.length;){var o,s=m.unpack(t,i);i+=m.packedLength,r(t[i])&&(o={offset:new p(t[i],t[i+1],t[i+2])}),i+=3,n[a++]={modelMatrix:s,attributes:o}}return n}function b(t){var n=t.length,a=1+(e.packedLength+1)*n,i=new Float32Array(a),o=0;i[o++]=n;for(var s=0;s<n;++s){var c=t[s];r(c)?(i[o++]=1,e.pack(t[s],i,o)):i[o++]=0,o+=e.packedLength}return i}function R(t){for(var n=new Array(t[0]),r=0,a=1;a<t.length;)1===t[a++]&&(n[r]=e.unpack(t,a)),++r,a+=e.packedLength;return n}if(!o.supportsTypedArrays())return{};var I={};return I.combineGeometry=function(t){var n,a,i,o,s=t.instances,c=s.length,u=!1;c>0&&(n=y(t),n.length>0&&(a=d.createAttributeLocations(n[0]),t.createPickOffsets&&(i=T(s,n))),r(s[0].attributes)&&r(s[0].attributes.offset)&&(o=new Array(c),u=!0));for(var l=new Array(c),f=new Array(c),m=0;m<c;++m){var p=s[m],h=p.geometry;r(h)&&(l[m]=h.boundingSphere,f[m]=h.boundingSphereCV,u&&(o[m]=p.geometry.offsetAttribute));var _=p.eastHemisphereGeometry,v=p.westHemisphereGeometry;r(_)&&r(v)&&(r(_.boundingSphere)&&r(v.boundingSphere)&&(l[m]=e.union(_.boundingSphere,v.boundingSphere)),r(_.boundingSphereCV)&&r(v.boundingSphereCV)&&(f[m]=e.union(_.boundingSphereCV,v.boundingSphereCV)))}return{geometries:n,modelMatrix:t.modelMatrix,attributeLocations:a,pickOffsets:i,offsetInstanceExtend:o,boundingSpheres:l,boundingSpheresCV:f}},I.packCreateGeometryResults=function(t,a){var i=new Float64Array(A(t)),o=[],s={},c=t.length,u=0;i[u++]=c;for(var l=0;l<c;l++){var d=t[l],f=r(d);if(i[u++]=f?1:0,f){i[u++]=d.primitiveType,i[u++]=d.geometryType,i[u++]=n(d.offsetAttribute,-1);var m=r(d.boundingSphere)?1:0;i[u++]=m,m&&e.pack(d.boundingSphere,i,u),u+=e.packedLength;var p=r(d.boundingSphereCV)?1:0;i[u++]=p,p&&e.pack(d.boundingSphereCV,i,u),u+=e.packedLength;var h=d.attributes,_=[];for(var v in h)h.hasOwnProperty(v)&&r(h[v])&&(_.push(v),r(s[v])||(s[v]=o.length,o.push(v)));i[u++]=_.length;for(var g=0;g<_.length;g++){var y=_[g],E=h[y];i[u++]=s[y],i[u++]=E.componentDatatype,i[u++]=E.componentsPerAttribute,i[u++]=E.normalize?1:0,i[u++]=E.values.length,i.set(E.values,u),u+=E.values.length}var T=r(d.indices)?d.indices.length:0;i[u++]=T,T>0&&(i.set(d.indices,u),u+=T)}}return a.push(i.buffer),{stringTable:o,packedData:i}},I.unpackCreateGeometryResults=function(n){for(var r,a=n.stringTable,i=n.packedData,o=new Array(i[0]),s=0,d=1;d<i.length;){if(1===i[d++]){var m=i[d++],p=i[d++],h=i[d++];-1===h&&(h=void 0);var _,v;1===i[d++]&&(_=e.unpack(i,d)),d+=e.packedLength;1===i[d++]&&(v=e.unpack(i,d)),d+=e.packedLength;var g,y,E,T=new l,C=i[d++];for(r=0;r<C;r++){var S=a[i[d++]],A=i[d++];E=i[d++];var x=0!==i[d++];g=i[d++],y=t.createTypedArray(A,g);for(var w=0;w<g;w++)y[w]=i[d++];T[S]=new u({componentDatatype:A,componentsPerAttribute:E,normalize:x,values:y})}var b;if((g=i[d++])>0){var R=y.length/E;for(b=f.createTypedArray(R,g),r=0;r<g;r++)b[r]=i[d++]}o[s++]=new c({primitiveType:m,geometryType:p,boundingSphere:_,boundingSphereCV:v,indices:b,attributes:T,offsetAttribute:h})}else o[s++]=void 0}return o},I.packCombineGeometryParameters=function(e,t){for(var n=e.createGeometryResults,r=n.length,a=0;a<r;a++)t.push(n[a].packedData.buffer);return{createGeometryResults:e.createGeometryResults,packedInstances:x(e.instances,t),ellipsoid:e.ellipsoid,isGeographic:e.projection instanceof s,elementIndexUintSupported:e.elementIndexUintSupported,scene3DOnly:e.scene3DOnly,vertexCacheOptimize:e.vertexCacheOptimize,compressVertices:e.compressVertices,modelMatrix:e.modelMatrix,createPickOffsets:e.createPickOffsets}},I.unpackCombineGeometryParameters=function(e){for(var t=w(e.packedInstances),n=e.createGeometryResults,r=n.length,a=0,o=0;o<r;o++)for(var c=I.unpackCreateGeometryResults(n[o]),u=c.length,l=0;l<u;l++){var d=c[l],f=t[a];f.geometry=d,++a}var p=i.clone(e.ellipsoid);return{instances:t,ellipsoid:p,projection:e.isGeographic?new s(p):new h(p),elementIndexUintSupported:e.elementIndexUintSupported,scene3DOnly:e.scene3DOnly,vertexCacheOptimize:e.vertexCacheOptimize,compressVertices:e.compressVertices,modelMatrix:m.clone(e.modelMatrix),createPickOffsets:e.createPickOffsets}},I.packCombineGeometryResults=function(e,t){r(e.geometries)&&S(e.geometries,t);var n=b(e.boundingSpheres),a=b(e.boundingSpheresCV);return t.push(n.buffer,a.buffer),{geometries:e.geometries,attributeLocations:e.attributeLocations,modelMatrix:e.modelMatrix,pickOffsets:e.pickOffsets,offsetInstanceExtend:e.offsetInstanceExtend,boundingSpheres:n,boundingSpheresCV:a}},I.unpackCombineGeometryResults=function(e){return{geometries:e.geometries,attributeLocations:e.attributeLocations,modelMatrix:e.modelMatrix,pickOffsets:e.pickOffsets,offsetInstanceExtend:e.offsetInstanceExtend,boundingSpheres:R(e.boundingSpheres),boundingSpheresCV:R(e.boundingSpheresCV)}},I}),define("Scene/PrimitiveState",["../Core/freezeObject"],function(e){"use strict";return e({READY:0,CREATING:1,CREATED:2,COMBINING:3,COMBINED:4,COMPLETE:5,FAILED:6})}),define("Scene/SceneMode",["../Core/freezeObject"],function(e){"use strict";var t={MORPHING:0,COLUMBUS_VIEW:1,SCENE2D:2,SCENE3D:3};return t.getMorphTime=function(e){if(e===t.SCENE3D)return 1;if(e!==t.MORPHING)return 0},e(t)}),define("Scene/ShadowMode",["../Core/freezeObject"],function(e){"use strict";var t={DISABLED:0,ENABLED:1,CAST_ONLY:2,RECEIVE_ONLY:3,NUMBER_OF_SHADOW_MODES:4};return t.castShadows=function(e){return e===t.ENABLED||e===t.CAST_ONLY},t.receiveShadows=function(e){return e===t.ENABLED||e===t.RECEIVE_ONLY},t.fromCastReceive=function(e,n){return e&&n?t.ENABLED:e?t.CAST_ONLY:n?t.RECEIVE_ONLY:t.DISABLED},e(t)}),define("Scene/Primitive",["../Core/BoundingSphere","../Core/Cartesian2","../Core/Cartesian3","../Core/Cartesian4","../Core/Cartographic","../Core/clone","../Core/Color","../Core/combine","../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/EncodedCartesian3","../Core/FeatureDetection","../Core/Geometry","../Core/GeometryAttribute","../Core/GeometryAttributes","../Core/GeometryOffsetAttribute","../Core/Intersect","../Core/isArray","../Core/Matrix4","../Core/Plane","../Core/RuntimeError","../Core/subdivideArray","../Core/TaskProcessor","../Renderer/BufferUsage","../Renderer/ContextLimits","../Renderer/DrawCommand","../Renderer/Pass","../Renderer/RenderState","../Renderer/ShaderProgram","../Renderer/ShaderSource","../Renderer/VertexArray","../ThirdParty/when","./BatchTable","./CullFace","./DepthFunction","./PrimitivePipeline","./PrimitiveState","./SceneMode","./ShadowMode"],function(e,t,n,r,a,i,o,s,c,u,l,d,f,m,p,h,_,v,g,y,E,T,C,S,A,x,w,b,R,I,z,D,O,P,M,N,F,L,B,U,G,V,k){"use strict";function q(e){e=u(e,u.EMPTY_OBJECT),this.geometryInstances=e.geometryInstances,this.appearance=e.appearance,this._appearance=void 0,this._material=void 0,this.depthFailAppearance=e.depthFailAppearance,this._depthFailAppearance=void 0,this._depthFailMaterial=void 0,this.modelMatrix=C.clone(u(e.modelMatrix,C.IDENTITY)),this._modelMatrix=new C,this.show=u(e.show,!0),this._vertexCacheOptimize=u(e.vertexCacheOptimize,!1),this._interleave=u(e.interleave,!1),this._releaseGeometryInstances=u(e.releaseGeometryInstances,!0),this._allowPicking=u(e.allowPicking,!0),this._asynchronous=u(e.asynchronous,!0),this._compressVertices=u(e.compressVertices,!0),this.cull=u(e.cull,!0),this.debugShowBoundingVolume=u(e.debugShowBoundingVolume,!1),this.rtcCenter=e.rtcCenter,this.shadows=u(e.shadows,k.DISABLED),this._translucent=void 0,this._state=G.READY,this._geometries=[],this._error=void 0,this._numberOfInstances=0,this._boundingSpheres=[],this._boundingSphereWC=[],this._boundingSphereCV=[],this._boundingSphere2D=[],this._boundingSphereMorph=[],this._perInstanceAttributeCache=[],this._instanceIds=[],this._lastPerInstanceAttributeIndex=0,this._va=[],this._attributeLocations=void 0,this._primitiveType=void 0,this._frontFaceRS=void 0,this._backFaceRS=void 0,this._sp=void 0,this._depthFailAppearance=void 0,this._spDepthFail=void 0,this._frontFaceDepthFailRS=void 0,this._backFaceDepthFailRS=void 0,this._pickIds=[],this._colorCommands=[],this._pickCommands=[],this._readOnlyInstanceAttributes=e._readOnlyInstanceAttributes,this._createBoundingVolumeFunction=e._createBoundingVolumeFunction,this._createRenderStatesFunction=e._createRenderStatesFunction,this._createShaderProgramFunction=e._createShaderProgramFunction,this._createCommandsFunction=e._createCommandsFunction,this._updateAndQueueCommandsFunction=e._updateAndQueueCommandsFunction,this._createPickOffsets=e._createPickOffsets,this._pickOffsets=void 0,this._createGeometryResults=void 0,this._ready=!1,this._readyPromise=N.defer(),this._batchTable=void 0,this._batchTableAttributeIndices=void 0,this._offsetInstanceExtend=void 0,this._batchTableOffsetAttribute2DIndex=void 0,this._batchTableOffsetsUpdated=!1,this._instanceBoundingSpheres=void 0,this._instanceBoundingSpheresCV=void 0,this._tempBoundingSpheres=void 0,this._recomputeBoundingSpheres=!1,this._batchTableBoundingSpheresUpdated=!1,this._batchTableBoundingSphereAttributeIndices=void 0}function H(e){var t,n=e.length,r=[],a=e[0].attributes;for(t in a)if(a.hasOwnProperty(t)&&l(a[t])){for(var i=a[t],o=!0,s=1;s<n;++s){var c=e[s].attributes[t];if(!l(c)||i.componentDatatype!==c.componentDatatype||i.componentsPerAttribute!==c.componentsPerAttribute||i.normalize!==c.normalize){o=!1;break}}o&&r.push(t)}return r}function W(e){var a=e.length;return 1===a?e[0]:2===a?t.unpack(e,0,Ee):3===a?n.unpack(e,0,Te):4===a?r.unpack(e,0,Ce):void 0}function Y(e,t){var n=e.geometryInstances,r=T(n)?n:[n],a=r.length
;if(0!==a){var i,s,d,f,m=H(r),p=m.length,h=[],_={},v={},g=r[0],y=g.attributes;for(s=0;s<p;++s)d=m[s],f=y[d],_[d]=s,h.push({functionName:"czm_batchTable_"+d,componentDatatype:f.componentDatatype,componentsPerAttribute:f.componentsPerAttribute,normalize:f.normalize});-1!==m.indexOf("distanceDisplayCondition")&&(h.push({functionName:"czm_batchTable_boundingSphereCenter3DHigh",componentDatatype:c.FLOAT,componentsPerAttribute:3},{functionName:"czm_batchTable_boundingSphereCenter3DLow",componentDatatype:c.FLOAT,componentsPerAttribute:3},{functionName:"czm_batchTable_boundingSphereCenter2DHigh",componentDatatype:c.FLOAT,componentsPerAttribute:3},{functionName:"czm_batchTable_boundingSphereCenter2DLow",componentDatatype:c.FLOAT,componentsPerAttribute:3},{functionName:"czm_batchTable_boundingSphereRadius",componentDatatype:c.FLOAT,componentsPerAttribute:1}),v.center3DHigh=h.length-5,v.center3DLow=h.length-4,v.center2DHigh=h.length-3,v.center2DLow=h.length-2,v.radius=h.length-1),-1!==m.indexOf("offset")&&(h.push({functionName:"czm_batchTable_offset2D",componentDatatype:c.FLOAT,componentsPerAttribute:3}),i=h.length-1),h.push({functionName:"czm_batchTable_pickColor",componentDatatype:c.UNSIGNED_BYTE,componentsPerAttribute:4,normalize:!0});var E=h.length,C=new F(t,h,a);for(s=0;s<a;++s){var S=r[s];y=S.attributes;for(var A=0;A<p;++A){d=m[A],f=y[d];var x=W(f.value),w=_[d];C.setBatchedAttribute(s,w,x)}var b={primitive:u(S.pickPrimitive,e)};l(S.id)&&(b.id=S.id);var R=t.createPickId(b);e._pickIds.push(R);var I=R.color,z=Ce;z.x=o.floatToByte(I.red),z.y=o.floatToByte(I.green),z.z=o.floatToByte(I.blue),z.w=o.floatToByte(I.alpha),C.setBatchedAttribute(s,E-1,z)}e._batchTable=C,e._batchTableAttributeIndices=_,e._batchTableBoundingSphereAttributeIndices=v,e._batchTableOffsetAttribute2DIndex=i}}function X(e){var t;return t=T(e.values)?e.values.slice(0):new e.values.constructor(e.values),new v({componentDatatype:e.componentDatatype,componentsPerAttribute:e.componentsPerAttribute,normalize:e.normalize,values:t})}function j(t){var n=t.attributes,r=new g;for(var a in n)n.hasOwnProperty(a)&&l(n[a])&&(r[a]=X(n[a]));var i;if(l(t.indices)){var o=t.indices;i=T(o)?o.slice(0):new o.constructor(o)}return new _({attributes:r,indices:i,primitiveType:t.primitiveType,boundingSphere:e.clone(t.boundingSphere)})}function Z(e,t){return{geometry:t,attributes:e.attributes,modelMatrix:C.clone(e.modelMatrix),pickPrimitive:e.pickPrimitive,id:e.id}}function K(e){return P.replaceMain(e,"czm_non_pick_main")+"\nvarying vec4 v_pickColor; \nvoid main() \n{ \n    czm_non_pick_main(); \n    v_pickColor = czm_batchTable_pickColor(batchId); \n}"}function J(e){return"varying vec4 v_pickColor;\n"+e}function Q(e,t){if(!e.compressVertices)return t;var n=-1!==t.search(/attribute\s+vec3\s+normal;/g),r=-1!==t.search(/attribute\s+vec2\s+st;/g);if(!n&&!r)return t;var a=-1!==t.search(/attribute\s+vec3\s+tangent;/g),i=-1!==t.search(/attribute\s+vec3\s+bitangent;/g),o=r&&n?2:1;o+=a||i?1:0;var s=o>1?"vec"+o:"float",c="compressedAttributes",u="attribute "+s+" "+c+";",l="",d="";if(r){l+="vec2 st;\n";d+="    st = czm_decompressTextureCoordinates("+(o>1?c+".x":c)+");\n"}n&&a&&i?(l+="vec3 normal;\nvec3 tangent;\nvec3 bitangent;\n",d+="    czm_octDecode("+c+"."+(r?"yz":"xy")+", normal, tangent, bitangent);\n"):(n&&(l+="vec3 normal;\n",d+="    normal = czm_octDecode("+c+(o>1?"."+(r?"y":"x"):"")+");\n"),a&&(l+="vec3 tangent;\n",d+="    tangent = czm_octDecode("+c+"."+(r&&n?"z":"y")+");\n"),i&&(l+="vec3 bitangent;\n",d+="    bitangent = czm_octDecode("+c+"."+(r&&n?"z":"y")+");\n"));var f=t;return f=f.replace(/attribute\s+vec3\s+normal;/g,""),f=f.replace(/attribute\s+vec2\s+st;/g,""),f=f.replace(/attribute\s+vec3\s+tangent;/g,""),f=f.replace(/attribute\s+vec3\s+bitangent;/g,""),f=P.replaceMain(f,"czm_non_compressed_main"),[u,l,f,"void main() \n{ \n"+d+"    czm_non_compressed_main(); \n}"].join("\n")}function $(e){var t=P.replaceMain(e,"czm_non_depth_clamp_main");return t+="varying float v_WindowZ;\nvoid main() {\n    czm_non_depth_clamp_main();\n    vec4 position = gl_Position;\n    v_WindowZ = (0.5 * (position.z / position.w) + 0.5) * position.w;\n    position.z = min(position.z, position.w);\n    gl_Position = position;\n}\n"}function ee(e){var t=P.replaceMain(e,"czm_non_depth_clamp_main");return t+="varying float v_WindowZ;\nvoid main() {\n    czm_non_depth_clamp_main();\n#if defined(GL_EXT_frag_depth) && !defined(LOG_DEPTH)\n    gl_FragDepthEXT = min(v_WindowZ * gl_FragCoord.w, 1.0);\n#endif\n}\n",t="#ifdef GL_EXT_frag_depth\n#extension GL_EXT_frag_depth : enable\n#endif\n"+t}function te(e,t){e.vertexAttributes}function ne(e,t){return function(){return e[t]}}function re(e,t){var n,r,a,i,o=e._instanceIds;if(e._state===G.READY){n=T(e.geometryInstances)?e.geometryInstances:[e.geometryInstances];var s=e._numberOfInstances=n.length,c=[],d=[];for(a=0;a<s;++a)r=n[a].geometry,o.push(n[a].id),d.push({moduleName:r._workerName,geometry:r});if(!l(Ae))for(Ae=new Array(xe),a=0;a<xe;a++)Ae[a]=new w("createGeometry",Number.POSITIVE_INFINITY);var f;for(d=x(d,xe),a=0;a<d.length;a++){var m=0,p=d[a],h=p.length;for(i=0;i<h;++i)f=p[i],r=f.geometry,l(r.constructor.pack)&&(f.offset=m,m+=u(r.constructor.packedLength,r.packedLength));var _;if(m>0){var v=new Float64Array(m);for(_=[v.buffer],i=0;i<h;++i)f=p[i],r=f.geometry,l(r.constructor.pack)&&(r.constructor.pack(r,v,f.offset),f.geometry=v)}c.push(Ae[a].scheduleTask({subTasks:d[a]},_))}e._state=G.CREATING,N.all(c,function(t){e._createGeometryResults=t,e._state=G.CREATED}).otherwise(function(n){ye(e,t,G.FAILED,n)})}else if(e._state===G.CREATED){var g=[];n=T(e.geometryInstances)?e.geometryInstances:[e.geometryInstances];var y=t.scene3DOnly,E=t.mapProjection,S=we.scheduleTask(U.packCombineGeometryParameters({createGeometryResults:e._createGeometryResults,instances:n,ellipsoid:E.ellipsoid,projection:E,elementIndexUintSupported:t.context.elementIndexUint,scene3DOnly:y,vertexCacheOptimize:e.vertexCacheOptimize,compressVertices:e.compressVertices,modelMatrix:e.modelMatrix,createPickOffsets:e._createPickOffsets},g),g);e._createGeometryResults=void 0,e._state=G.COMBINING,N(S,function(n){var r=U.unpackCombineGeometryResults(n);e._geometries=r.geometries,e._attributeLocations=r.attributeLocations,e.modelMatrix=C.clone(r.modelMatrix,e.modelMatrix),e._pickOffsets=r.pickOffsets,e._offsetInstanceExtend=r.offsetInstanceExtend,e._instanceBoundingSpheres=r.boundingSpheres,e._instanceBoundingSpheresCV=r.boundingSpheresCV,l(e._geometries)&&e._geometries.length>0?(e._recomputeBoundingSpheres=!0,e._state=G.COMBINED):ye(e,t,G.FAILED,void 0)}).otherwise(function(n){ye(e,t,G.FAILED,n)})}}function ae(e,t){var n,r,a=T(e.geometryInstances)?e.geometryInstances:[e.geometryInstances],i=e._numberOfInstances=a.length,o=new Array(i),s=e._instanceIds,c=0;for(r=0;r<i;r++){n=a[r];var u,d=n.geometry;u=l(d.attributes)&&l(d.primitiveType)?j(d):d.constructor.createGeometry(d),o[c++]=Z(n,u),s.push(n.id)}o.length=c;var f=t.scene3DOnly,m=t.mapProjection,p=U.combineGeometry({instances:o,ellipsoid:m.ellipsoid,projection:m,elementIndexUintSupported:t.context.elementIndexUint,scene3DOnly:f,vertexCacheOptimize:e.vertexCacheOptimize,compressVertices:e.compressVertices,modelMatrix:e.modelMatrix,createPickOffsets:e._createPickOffsets});e._geometries=p.geometries,e._attributeLocations=p.attributeLocations,e.modelMatrix=C.clone(p.modelMatrix,e.modelMatrix),e._pickOffsets=p.pickOffsets,e._offsetInstanceExtend=p.offsetInstanceExtend,e._instanceBoundingSpheres=p.boundingSpheres,e._instanceBoundingSpheresCV=p.boundingSpheresCV,l(e._geometries)&&e._geometries.length>0?(e._recomputeBoundingSpheres=!0,e._state=G.COMBINED):ye(e,t,G.FAILED,void 0)}function ie(t,r){var a=t._batchTableAttributeIndices.offset;if(!t._recomputeBoundingSpheres||!l(a))return void(t._recomputeBoundingSpheres=!1);var i,o=t._offsetInstanceExtend,s=t._instanceBoundingSpheres,c=s.length,u=t._tempBoundingSpheres;if(!l(u)){for(u=new Array(c),i=0;i<c;i++)u[i]=new e;t._tempBoundingSpheres=u}for(i=0;i<c;++i){var d=u[i],f=t._batchTable.getBatchedAttribute(i,a,new n);d=s[i].clone(d),pe(d,f,o[i])}var m=[],p=[],h=[];for(i=0;i<c;++i){var _=u[i];_.center.x-_.radius>0||e.intersectPlane(_,S.ORIGIN_ZX_PLANE)!==E.INTERSECTING?m.push(_):(p.push(_),h.push(_))}var v=m[0],g=h[0],y=p[0];for(i=1;i<m.length;i++)v=e.union(v,m[i]);for(i=1;i<h.length;i++)g=e.union(g,h[i]);for(i=1;i<p.length;i++)y=e.union(y,p[i]);var T=[];for(l(v)&&T.push(v),l(g)&&T.push(g),l(y)&&T.push(y),i=0;i<T.length;i++){var C=T[i].clone(t._boundingSpheres[i]);t._boundingSpheres[i]=C,t._boundingSphereCV[i]=e.projectTo2D(C,r.mapProjection,t._boundingSphereCV[i])}q._updateBoundingVolumes(t,r,t.modelMatrix,!0),t._recomputeBoundingSpheres=!1}function oe(t,n){if(l(t._batchTableAttributeIndices.distanceDisplayCondition)&&!t._batchTableBoundingSpheresUpdated){for(var r=t._batchTableBoundingSphereAttributeIndices,a=r.center3DHigh,i=r.center3DLow,o=r.center2DHigh,s=r.center2DLow,c=r.radius,u=n.mapProjection,d=u.ellipsoid,f=t._batchTable,m=t._instanceBoundingSpheres,h=m.length,_=0;_<h;++_){var v=m[_];if(l(v)){var g=t.modelMatrix;l(g)&&(v=e.transform(v,g,ze));var y=v.center,E=v.radius,T=p.fromCartesian(y,be);if(f.setBatchedAttribute(_,a,T.high),f.setBatchedAttribute(_,i,T.low),!n.scene3DOnly){var C=d.cartesianToCartographic(y,Re),S=u.project(C,Ie);T=p.fromCartesian(S,be),f.setBatchedAttribute(_,o,T.high),f.setBatchedAttribute(_,s,T.low)}f.setBatchedAttribute(_,c,E)}}t._batchTableBoundingSpheresUpdated=!0}}function se(t,r){if(l(t._batchTableAttributeIndices.offset)&&!t._batchTableOffsetsUpdated&&!r.scene3DOnly){for(var a=t._batchTableOffsetAttribute2DIndex,i=r.mapProjection,o=i.ellipsoid,s=t._batchTable,c=t._instanceBoundingSpheres,u=c.length,d=0;d<u;++d){var f=c[d];if(l(f)){var m=s.getBatchedAttribute(d,t._batchTableAttributeIndices.offset);if(n.equals(m,n.ZERO))s.setBatchedAttribute(d,a,n.ZERO);else{var p=t.modelMatrix;l(p)&&(f=e.transform(f,p,ze));var h=f.center;h=o.scaleToGeodeticSurface(h,Oe);var _=o.cartesianToCartographic(h,Re),v=i.project(_,Ie),g=n.add(m,h,De);_=o.cartesianToCartographic(g,_);var y=i.project(_,De),E=n.subtract(y,v,De),T=E.x;E.x=E.z,E.z=E.y,E.y=T,s.setBatchedAttribute(d,a,E)}}}t._batchTableOffsetsUpdated=!0}}function ce(t,n){for(var r=t._attributeLocations,a=t._geometries,i=n.scene3DOnly,o=n.context,s=[],c=a.length,u=0;u<c;++u){var d=a[u];if(s.push(M.fromGeometry({context:o,geometry:d,attributeLocations:r,bufferUsage:b.STATIC_DRAW,interleave:t._interleave})),l(t._createBoundingVolumeFunction))t._createBoundingVolumeFunction(n,d);else if(t._boundingSpheres.push(e.clone(d.boundingSphere)),t._boundingSphereWC.push(new e),!i){var f=d.boundingSphereCV.center,m=f.x,p=f.y,h=f.z;f.x=h,f.y=m,f.z=p,t._boundingSphereCV.push(e.clone(d.boundingSphereCV)),t._boundingSphere2D.push(new e),t._boundingSphereMorph.push(new e)}}t._va=s,t._primitiveType=a[0].primitiveType,t.releaseGeometryInstances&&(t.geometryInstances=void 0),t._geometries=void 0,ye(t,n,G.COMPLETE,void 0)}function ue(e,t,n,r){var a,o=n.getRenderState();r?(a=i(o,!1),a.cull={enabled:!0,face:L.BACK},e._frontFaceRS=D.fromCache(a),a.cull.face=L.FRONT,e._backFaceRS=D.fromCache(a)):(e._frontFaceRS=D.fromCache(o),e._backFaceRS=e._frontFaceRS),a=i(o,!1),l(e._depthFailAppearance)&&(a.depthTest.enabled=!1),l(e._depthFailAppearance)&&(o=e._depthFailAppearance.getRenderState(),a=i(o,!1),a.depthTest.func=B.GREATER,r?(a.cull={enabled:!0,face:L.BACK},e._frontFaceDepthFailRS=D.fromCache(a),a.cull.face=L.FRONT,e._backFaceDepthFailRS=D.fromCache(a)):(e._frontFaceDepthFailRS=D.fromCache(a),e._backFaceDepthFailRS=e._frontFaceRS))}function le(e,t,n){var r=t.context,a=e._attributeLocations,i=e._batchTable.getVertexShaderCallback()(n.vertexShaderSource);i=q._appendOffsetToShader(e,i),i=q._appendShowToShader(e,i),i=q._appendDistanceDisplayConditionToShader(e,i,t.scene3DOnly),i=K(i),i=q._updateColorAttribute(e,i,!1),i=Q(e,i),i=q._modifyShaderPosition(e,i,t.scene3DOnly);var o=n.getFragmentShaderSource();o=J(o),e._sp=O.replaceCache({context:r,shaderProgram:e._sp,vertexShaderSource:i,fragmentShaderSource:o,attributeLocations:a}),te(e._sp,a),l(e._depthFailAppearance)&&(i=e._batchTable.getVertexShaderCallback()(e._depthFailAppearance.vertexShaderSource),i=q._appendShowToShader(e,i),i=q._appendDistanceDisplayConditionToShader(e,i,t.scene3DOnly),i=K(i),i=q._updateColorAttribute(e,i,!0),i=Q(e,i),i=q._modifyShaderPosition(e,i,t.scene3DOnly),i=$(i),o=e._depthFailAppearance.getFragmentShaderSource(),o=J(o),o=ee(o),e._spDepthFail=O.replaceCache({context:r,shaderProgram:e._spDepthFail,vertexShaderSource:i,fragmentShaderSource:o,attributeLocations:a}),te(e._spDepthFail,a))}function de(e,t,n,r){var a=l(n)?n._uniforms:void 0,i={},o=t.uniforms;if(l(o))for(var c in o)o.hasOwnProperty(c)&&(i[c]=ne(o,c));var u=s(i,a);return u=e._batchTable.getUniformMapCallback()(u),l(e.rtcCenter)&&(u.u_modifiedModelView=function(){var t=r.context.uniformState.view;return C.multiply(t,e._modelMatrix,Pe),C.multiplyByPoint(Pe,e.rtcCenter,Me),C.setTranslation(Pe,Me,Pe),Pe}),u}function fe(e,t,n,r,a,i,o,s){var c,u=de(e,t,n,s);l(e._depthFailAppearance)&&(c=de(e,e._depthFailAppearance,e._depthFailAppearance.material,s));var d=r?z.TRANSLUCENT:z.OPAQUE,f=a?2:1;f*=l(e._depthFailAppearance)?2:1,i.length=e._va.length*f;for(var m=i.length,p=0,h=0;h<m;++h){var _;a&&(_=i[h],l(_)||(_=i[h]=new I({owner:e,primitiveType:e._primitiveType})),_.vertexArray=e._va[p],_.renderState=e._backFaceRS,_.shaderProgram=e._sp,_.uniformMap=u,_.pass=d,++h),_=i[h],l(_)||(_=i[h]=new I({owner:e,primitiveType:e._primitiveType})),_.vertexArray=e._va[p],_.renderState=e._frontFaceRS,_.shaderProgram=e._sp,_.uniformMap=u,_.pass=d,l(e._depthFailAppearance)&&(a&&(++h,_=i[h],l(_)||(_=i[h]=new I({owner:e,primitiveType:e._primitiveType})),_.vertexArray=e._va[p],_.renderState=e._backFaceDepthFailRS,_.shaderProgram=e._spDepthFail,_.uniformMap=c,_.pass=d),++h,_=i[h],l(_)||(_=i[h]=new I({owner:e,primitiveType:e._primitiveType})),_.vertexArray=e._va[p],_.renderState=e._frontFaceDepthFailRS,_.shaderProgram=e._spDepthFail,_.uniformMap=c,_.pass=d),++p}}function me(e,t,n,r,a,i,o,s){q._updateBoundingVolumes(e,t,a);var c;t.mode===V.SCENE3D?c=e._boundingSphereWC:t.mode===V.COLUMBUS_VIEW?c=e._boundingSphereCV:t.mode===V.SCENE2D&&l(e._boundingSphere2D)?c=e._boundingSphere2D:l(e._boundingSphereMorph)&&(c=e._boundingSphereMorph);var u=t.commandList,d=t.passes;if(d.render||d.pick){var f=e.allowPicking,m=k.castShadows(e.shadows),p=k.receiveShadows(e.shadows),h=n.length,_=s?2:1;_*=l(e._depthFailAppearance)?2:1;for(var v=0;v<h;++v){var g=Math.floor(v/_),y=n[v];y.modelMatrix=a,y.boundingVolume=c[g],y.cull=i,y.debugShowBoundingVolume=o,y.castShadows=m,y.receiveShadows=p,y.pickId=f?"v_pickColor":void 0,u.push(y)}}}function pe(t,r,a){if(a===y.TOP){var i=e.clone(t,Ne),o=e.clone(t,Fe);o.center=n.add(o.center,r,o.center),t=e.union(i,o,t)}else a===y.ALL&&(t.center=n.add(t.center,r,t.center));return t}function he(e,t,n){return function(){var r=e.getBatchedAttribute(t,n),a=e.attributes[n],i=a.componentsPerAttribute,o=c.createTypedArray(a.componentDatatype,i);return l(r.constructor.pack)?r.constructor.pack(r,o,0):o[0]=r,o}}function _e(e,t,n,r,a){return function(i){var o=W(i);e.setBatchedAttribute(t,n,o),"offset"===a&&(r._recomputeBoundingSpheres=!0,r._batchTableOffsetsUpdated=!1)}}function ve(t,r,a){r.boundingSphere={get:function(){var i=t._instanceBoundingSpheres[a];if(l(i)){i=i.clone();var o=t.modelMatrix,s=r.offset;l(s)&&pe(i,n.fromArray(s.get(),0,Le),t._offsetInstanceExtend[a]),l(o)&&(i=e.transform(i,o))}return i}},r.boundingSphereCV={get:function(){return t._instanceBoundingSpheresCV[a]}}}function ge(e,t,n){t.pickId={get:function(){return e._pickIds[n]}}}function ye(e,t,n,r){e._error=r,e._state=n,t.afterRender.push(function(){e._ready=e._state===G.COMPLETE||e._state===G.FAILED,l(r)?e._readyPromise.reject(r):e._readyPromise.resolve(e)})}d(q.prototype,{vertexCacheOptimize:{get:function(){return this._vertexCacheOptimize}},interleave:{get:function(){return this._interleave}},releaseGeometryInstances:{get:function(){return this._releaseGeometryInstances}},allowPicking:{get:function(){return this._allowPicking}},asynchronous:{get:function(){return this._asynchronous}},compressVertices:{get:function(){return this._compressVertices}},ready:{get:function(){return this._ready}},readyPromise:{get:function(){return this._readyPromise.promise}}});var Ee=new t,Te=new n,Ce=new r,Se=/attribute\s+vec(?:3|4)\s+(.*)3DHigh;/g;q._modifyShaderPosition=function(e,t,n){for(var r,a="",i="",o="";null!==(r=Se.exec(t));){var s=r[1],c="vec4 czm_compute"+s[0].toUpperCase()+s.substr(1)+"()";"vec4 czm_computePosition()"!==c&&(a+=c+";\n"),l(e.rtcCenter)?(t=t.replace(/attribute\s+vec(?:3|4)\s+position3DHigh;/g,""),t=t.replace(/attribute\s+vec(?:3|4)\s+position3DLow;/g,""),a+="uniform mat4 u_modifiedModelView;\n",i+="attribute vec4 position;\n",o+=c+"\n{\n    return u_modifiedModelView * position;\n}\n\n",t=t.replace(/czm_modelViewRelativeToEye\s+\*\s+/g,""),t=t.replace(/czm_modelViewProjectionRelativeToEye/g,"czm_projection")):n?o+=c+"\n{\n    return czm_translateRelativeToEye("+s+"3DHigh, "+s+"3DLow);\n}\n\n":(i+="attribute vec3 "+s+"2DHigh;\nattribute vec3 "+s+"2DLow;\n",o+=c+"\n{\n    vec4 p;\n    if (czm_morphTime == 1.0)\n    {\n        p = czm_translateRelativeToEye("+s+"3DHigh, "+s+"3DLow);\n    }\n    else if (czm_morphTime == 0.0)\n    {\n        p = czm_translateRelativeToEye("+s+"2DHigh.zxy, "+s+"2DLow.zxy);\n    }\n    else\n    {\n        p = czm_columbusViewMorph(\n                czm_translateRelativeToEye("+s+"2DHigh.zxy, "+s+"2DLow.zxy),\n                czm_translateRelativeToEye("+s+"3DHigh, "+s+"3DLow),\n                czm_morphTime);\n    }\n    return p;\n}\n\n")}return[a,i,t,o].join("\n")},q._appendShowToShader=function(e,t){if(!l(e._batchTableAttributeIndices.show))return t;return P.replaceMain(t,"czm_non_show_main")+"\nvoid main() \n{ \n    czm_non_show_main(); \n    gl_Position *= czm_batchTable_show(batchId); \n}"},q._updateColorAttribute=function(e,t,n){if(!l(e._batchTableAttributeIndices.color)&&!l(e._batchTableAttributeIndices.depthFailColor))return t;if(-1===t.search(/attribute\s+vec4\s+color;/g))return t;var r=t;return r=r.replace(/attribute\s+vec4\s+color;/g,""),r=n?r.replace(/(\b)color(\b)/g,"$1czm_batchTable_depthFailColor(batchId)$2"):r.replace(/(\b)color(\b)/g,"$1czm_batchTable_color(batchId)$2")},q._updatePickColorAttribute=function(e){var t=e.replace(/attribute\s+vec4\s+pickColor;/g,"");return t=t.replace(/(\b)pickColor(\b)/g,"$1czm_batchTable_pickColor(batchId)$2")},q._appendOffsetToShader=function(e,t){if(!l(e._batchTableAttributeIndices.offset))return t;var n="attribute float batchId;\n";n+="attribute float applyOffset;";var r=t.replace(/attribute\s+float\s+batchId;/g,n),a="vec4 $1 = czm_computePosition();\n";return a+="    if (czm_sceneMode == czm_sceneMode3D)\n",a+="    {\n",a+="        $1 = $1 + vec4(czm_batchTable_offset(batchId) * applyOffset, 0.0);",a+="    }\n",a+="    else\n",a+="    {\n",a+="        $1 = $1 + vec4(czm_batchTable_offset2D(batchId) * applyOffset, 0.0);",a+="    }\n",r=r.replace(/vec4\s+([A-Za-z0-9_]+)\s+=\s+czm_computePosition\(\);/g,a)},q._appendDistanceDisplayConditionToShader=function(e,t,n){if(!l(e._batchTableAttributeIndices.distanceDisplayCondition))return t;var r=P.replaceMain(t,"czm_non_distanceDisplayCondition_main"),a="void main() \n{ \n    czm_non_distanceDisplayCondition_main(); \n    vec2 distanceDisplayCondition = czm_batchTable_distanceDisplayCondition(batchId);\n    vec3 boundingSphereCenter3DHigh = czm_batchTable_boundingSphereCenter3DHigh(batchId);\n    vec3 boundingSphereCenter3DLow = czm_batchTable_boundingSphereCenter3DLow(batchId);\n    float boundingSphereRadius = czm_batchTable_boundingSphereRadius(batchId);\n";return a+=n?"    vec4 centerRTE = czm_translateRelativeToEye(boundingSphereCenter3DHigh, boundingSphereCenter3DLow);\n":"    vec3 boundingSphereCenter2DHigh = czm_batchTable_boundingSphereCenter2DHigh(batchId);\n    vec3 boundingSphereCenter2DLow = czm_batchTable_boundingSphereCenter2DLow(batchId);\n    vec4 centerRTE;\n    if (czm_morphTime == 1.0)\n    {\n        centerRTE = czm_translateRelativeToEye(boundingSphereCenter3DHigh, boundingSphereCenter3DLow);\n    }\n    else if (czm_morphTime == 0.0)\n    {\n        centerRTE = czm_translateRelativeToEye(boundingSphereCenter2DHigh.zxy, boundingSphereCenter2DLow.zxy);\n    }\n    else\n    {\n        centerRTE = czm_columbusViewMorph(\n                czm_translateRelativeToEye(boundingSphereCenter2DHigh.zxy, boundingSphereCenter2DLow.zxy),\n                czm_translateRelativeToEye(boundingSphereCenter3DHigh, boundingSphereCenter3DLow),\n                czm_morphTime);\n    }\n",a+="    float radiusSq = boundingSphereRadius * boundingSphereRadius; \n    float distanceSq; \n    if (czm_sceneMode == czm_sceneMode2D) \n    { \n        distanceSq = czm_eyeHeight2D.y - radiusSq; \n    } \n    else \n    { \n        distanceSq = dot(centerRTE.xyz, centerRTE.xyz) - radiusSq; \n    } \n    distanceSq = max(distanceSq, 0.0); \n    float nearSq = distanceDisplayCondition.x * distanceDisplayCondition.x; \n    float farSq = distanceDisplayCondition.y * distanceDisplayCondition.y; \n    float show = (distanceSq >= nearSq && distanceSq <= farSq) ? 1.0 : 0.0; \n    gl_Position *= show; \n}",r+"\n"+a};var Ae,xe=Math.max(h.hardwareConcurrency-1,1),we=new w("combineGeometry",Number.POSITIVE_INFINITY),be=new p,Re=new a,Ie=new n,ze=new e,De=new n,Oe=new n,Pe=new C,Me=new n;q._updateBoundingVolumes=function(t,n,r,a){var i,o,s;if(a||!C.equals(r,t._modelMatrix))for(C.clone(r,t._modelMatrix),o=t._boundingSpheres.length,i=0;i<o;++i)s=t._boundingSpheres[i],l(s)&&(t._boundingSphereWC[i]=e.transform(s,r,t._boundingSphereWC[i]),n.scene3DOnly||(t._boundingSphere2D[i]=e.clone(t._boundingSphereCV[i],t._boundingSphere2D[i]),t._boundingSphere2D[i].center.x=0,t._boundingSphereMorph[i]=e.union(t._boundingSphereWC[i],t._boundingSphereCV[i])));var c=t.appearance.pixelSize;if(l(c))for(o=t._boundingSpheres.length,i=0;i<o;++i){s=t._boundingSpheres[i];var u=t._boundingSphereWC[i],d=n.camera.getPixelSize(s,n.context.drawingBufferWidth,n.context.drawingBufferHeight),f=d*c;u.radius=s.radius+f}},q.prototype.update=function(e){if(!(!l(this.geometryInstances)&&0===this._va.length||l(this.geometryInstances)&&T(this.geometryInstances)&&0===this.geometryInstances.length||!l(this.appearance)||e.mode!==V.SCENE3D&&e.scene3DOnly||!e.passes.render&&!e.passes.pick)){if(l(this._error))throw this._error;if(this._state!==G.FAILED){var t=e.context;if(l(this._batchTable)||Y(this,t),this._batchTable.attributes.length>0){if(0===R.maximumVertexTextureImageUnits)throw new A("Vertex texture fetch support is required to render primitives with per-instance attributes. The maximum number of vertex texture image units must be greater than zero.");this._batchTable.update(e)}if(this._state!==G.COMPLETE&&this._state!==G.COMBINED&&(this.asynchronous?re(this,e):ae(this,e)),this._state===G.COMBINED&&(oe(this,e),se(this,e),ce(this,e)),this.show&&this._state===G.COMPLETE){this._batchTableOffsetsUpdated||se(this,e),this._recomputeBoundingSpheres&&ie(this,e);var n=this.appearance,r=n.material,a=!1,i=!1;this._appearance!==n?(this._appearance=n,this._material=r,a=!0,i=!0):this._material!==r&&(this._material=r,i=!0);var o=this.depthFailAppearance,s=l(o)?o.material:void 0;this._depthFailAppearance!==o?(this._depthFailAppearance=o,this._depthFailMaterial=s,a=!0,i=!0):this._depthFailMaterial!==s&&(this._depthFailMaterial=s,i=!0);var c=this._appearance.isTranslucent();this._translucent!==c&&(this._translucent=c,a=!0),l(this._material)&&this._material.update(t);var d=n.closed&&c;if(a){u(this._createRenderStatesFunction,ue)(this,t,n,d)}if(i){u(this._createShaderProgramFunction,le)(this,e,n)}if(a||i){u(this._createCommandsFunction,fe)(this,n,r,c,d,this._colorCommands,this._pickCommands,e)}u(this._updateAndQueueCommandsFunction,me)(this,e,this._colorCommands,this._pickCommands,this.modelMatrix,this.cull,this.debugShowBoundingVolume,d)}}}};var Ne=new e,Fe=new e,Le=new n;return q.prototype.getGeometryInstanceAttributes=function(e){for(var t=-1,n=this._lastPerInstanceAttributeIndex,r=this._instanceIds,a=r.length,i=0;i<a;++i){var o=(n+i)%a;if(e===r[o]){t=o;break}}if(-1!==t){var s=this._perInstanceAttributeCache[t];if(l(s))return s;var c=this._batchTable,u=this._batchTableAttributeIndices;s={};var f={};for(var m in u)if(u.hasOwnProperty(m)){var p=u[m];f[m]={get:he(c,t,p)};var h=!0,_=this._readOnlyInstanceAttributes;if(h&&l(_)){a=_.length;for(var v=0;v<a;++v)if(m===_[v]){h=!1;break}}h&&(f[m].set=_e(c,t,p,this,m))}return ve(this,f,t),ge(this,f,t),d(s,f),this._lastPerInstanceAttributeIndex=t,this._perInstanceAttributeCache[t]=s,s}},q.prototype.isDestroyed=function(){return!1},q.prototype.destroy=function(){var e,t;this._sp=this._sp&&this._sp.destroy(),this._pickSP=this._pickSP&&this._pickSP.destroy();var n=this._va;for(e=n.length,t=0;t<e;++t)n[t].destroy();this._va=void 0;var r=this._pickIds;for(e=r.length,t=0;t<e;++t)r[t].destroy();return this._pickIds=void 0,this._batchTable=this._batchTable&&this._batchTable.destroy(),this._instanceIds=void 0,this._perInstanceAttributeCache=void 0,this._attributeLocations=void 0,f(this)},q}),define("Scene/GroundPolylinePrimitive",["../Core/ApproximateTerrainHeights","../Core/ComponentDatatype","../Core/defaultValue","../Core/defined","../Core/defineProperties","../Core/destroyObject","../Core/DeveloperError","../Core/GeometryInstance","../Core/GeometryInstanceAttribute","../Core/GroundPolylineGeometry","../Core/isArray","../Shaders/PolylineShadowVolumeVS","../Shaders/PolylineShadowVolumeFS","../Shaders/PolylineShadowVolumeMorphVS","../Shaders/PolylineShadowVolumeMorphFS","../Renderer/DrawCommand","../Renderer/Pass","../Renderer/RenderState","../Renderer/ShaderProgram","../Renderer/ShaderSource","../ThirdParty/when","./BlendingState","./CullFace","./PolylineColorAppearance","./PolylineMaterialAppearance","./Primitive","./SceneMode"],function(e,t,n,r,a,i,o,s,c,u,l,d,f,m,p,h,_,v,g,y,E,T,C,S,A,x,w){"use strict";function b(e){e=n(e,n.EMPTY_OBJECT),this.geometryInstances=e.geometryInstances,this._hasPerInstanceColors=!0;var t=e.appearance;r(t)||(t=new A),this.appearance=t,this.show=n(e.show,!0),this.debugShowBoundingVolume=n(e.debugShowBoundingVolume,!1),this._debugShowShadowVolume=n(e.debugShowShadowVolume,!1),this._primitiveOptions={geometryInstances:void 0,appearance:void 0,vertexCacheOptimize:!1,interleave:n(e.interleave,!1),releaseGeometryInstances:n(e.releaseGeometryInstances,!0),allowPicking:n(e.allowPicking,!0),asynchronous:n(e.asynchronous,!0),compressVertices:!1,_createShaderProgramFunction:void 0,_createCommandsFunction:void 0,_updateAndQueueCommandsFunction:void 0},this._zIndex=void 0,this._ready=!1,this._readyPromise=E.defer(),this._primitive=void 0,this._sp=void 0,this._sp2D=void 0,this._spMorph=void 0,this._renderState=v.fromCache({cull:{enabled:!0},blending:T.ALPHA_BLEND,depthMask:!1}),this._renderStateMorph=v.fromCache({cull:{enabled:!0,face:C.FRONT},depthTest:{enabled:!0},blending:T.ALPHA_BLEND,depthMask:!1})}function R(t,n,a){var i=n.context,o=t._primitive,s=o._attributeLocations,c=o._batchTable.getVertexShaderCallback()(d);c=x._appendShowToShader(o,c),c=x._appendDistanceDisplayConditionToShader(o,c),c=x._modifyShaderPosition(t,c,n.scene3DOnly);var u=o._batchTable.getVertexShaderCallback()(m);u=x._appendShowToShader(o,u),u=x._appendDistanceDisplayConditionToShader(o,u),u=x._modifyShaderPosition(t,u,n.scene3DOnly);var l=o._batchTable.getVertexShaderCallback()(f),h=["ENABLE_GL_POSITION_LOG_DEPTH_AT_HEIGHT","GLOBE_MINIMUM_ALTITUDE "+n.mapProjection.ellipsoid.minimumRadius.toFixed(1)],_="",v="";r(a.material)?(v=r(a.material)?a.material.shaderSource:"",-1!==v.search(/varying\s+float\s+v_polylineAngle;/g)&&h.push("ANGLE_VARYING"),-1!==v.search(/varying\s+float\s+v_width;/g)&&h.push("WIDTH_VARYING")):_="PER_INSTANCE_COLOR",h.push(_);var E=t.debugShowShadowVolume?["DEBUG_SHOW_VOLUME",_]:[_],T=new y({defines:h,sources:[c]}),C=new y({defines:E,sources:[v,l]});t._sp=g.replaceCache({context:i,shaderProgram:o._sp,vertexShaderSource:T,fragmentShaderSource:C,attributeLocations:s});var S=i.shaderCache.getDerivedShaderProgram(t._sp,"2dColor");if(!r(S)){var A=new y({defines:h.concat(["COLUMBUS_VIEW_2D"]),sources:[c]});S=i.shaderCache.createDerivedShaderProgram(t._sp,"2dColor",{context:i,shaderProgram:t._sp2D,vertexShaderSource:A,fragmentShaderSource:C,attributeLocations:s})}t._sp2D=S;var w=i.shaderCache.getDerivedShaderProgram(t._sp,"MorphColor");if(!r(w)){var b=new y({defines:h.concat(["MAX_TERRAIN_HEIGHT "+e._defaultMaxTerrainHeight.toFixed(1)]),sources:[u]});l=o._batchTable.getVertexShaderCallback()(p);var R=new y({defines:E,sources:[v,l]});w=i.shaderCache.createDerivedShaderProgram(t._sp,"MorphColor",{context:i,shaderProgram:t._spMorph,vertexShaderSource:b,fragmentShaderSource:R,attributeLocations:s})}t._spMorph=w}function I(e,t,n,a,i,o){var s=e._primitive,c=s._va.length;i.length=c,o.length=c;var u,l,d=t instanceof S,f=d?{}:n._uniforms,m=s._batchTable.getUniformMapCallback()(f),p=_.TERRAIN_CLASSIFICATION;for(u=0;u<c;u++){var v=s._va[u];l=i[u],r(l)||(l=i[u]=new h({owner:e,primitiveType:s._primitiveType})),l.vertexArray=v,l.renderState=e._renderState,l.shaderProgram=e._sp,l.uniformMap=m,l.pass=p,l.pickId="czm_batchTable_pickColor(v_endPlaneNormalEcAndBatchId.w)";var g=l.derivedCommands.color2D;r(g)||(g=h.shallowClone(l),l.derivedCommands.color2D=g),g.vertexArray=v,g.renderState=e._renderState,g.shaderProgram=e._sp2D,g.uniformMap=m,g.pass=p,g.pickId="czm_batchTable_pickColor(v_endPlaneNormalEcAndBatchId.w)",g=l.derivedCommands.colorMorph,r(g)||(g=h.shallowClone(l),l.derivedCommands.colorMorph=g),g.vertexArray=v,g.renderState=e._renderStateMorph,g.shaderProgram=e._spMorph,g.uniformMap=m,g.pass=p,g.pickId="czm_batchTable_pickColor(v_batchId)"}}function z(e,t,n,a,i,o,s){var c=e._primitive;x._updateBoundingVolumes(c,t,i);var u;t.mode===w.SCENE3D?u=c._boundingSphereWC:t.mode===w.COLUMBUS_VIEW?u=c._boundingSphereCV:t.mode===w.SCENE2D&&r(c._boundingSphere2D)?u=c._boundingSphere2D:r(c._boundingSphereMorph)&&(u=c._boundingSphereMorph);var l=t.commandList,d=t.passes;if(d.render||d.pick&&c.allowPicking)for(var f=n.length,m=0;m<f;++m){var p=n[m];t.mode===w.MORPHING&&p.shaderProgram!==e._spMorph?p=p.derivedCommands.colorMorph:t.mode!==w.SCENE3D&&p.shaderProgram!==e._sp2D&&(p=p.derivedCommands.color2D),p.modelMatrix=i,p.boundingVolume=u[m],p.cull=o,p.debugShowBoundingVolume=s,l.push(p)}}return a(b.prototype,{interleave:{get:function(){return this._primitiveOptions.interleave}},releaseGeometryInstances:{get:function(){return this._primitiveOptions.releaseGeometryInstances}},allowPicking:{get:function(){return this._primitiveOptions.allowPicking}},asynchronous:{get:function(){return this._primitiveOptions.asynchronous}},ready:{get:function(){return this._ready}},readyPromise:{get:function(){return this._readyPromise.promise}},debugShowShadowVolume:{get:function(){return this._debugShowShadowVolume}}}),b._initialized=!1,b._initPromise=void 0,b.initializeTerrainHeights=function(){var t=b._initPromise;return r(t)?t:(b._initPromise=e.initialize().then(function(){b._initialized=!0}),b._initPromise)},b.prototype.update=function(e){if(r(this._primitive)||r(this.geometryInstances)){if(!b._initialized)return void b.initializeTerrainHeights();var n,a=this,i=this._primitiveOptions;if(!r(this._primitive)){var d,f=l(this.geometryInstances)?this.geometryInstances:[this.geometryInstances],m=f.length,p=new Array(m);for(n=0;n<m;++n)if(d=f[n].attributes,!r(d)||!r(d.color)){this._hasPerInstanceColors=!1;break}for(n=0;n<m;++n){var h=f[n];d={};var _=h.attributes;for(var v in _)_.hasOwnProperty(v)&&(d[v]=_[v]);r(d.width)||(d.width=new c({componentDatatype:t.UNSIGNED_BYTE,componentsPerAttribute:1,value:[h.geometry.width]})),h.geometry._scene3DOnly=e.scene3DOnly,u.setProjectionAndEllipsoid(h.geometry,e.mapProjection),p[n]=new s({
geometry:h.geometry,attributes:d,id:h.id})}i.geometryInstances=p,i.appearance=this.appearance,i._createShaderProgramFunction=function(e,t,n){R(a,t,n)},i._createCommandsFunction=function(e,t,n,r,i,o,s){I(a,t,n,r,o,s)},i._updateAndQueueCommandsFunction=function(e,t,n,r,i,o,s,c){z(a,t,n,r,i,o,s)},this._primitive=new x(i),this._primitive.readyPromise.then(function(e){a._ready=!0,a.releaseGeometryInstances&&(a.geometryInstances=void 0);var t=e._error;r(t)?a._readyPromise.reject(t):a._readyPromise.resolve(a)})}if(this.appearance instanceof S&&!this._hasPerInstanceColors)throw new o("All GeometryInstances must have color attributes to use PolylineColorAppearance with GroundPolylinePrimitive.");this._primitive.appearance=this.appearance,this._primitive.show=this.show,this._primitive.debugShowBoundingVolume=this.debugShowBoundingVolume,this._primitive.update(e)}},b.prototype.getGeometryInstanceAttributes=function(e){return this._primitive.getGeometryInstanceAttributes(e)},b.isSupported=function(e){return e.frameState.context.depthTexture},b.prototype.isDestroyed=function(){return!1},b.prototype.destroy=function(){return this._primitive=this._primitive&&this._primitive.destroy(),this._sp=this._sp&&this._sp.destroy(),this._sp2D=void 0,this._spMorph=void 0,i(this)},b}),define("Workers/createGroundPolylineGeometry",["../Core/defined","../Core/GroundPolylineGeometry","../Scene/GroundPolylinePrimitive"],function(e,t,n){"use strict";function r(r,a){return n.initializeTerrainHeights().then(function(){return e(a)&&(r=t.unpack(r,a)),t.createGeometry(r)})}return r})}();